<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="SetVolume" id="3" localization="8" tooltip="" x="216" y="219">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# -*- encoding: UTF-8 -*-
""" Say 'hello, you' each time a human face is detected

"""

from naoqi import ALProxy
from naoqi import ALBroker
from naoqi import ALModule


# Global variables. Module names must be global otherwise the callback functions will report for example:
# 'python object not found FaceDetector'.
SetVolume = None


class SetVolumeModule(ALModule):
    """ A simple module able to react to sensor events.
    Leave this doc string else this module will not be bound!

    """
    def __init__(self, name):
        ALModule.__init__(self, name)
        # No need for IP and port here because
        # we have our Python broker connected to NAOqi broker
        self.memory = ALProxy("ALMemory")
        # Unsubscribe to event if still subscribed.
        try:
            self.memory.unsubscribeToEvent("FrontTactilTouched", "SetVolume")
            self.memory.unsubscribeToEvent("RearTactilTouched", "SetVolume")
        except Exception, e:
            pass
        self.memory.subscribeToEvent("FrontTactilTouched", "SetVolume", "onFrontTouched")
        self.memory.subscribeToEvent("RearTactilTouched", "SetVolume", "onRearTouched")
        self.audiodevice = ALProxy("ALAudioDevice")
        self.tts = ALProxy("ALTextToSpeech")

    def onFrontTouched(self, strVarName, value):
        # Only react on touch down event.
        if value == 1.0:
            self.audiodevice.setOutputVolume(min(100, self.audiodevice.getOutputVolume() + 10.0))
            self.tts.say("volume up")

    def onRearTouched(self, strVarName, value):
        # Only react on touch down event.
        if value == 1.0:
            self.audiodevice.setOutputVolume(max(0, self.audiodevice.getOutputVolume() - 10.0))
            self.tts.say("volume down")


class MyClass(GeneratedClass):
    def __init__(self):
        global SetVolume
        GeneratedClass.__init__(self)
        # Warning: module names must be global variables.
        # The name given to the constructor must be the name of the variable.
        SetVolume = SetVolumeModule("SetVolume")

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        # Put clean-up code here.
        # This method will be called when the onInput_onStart() thread ends or when the behavior is stopped.
        # The behavior can be stopped in Choregraphe using the red 'Stop' button, or by using the 'Run Behavior'
        # box and activating the 'onStop' input. In Python this means the ALBehaviorManager method stopBehavior() is called.
        # Important to call exit on the modules created, otherwise the next time ALModule.__init__(self, name)
        # will fail because the modules are already registered!
        # Use try...except here in case the (one of the) modules have already exitted.
        try:
            SetVolume.exit()
        except Exception, e:
            pass

    def onInput_onStart(self):
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Box name="Choice (light)" id="6" localization="8" tooltip="Launch speech recognition, and wait for one of a defined number of expected answers (written in the table of the box). the robot will prompt the speaker if he cannot understand and give suggestions as to available answers and other ways of selecting your choice. e.g. The tactile sensor on his head.&#x0A;&#x0A;Note that you must open this box to enter the question text and the available answers.&#x0A;&#x0A;This is a lighter version of Choice box from standard library which has no animation embedded.&#x0A;&#x0A;V1.1.0&#x0A;" x="303" y="12">
                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Output name="output_1" type="1" type_size="1" nature="2" inner="0" tooltip="Answer recognized." id="5" />
                            <Output name="output_2" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                            <Output name="output_3" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Choice" id="1" localization="8" tooltip="Launch the speech recognition waiting for a defined number of predicted answers (written in the table on the box). Available help&#x0A;from the robot which gives some possible answers and attracts attention on the other modalities to answer (head tactile sensor).&#x0A;&#x0A;You can edit a choice by left double-clicking on the line. You can add a choice by right clicking on a line and selecting &apos;Insert a&#x0A;row&apos;. You can delete a choice by right clicking on a line and selecting &apos;Remove a row&apos;. You can also write several alternative&#x0A;answers for the same choice by writing them on the line separated by the character &apos;/&apos;.&#x0A;Ex: apple pie / pie / apple&#x0A;Then if any of these answers (&apos;apple pie&apos;, &apos;pie&apos; or &apos;apple&apos;) are said, the corresponding output will be activated. Indeed, each output&#x0A;which name begins with &apos;output_&apos; correspond to the choice in the list placed just in front of the output.&#x0A;&#x0A;Moreover, you have advanced options appearing when you click on the blue cross. Then you can make the robot calculate the threshold&#x0A;average of choices with the 1/2/3 button. Actually, it will calculate recognition threshold of each alternative answer and put them from&#x0A;highest to smallest threshold. The threshold displayed in front of each choice then is the highest&apos;s." plugin="ui_choice_plugin" x="312" y="51">
                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
# -*- coding: utf-8 -*-
# script of the Choice box v8.8
# @author Desktop Application team
# (c) 2011 Aldebaran Robotics

import os
import time
import random
import thread
import mutex
import xml.dom.minidom

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

        # PROXIES INITIALIZATION
        self.tts = ALProxy("ALTextToSpeech")
        self.ttsStop = ALProxy("ALTextToSpeech", True) #Create another proxy as wait is blocking if audioout is remote
        self.memory = ALProxy("ALMemory")
        try:
            self.asr = ALProxy("ALSpeechRecognition")
            self.ad = ALProxy("ALAudioDevice")
            self.player = ALProxy("ALAudioPlayer")
            self.dcm = ALProxy( "DCM" )
        except:
            self.logger.warning("cannot find ALSpeechRecognition, choice box will run in simulation mode")
            self.asr = None
            self.ad = None
            self.player = None
            self.dcm = None

        self.leds = ALProxy( "ALLeds" )
        # VARIABLES INITIALIZATION
        self.aIdsTTS = []
        self.bSentencesInitialized = False
        self.bMustStop = False
        self.bIsRunning = False
        self.bGoOut = False
        self.nCountNoReply = 0
        self.nCountFailure = 0
        self.aFrameNumbers = {"end" : 1,
                              "headDown" : 10,
                              "bodyTalk" : 20,
                              "reco" : 30,
                              "headCheck" : 40,
                              "helpTactileSensor" : 50,
                              "notUnderstood" : 70}
        self.nFrameNumber = self.aFrameNumbers["end"]
        self.bInConfirmation = False
        self.bVocabularyLoaded = False
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        self.bHasAlreadyHearingEyes = False
        self.bInTactileSensorMenu = False
        self.bExternChoices = False
        self.bBrainAnimPaused = False
        self.rTimeLastChoiceSaid = -1.
        self.bIsSayingChoice = False
        self.nIndexChoice = 0
        self.sRecoInterruption = "" # = "wordRecognised" or "timeout" or "onStop" or "onTactileSensor"
        self.sPreviousAnswer = ""
        self.rTimeWhenActionMadeInTactileMenu = -1.
        # variables used for the tactile sensor
        self.nFront = 0
        self.nMiddle = 0
        self.nRear = 0
        self.bSeqStarted = False
        self.bIsStoringParam = False
        self.bPressed = False
        self.mutexProcessCurrentState = mutex.mutex()
        self.mutexTactilTouched = mutex.mutex()
        self.mutexCheckIfSeqsCorrespondingLeft = mutex.mutex()
        self.bSeqStarted = False
        # assuming that every sequence is after [0, 0, 0]
        # and then start with one tactil sensor activated
        # timeout must be either a number (int or float) not equal to 0 or an array of two numbers not equal to 0, a negative one and a positive one
        # a negative timeout means a minimum time that has to ellapse before the next step
        # a positive timeout means a maximum time before the next step must show up
        self.aSeqs = [{"name" : "Tap", "statesAndTimeout" : [ "1+", 0.35, "2+", 0.45, "0" ]},
                      {"name" : "TapFront", "statesAndTimeout" : [ "F", 1, "0" ]},
                      {"name" : "LongFront", "statesAndTimeout" : [ "F", -1, "F" ]},
                      {"name" : "TapMiddle", "statesAndTimeout" : [ "M", 1, "0" ]},
                      {"name" : "LongMiddle", "statesAndTimeout" : [ "M", -1, "M" ]},
                      {"name" : "TapRear", "statesAndTimeout" : [ "R", 1, "0" ]},
                      {"name" : "LongRear", "statesAndTimeout" : [ "R", -1, "R" ]},
                      {"name" : "CalmDown", "statesAndTimeout" : [ "1+", 0.5, "2+", -1, "2+" ]}]
        # sequences initialization
        aSeqsTemp = []
        for seq in self.aSeqs:
            try: # ensure that the sequence has at least a name and states and timeout defined
                seq["name"]
                seq["statesAndTimeout"]
                aSeqsTemp.append(seq)
            except:
                pass
        self.aSeqs = aSeqsTemp
        for seq in self.aSeqs:
            states = range( len( seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2] ) )
            i = 0
            for state in seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2]:
                states[i] = self.convertToArrayOfPossibleStates(state)
                i += 1
            seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2] = states
        self.aDetectedSeqs = []
        self.aDetectedSeqs.extend(self.aSeqs)
        # end - variables used for the tactile sensor
        self.aChoices = []
        self.aChoiceIndexes = []
        # parameters which can be changed from the parameters edition window
        self.sQuestion = ""
        self.nTimeoutReco = 6
        self.nTimeoutRecoConfirmation = 6
        self.nTimeoutTactile = 10
        self.nMaxCountNoReply = 3
        self.nMaxCountFailure = 5
        self.arUnderstoodThreshold = [0.0, 1.0] # range of self.rUnderstoodThreshold
        self.arConfirmationThreshold = [0.0, 1.0] # range of self.rConfirmationThreshold (must be higher than self.arUnderstoodThreshold)
        self.rUnderstoodThreshold = 0.2
        self.rConfirmationThreshold = 0.4
        self.bActivateEyesLight = True
        self.bActivateEarsLight = True
        self.bActivateBrainLight = True
        self.bActivateHelpWhenFailure = True
        self.bRepeatValidatedChoice = True
        self.bActivateDefaultChoiceHelp = True
        self.bActivateDefaultChoiceRepeat = True
        self.bActivateDefaultChoiceExit = True
        self.BIND_PYTHON(self.getName(), "onTactilTouched")
        self.BIND_PYTHON(self.getName(), "onWordRecognized")
        self.BIND_PYTHON(self.getName(), "onSpeechDetected")


# FUNCTIONS ===============================================================================================

    def onLoad(self):
        # initialize sentences for each language
        if( not self.bSentencesInitialized ):
            self.initializeSentences()
            self.bSentencesInitialized = True

# XML PARSER FOR SENTENCES INITIALIZATION
    def initializeSentences(self):
        "Initialize necessary sentences in each language."
        framemanager = ALProxy("ALFrameManager")
        filename = framemanager.getBehaviorPath(self.behaviorId) + self.tryGetParameter( "Sentences file", "/Aldebaran/choice_sentences.xml" )
        if not self.fileExists(filename):
            raise RuntimeError("File " + filename + " could not be found. Please update your Choice box with a newer one from Choregraphe")
        try:
            doc = self.getFileContents( filename )
            dom = xml.dom.minidom.parseString( doc )
        except Exception as e:
            raise Exception( "The " + filename + " file is not in the right format. Check the special characters and that the syntax is correct.\n" + str(e) )
        try:
            tag = "sentences"
            mainBlock = dom.getElementsByTagName( tag )[0]
            tag = "translation"
            aTranslations = mainBlock.getElementsByTagName( tag )
            self.aAllWords = {}
            self.aAllSentences = {}
            for sTranslation in aTranslations:
                sLanguage = sTranslation.getAttribute("language")
                tag = "speechReco"
                blockSpeechReco = sTranslation.getElementsByTagName( tag )[0]
                # variable used for the speech recognition
                self.aAllWords[sLanguage] = {}
                aKinds = ["negative",
                          "positive",
                          "help",
                          "exit",
                          "repeat"]
                for sKind in aKinds:
                    tag = sKind
                    blockWordsForThisKind = blockSpeechReco.getElementsByTagName( sKind )[0]
                    self.aAllWords[sLanguage][sKind] = blockWordsForThisKind.getAttribute( "text" ).encode("utf-8").split("/")
                # end - variable used for the speech recognition
                tag = "tts"
                blockTTS = sTranslation.getElementsByTagName( tag )[0]
                # variable used for the Text-To-Speech
                self.aAllSentences[sLanguage] = {}
                aKinds = ["confirmation",
                          "enumMarks",
                          "helpEnumChoices",
                          "helpEnumDefault",
                          "helpTactile",
                          "notUnderstood",
                          "noQuestion",
                          "notUnderstoodAnims"]
                for sKind in aKinds:
                    tag = sKind
                    blockSentencesForThisKind = blockTTS.getElementsByTagName( sKind )[0]
                    self.aAllSentences[sLanguage][sKind] = blockSentencesForThisKind.getAttribute( "text" ).encode("utf-8").split("/")
                # end - variable used for the Text-To-Speech
        except Exception as e:
            raise Exception( "The " + filename + " file is not in the right format. Check that the '" + tag + "' tag is defined and with the right format.\n" + str(e) )

        # choices
        # !!! don't remove any comments from this variable !!!
        # (they are here to make the plugin work)
        self.aListAllChoices = {"Arabic": ["نعم", "لا", "", ""], "Brazilian": ["sim", "não", "", ""], "Chinese": ["是", "不是", "", ""], "Czech": ["ano", "ne", "", ""], "Danish": ["ja", "nej", "", ""], "Dutch": ["ja", "nee", "", ""], "English": ["greet people", "tai chi", "macarena", ""], "Finnish": ["kyllä", "ei", "", ""], "French": ["oui", "non", "", ""], "German": ["ja", "nein", "", ""], "Italian": ["sì", "no", "", ""], "Japanese": ["はい", "いいえ", "", ""], "Korean": ["예", "아니", "", ""], "Polish": ["tak", "nie", "", ""], "Portuguese": ["sim", "não", "", ""], "Russian": ["да", "нет", "", ""], "Spanish": ["si", "no", "", ""], "Swedish": ["ja", "ingen", "", ""], "Turkish": ["evet", "hayır", "", ""]
                               }
        # end - choices

# INPUTS ACTIVATION PROCESSING ------------------------------------------------------------------------------
    def onInput_onStart(self, question=None):
        "Initialize variables and start box behaviour."
        self.logger.debug( "Input onStart stimulated." )
        if( self.bIsRunning): # to avoid starting the process twice
            return
        self.bIsRunning = True
        if(self.asr != None):
            self.asr.setVisualExpression( False )
        language = self.tts.getLanguage()
        if(self.asr != None):
            self.asr.setLanguage( language )
        try:
            self.aAllWords[language]
            self.aAllSentences[language]
        except:
            raise Exception( "The current language is not supported by this Choice box. It is probably deprecated. Try to use the one supplied in Choregraphe library instead." )
        self.asNegativeWords = self.aAllWords[language]["negative"]
        self.asPositiveWords = self.aAllWords[language]["positive"]
        self.asHelpWords = self.aAllWords[language]["help"]
        self.asExitWords = self.aAllWords[language]["exit"]
        self.asRepeatWords = self.aAllWords[language]["repeat"]
        self.bGoOut = False
        self.bVocabularyLoaded = False
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        self.bHasAlreadyHearingEyes = False
        self.sRecoInterruption = ""
        self.sPreviousAnswer = ""
        self.bMustStop = False
        self.nCountNoReply = 0
        self.nCountFailure = 0
        self.nFrameNumber = self.aFrameNumbers["end"]
        self.beginTime = time.time()
        self.bInConfirmation = False
        self.bInTactileSensorMenu = False
        self.bBrainAnimPaused = False
        self.bPressed = False
        self.rTimeWhenActionMadeInTactileMenu = -1.
        self.nFront = 0
        self.nMiddle = 0
        self.nRear = 0
        self.bSeqStarted = False
        self.bIsStoringParam = False
        self.rUnderstoodThreshold = self.tryGetParameter( "Minimum threshold to understand", 0.2 )
        self.rConfirmationThreshold = self.tryGetParameter( "Minimum threshold to be sure", 0.4 )
        self.nTimeoutReco = self.tryGetParameter( "Speech recognition timeout", 6 )
        self.nTimeoutRecoConfirmation = self.tryGetParameter( "Speech recognition timeout when confirmation", 6 )
        self.nTimeoutTactile = self.tryGetParameter( "Tactile sensor menu timeout", 10 )
        self.nMaxCountNoReply = self.tryGetParameter( "Maximum number of repetition when no reply", 3 )
        self.nMaxCountFailure = self.tryGetParameter( "Maximum number of repetition when failure", 5 )
        self.bActivateEyesLight = self.tryGetParameter( "Activate eyes light", True )
        self.bActivateEarsLight = self.tryGetParameter( "Activate ears light", True )
        self.bActivateBrainLight = self.tryGetParameter( "Activate brain light", True )
        self.bActivateHelpWhenFailure = self.tryGetParameter( "Activate help when failure", True )
        self.bRepeatValidatedChoice = self.tryGetParameter( "Repeat validated choice", True )
        self.bActivateDefaultChoiceHelp = self.tryGetParameter( "Activate help command", True )
        self.bActivateDefaultChoiceRepeat = self.tryGetParameter( "Activate repeat command", True )
        self.bActivateDefaultChoiceExit = self.tryGetParameter( "Activate exit command", True )
        self.aDefaultChoices = []
        if (self.bActivateDefaultChoiceHelp):
            self.aDefaultChoices.append( self.asHelpWords )
        if (self.bActivateDefaultChoiceRepeat):
            self.aDefaultChoices.append( self.asRepeatWords )
        if (self.bActivateDefaultChoiceExit):
            self.aDefaultChoices.append( self.asExitWords )
        if( question == None ):
            question = ""
        self.initQuestionAndChoices( question )
        if( len( self.aChoices ) > len( self.aDefaultChoices ) ): # if there is at least one choice (not a default one)
            self.nIndexChoice = len( self.aDefaultChoices )
        else: # if there are only default words
            self.nIndexChoice = 0
        self.bGoOut = False
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, 0.1 )
        # initialize tactile sensor handler
        self.initSeqDetected()
        # subscribe to tactile sensors extractors (launch tactile sensor handler)
        self.memory.subscribeToEvent( "FrontTactilTouched", self.getName(), "onTactilTouched" )
        self.memory.subscribeToEvent( "MiddleTactilTouched", self.getName(), "onTactilTouched" )
        self.memory.subscribeToEvent( "RearTactilTouched", self.getName(), "onTactilTouched" )
        thread.start_new_thread( self.loopLedsBrainTwinkle, () )
        while( not self.bGoOut ):
            self.questionRecognitionReaction()
        if( self.bInTactileSensorMenu ):
            self.nCountNoReply = 0
            if( self.nFrameNumber != self.aFrameNumbers["headDown"] ):
                self.nFrameNumber = self.aFrameNumbers["headDown"]
                try:
                    self.getTimeline().goTo(self.nFrameNumber)
                except: # if NAOqi < 1.14
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            self.loopLedsBrainTurn()
        else:
            self.bIsRunning = False

    def onInput_choicesList(self, p):
        "Set choices list."
        self.logger.debug( "Input choicesList stimulated." )
        if( not self.bIsRunning ):
            self.bExternChoices = True
            language = "English"
            if(self.asr != None):
                language =  self.asr.getLanguage()
            self.asNegativeWords = self.aAllWords[language]["negative"]
            self.asPositiveWords = self.aAllWords[language]["positive"]
            self.asHelpWords = self.aAllWords[language]["help"]
            self.asExitWords = self.aAllWords[language]["exit"]
            self.asRepeatWords = self.aAllWords[language]["repeat"]
            self.bActivateDefaultChoiceHelp = self.tryGetParameter( "Activate help command", True )
            self.bActivateDefaultChoiceRepeat = self.tryGetParameter( "Activate repeat command", True )
            self.bActivateDefaultChoiceExit = self.tryGetParameter( "Activate exit command", True )
            self.aDefaultChoices = []
            if (self.bActivateDefaultChoiceHelp):
                self.aDefaultChoices.append( self.asHelpWords )
            if (self.bActivateDefaultChoiceRepeat):
                self.aDefaultChoices.append( self.asRepeatWords )
            if (self.bActivateDefaultChoiceExit):
                self.aDefaultChoices.append( self.asExitWords )
            self.aChoices = []
            self.aChoiceIndexes = []
            self.aChoices.extend( self.aDefaultChoices )
            index = 0
            for choice in p:
                if( self.isString(choice) ):
                    choice = choice.strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                    if( choice != "" ):
                        choice = [ choice ]
                    else:
                        choice = []
                elif( self.isArray(choice) ):
                    if( choice != [] ):
                        for i in range( len( choice ) ):
                            if( self.isString(choice[i]) ):
                                choice[i] = choice[i].strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                                if( len( choice[i] ) < 1 ):
                                    del choice[i]
                                    i -= 1 # to parse the good one next loop
                            else:
                                raise Exception( "Error in choices input syntax:\nIt must be an array of choices and each choice can be either a string or an array of strings (several possibilities for one choice)\nEx: ['choice1',['choice2a','choice2b']]\nbut: " + str(p) + " found" )
                else:
                    raise Exception( "Error in choices input syntax:\nIt must be an array of choices and each choice can be either a string or an array of strings (several possibilities for one choice)\nEx: ['choice1',['choice2a','choice2b']]\nbut: " + str(p) + " found" )
                if( len( choice ) > 0 ):
                    for sWord in choice:
                        for aDefaultChoice in self.aDefaultChoices:
                            if( sWord in aDefaultChoice ):
                                raise Exception( "Error in input choices list: You chose a word which is already used for default choices:\n" + str(sWord) + " is used for the default choice: " + str(aDefaultChoice[0]) )
                    self.aChoices.append( choice )
                    self.aChoiceIndexes.append( index )
                index += 1

    def onInput_onStop(self):
        "Stop box behaviour."
        self.logger.debug( "Input onStop stimulated." )
        if( self.bIsRunning ):
            self.goOut( self.asExitWords[0], "onStop" )
            self.sRecoInterruption = "onStop"
        else:
            self.onUnload()

# GENERAL FUNCTIONS ------------------------------------------------------------------------------------------

    def isString(self, strVariable):
        try:
            if( type( strVariable ) == type( "some string" ) ):
                return True
        except:
            pass
        return False

    def isArray(self, aVariable):
        try:
            if( type( aVariable ) == type( ["some array"] ) ):
                return True
        except:
            pass
        return False

    def fileExists(self, strPathFilename ):
        try:
            file = open( strPathFilename, 'r' )
            if( file ):
                file.close()
                return True
        except (IOError, os.error), err:
            pass
        return False

    def getFileContents(self, sFilename ):
        "read a file and return it's contents, or '' if not found, empty, ..."
        try:
            fileContent = open( sFilename )
            aBuf = fileContent.read()
            fileContent.close()
        except:
            try:
                fileContent.close()
            except:
                pass
            return ""
        return aBuf

    def getBrainLedName(self, nNumLed):
        "Get the name of the DCM led device from its number"
        "0 => front left; 1 => next in clock wise; until 11"
        numLed = nNumLed%12
        if( numLed <= 1 ):
            return "Head/Led/Front/Right/%d/Actuator/Value" % (1-numLed)
        elif( numLed >= 10 ):
            return "Head/Led/Front/Left/%d/Actuator/Value" % (numLed-10)
        elif( numLed <= 2 ):
            return "Head/Led/Middle/Right/%d/Actuator/Value" % (2-numLed)
        elif( numLed >= 9 ):
            return "Head/Led/Middle/Left/%d/Actuator/Value" % (numLed-9)
        elif( numLed <= 5 ):
            return "Head/Led/Rear/Right/%d/Actuator/Value" % (numLed-3)
        else:
            return "Head/Led/Rear/Left/%d/Actuator/Value" % (8-numLed)

    def skipTTS(self):
        for idtts in self.aIdsTTS:
            try:
                self.ttsStop.stop(idtts)
            except:
                self.logger.debug( "Warning: The Text-To-Speech could not have been stopped." )

    def tryGetParameter(self, sParameterName, defaultValue):
        try:
            return self.getParameter( sParameterName )
        except:
            return defaultValue

# QUESTION AND CHOICES INITIALIZATION ----------------------------------------------------------------------

    def initQuestionAndChoices(self, p):
        "Initialize the question and the choices."
        # question processing
        if( self.isString(p) ):
            self.sQuestion = p
        else:
            raise Exception( "Error in question input syntax:\nQuestion text\nexpected for example, but:\n" + str(p[0]) + "\nfound" )
        # choices processing
        if( not self.bExternChoices ):
            self.aChoices = []
            self.aChoiceIndexes = []
            self.aChoices.extend( self.aDefaultChoices )
            index = 0
            listChoices = self.aListAllChoices[self.tts.getLanguage()]
            for choice in listChoices:
                aChoice = choice.split( "/" )
                if( aChoice != [] ):
                    for i in range( len( aChoice ) ):
                        aChoice[i] = aChoice[i].strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                        if( len( aChoice[i] ) < 1 ):
                            del aChoice[i]
                            i -= 1 # to parse the good one next loop
                if( len( aChoice ) > 0 ):
                    # check if there is a word which is already used for the default choices
                    for sWord in aChoice:
                        for aDefaultChoice in self.aDefaultChoices:
                            if( sWord in aDefaultChoice ):
                                raise Exception( "Error in choices list: You chose a word which is already used for default choices:\n" + str(sWord) + " is used for the default choice: " + str(aDefaultChoice[0]) )
                    # append the choice to the list if everything worked well
                    self.aChoices.append( aChoice )
                    self.aChoiceIndexes.append( index )
                index += 1
        # check that there is at least one choice (a default one or not)
        if( len( self.aChoices ) < 1 ):
            raise Exception( "Error in choices list: It is empty. There is no default choice nor choice entered." )

# QUESTION-RECOGNITION-REACTION -----------------------------------------------------------------------------

    def questionRecognitionReaction(self):
        "Ask question, launch speech recognition and process answer."
        self.ttsQuestionAndRecoInit()
        if( not self.bMustStop ):
            # stop movement animation
            if( self.nFrameNumber != self.aFrameNumbers["reco"] ):
                self.nFrameNumber = self.aFrameNumbers["reco"]
                try:
                    self.getTimeline().goTo(self.nFrameNumber)
                except: # if NAOqi < 1.14
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            # start speech recognition
            self.logger.debug( "Speech recognition started." )
            self.memory.subscribeToEvent( "WordRecognized", self.getName(), "onWordRecognized" )
            self.bRecoIsWaitingForVoice = True
            self.memory.subscribeToEvent( "SpeechDetected", self.getName(), "onSpeechDetected" )
        # leds during the recognition
        self.loopLedsReco()
        # process the reco loop break
        self.processRecoInterruption()

    def ttsQuestionAndRecoInit(self):
        "Ask question and initialize the speech recognition during the question to gain time in the interaction."
        if( not self.bInConfirmation ):
            # launch TTS
            idTTS = -1
            if( self.sQuestion != ""):
                idTTS = self.tts.post.say( self.sQuestion )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(self.sQuestion) )
                # launch TTS movement animation
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.getTimeline().goTo(self.nFrameNumber)
                    except: # if NAOqi < 1.14
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            # prepare speech recognition
            if(self.asr != None):
                self.asr.setLanguage( self.tts.getLanguage() )
            if( not self.bVocabularyLoaded ):
                aWordsRecognised = []
                for i in range( len( self.aChoices ) ):
                    if( self.aChoices[i] != [] ):
                        aWordsRecognised.extend( self.aChoices[i] )
                sWordsRecognised = "You can say: "
                if( len( aWordsRecognised ) > 1 ):
                    for i in range( len( aWordsRecognised ) - 1 ):
                        sWordsRecognised += "'" + aWordsRecognised[i] + "', "
                if( len( aWordsRecognised ) > 0 ):
                    sWordsRecognised += "'" + aWordsRecognised[len( aWordsRecognised ) - 1] + "'"
                sWordsRecognised += "."
                self.logger.debug( sWordsRecognised )
                if(self.asr != None):
                    self.asr.setVocabulary( aWordsRecognised, False )
                self.bVocabularyLoaded = True
        else:
            # launch TTS
            sentence = self.aAllSentences[self.tts.getLanguage()]["confirmation"][0]
            idTTS = -1
            sentenceToSay = sentence % self.sPreviousAnswer
            if( sentenceToSay != ""):
                idTTS = self.tts.post.say( sentenceToSay )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(sentenceToSay) )
                # launch TTS movement animation
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.getTimeline().goTo(self.nFrameNumber)
                    except: # if NAOqi < 1.14
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            # prepare speech recognition
            aWordsRecognised = []
            aWordsRecognised.extend( self.asNegativeWords )
            aWordsRecognised.extend( self.asPositiveWords )
            sWordsRecognised = "You can say: "
            if( len( aWordsRecognised ) > 1 ):
                for i in range( len( aWordsRecognised ) - 1 ):
                    sWordsRecognised += "'" + aWordsRecognised[i] + "', "
            if( len( aWordsRecognised ) > 0 ):
                sWordsRecognised += "'" + aWordsRecognised[len( aWordsRecognised ) - 1] + "'"
            sWordsRecognised += "."
            self.logger.debug( sWordsRecognised )
            if(self.asr != None):
                self.asr.setVocabulary( aWordsRecognised, False )
            self.bVocabularyLoaded = False
        # wait for the end of the TTS
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )

    def processRecoInterruption(self):
        "Process speech recognition interruption (timeout, action on tactile sensor, word said, etc...)"
        # wait for the end of the reaction (help, not understood, etc...)
        while( self.sRecoInterruption == "" ):
            time.sleep( 0.2 )
        self.logger.debug( "The speech recognition has been interrupted because of: " + str(self.sRecoInterruption) + "." )
        if( self.sRecoInterruption == "timeout" ): # if recognition interrupted by timeout
            try:
                # stop recognition
                self.memory.unsubscribeToEvent( "WordRecognized", self.getName() )
                self.bRecoIsWaitingForVoice = False
                self.bRecoIsHearingOrAnalysing = False
                self.logger.debug( "Speech recognition stopped." )
                self.memory.unsubscribeToEvent( "SpeechDetected", self.getName() )
            except:
                pass
            if( self.bInConfirmation ): # if it was a confirmation question
                # leds noticing that the robot confirm its guessing
                thread.start_new_thread( self.ledsUnderstood, (True, False) )
                # if nothing has been said, we assume that the user agree
                self.bInConfirmation = False
                if( self.sPreviousAnswer in self.asHelpWords ): # if help asked
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords ): # if repeat asked
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else: # if not repeat nor help asked
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
            else:
                # reinitialize leds
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
                self.nCountNoReply += 1
                if( self.nCountNoReply >= self.nMaxCountNoReply ):
                    self.goOut( self.asExitWords[0], "timeout" )
        else:
            self.nCountNoReply = 0
            if( self.sRecoInterruption in [ "onStop" ] ):
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        self.sRecoInterruption = ""

    def repeatWhenNoQuestion(self):
        "Robot's reaction when it is asked to repeat the question when there is no question."
        if( self.sQuestion == "" ):
            sentenceNoQuestion = self.aAllSentences[self.tts.getLanguage()]["noQuestion"][0]
            sentenceNoQuestion += self.enumerateChoices( True ) # True to ask that the introduction is played
            if( len( self.aChoices ) - len( self.aDefaultChoices ) == 0 ): # if there is no choice
                sentenceNoQuestion += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
            # launch TTS
            idTTS = -1
            if( sentenceNoQuestion != ""):
                if( self.bInTactileSensorMenu ):
                    idTTS = self.tts.post.say( sentenceNoQuestion + "\\Pau=300\\" )
                else:
                    idTTS = self.tts.post.say( sentenceNoQuestion )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(sentenceNoQuestion) )
                if( not self.bInTactileSensorMenu ):
                    # launch TTS movement animation
                    if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                        self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                        try:
                            self.getTimeline().goTo(self.nFrameNumber)
                        except: # if NAOqi < 1.14
                            try:
                                self.gotoAndStop(self.nFrameNumber)
                            except:
                                pass
            # wait for the end of the TTS
            if( idTTS != -1 ):
                try:
                    self.tts.wait( idTTS, 0 )
                except:
                    self.logger.debug( "Warning: Could not wait the TTS." )

# RECO OUTPUT PROCESSING --------------------------------------------------------------------------------------

    def onWordRecognized(self, pDataName, pValue, pMessage):
        "Handler for when a word is recognised by the speech recognition system."
        aState = pValue
        self.logger.debug( "The word '" + str(aState[0]) + "' has been recognised with a threshold of " + str(aState[1]) + "." )
        # interrupt loops:
            # - stop reco
            # - stop leds
            # - stop asking the question on and on
        try:
            self.memory.unsubscribeToEvent( "WordRecognized", self.getName() )
            self.logger.debug( "Speech recognition stopped." )
            self.memory.unsubscribeToEvent( "SpeechDetected", self.getName() )
        except:
            pass
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        if( aState[0] != "" ):
            if( aState[1] >= self.rUnderstoodThreshold ):
                if( self.rUnderstoodThreshold <= self.arUnderstoodThreshold[1] - 0.02 ):
                    self.rUnderstoodThreshold += 0.02
                else:
                    self.rUnderstoodThreshold = self.arUnderstoodThreshold[1]
                if( self.bInConfirmation ):
                    if( aState[0] in self.asNegativeWords ):
                        thread.start_new_thread( self.ledsNegative, () )
                    else:
                        thread.start_new_thread( self.ledsUnderstood, (True, False) )
                else:
                    thread.start_new_thread( self.ledsUnderstood, (True, False) )
                self.reactionWordUnderstood( aState )
            else:
                if( self.rUnderstoodThreshold >= self.arUnderstoodThreshold[0] + 0.05 ):
                    self.rUnderstoodThreshold -= 0.05
                else:
                    self.rUnderstoodThreshold = self.arUnderstoodThreshold[0]
                aCurrentChoice = ""
                for choice in self.aChoices:
                    if( aCurrentChoice == "" ):
                        if( aState[0] in choice ):
                            aCurrentChoice = choice
                if( self.sPreviousAnswer in aCurrentChoice ): # if answer in the same choice as previously
                    # then ask confirmation
                    aState[1] = self.rConfirmationThreshold - 0.01
                    thread.start_new_thread( self.ledsUnderstood, (True, False) )
                    self.reactionWordUnderstood( aState )
                else:
                    # else not understood
                    if( self.bInConfirmation ):
                        thread.start_new_thread( self.ledsUnderstood, (True, False) )
                    else:
                        self.sPreviousAnswer = aState[0]
                        thread.start_new_thread( self.ledsNotUnderstood, () )
                    self.reactionNothingUnderstood()
        else:
            if( self.bInConfirmation ):
                thread.start_new_thread( self.ledsUnderstood, (True, False) )
            else:
                thread.start_new_thread( self.ledsNotUnderstood, () )
            self.reactionNothingUnderstood()
        if( pMessage == "" ):
            self.sRecoInterruption = "wordRecognised"
        else:
            self.sRecoInterruption = pMessage

    def onSpeechDetected(self, pDataName, pValue, pMessage):
        "Handler for when something has been heard by the speech recognition system."
        aState = pValue
        if( aState == 1):
            if( self.bRecoIsWaitingForVoice ):
                # make eyes leds switch from an animation to an other
                self.bRecoIsHearingOrAnalysing = True
                self.bRecoIsWaitingForVoice = False
                try:
                    self.timeToReply(time.time() - self.beginTime)
                except:
                    pass

    def reactionWordUnderstood(self, word):
        "Reaction depending on the word recognised (help, repeat, word in choices, etc...) and its recognition confidence."
        if( self.bInConfirmation ):
            self.bInConfirmation = False
            if( word[0] in self.asNegativeWords ):
                # update number of failures
                self.nCountFailure += 1
                if( self.sPreviousAnswer in self.asHelpWords ):
                    if( self.nCountFailure >= self.nMaxCountFailure ): # if maximum number of failures
                        # skip the question
                        self.goOut( self.asExitWords[0], "notUnderstood" )
                else:
                    self.helpAfterFailure()
            else:
                if( (self.sPreviousAnswer in self.asHelpWords) or (word[0] in self.asHelpWords) ):
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords or (word[0] in self.asRepeatWords) ):
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else:
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
                self.sPreviousAnswer = ""
        else:
            self.sPreviousAnswer = word[0]
            if( word[1] >= self.rConfirmationThreshold ):
                if( self.rConfirmationThreshold <= self.arConfirmationThreshold[1] - 0.02 ):
                    self.rConfirmationThreshold += 0.02
                else:
                    self.rConfirmationThreshold = self.arConfirmationThreshold[1]
                if( self.sPreviousAnswer in self.asHelpWords ):
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords ):
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else:
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
                self.sPreviousAnswer = ""
            else:
                if( self.rConfirmationThreshold >= self.arConfirmationThreshold[0] + 0.05 ):
                    self.rConfirmationThreshold -= 0.05
                else:
                    self.rConfirmationThreshold = self.arConfirmationThreshold[0]
                self.bInConfirmation = True

    def reactionNothingUnderstood(self):
        "Reaction when nothing has been understood or without an enough confidence."
        if( self.bInConfirmation ):
            # if the robot did not understand, we assume that the user agree
            self.bInConfirmation = False
            if( self.sPreviousAnswer in self.asHelpWords ): # if help asked
                self.helpWhenAsked()
            elif( self.sPreviousAnswer in self.asRepeatWords ): # if repeat asked
                self.repeatWhenNoQuestion()
                # repeat the question
            else: # if not repeat nor help asked
                self.goOut( self.sPreviousAnswer, "wordRecognised" )
        else:
            # update number of failures
            self.nCountFailure += 1
            if( self.nCountFailure <= 1 ): # if first failure
                sentence = self.aAllSentences[self.tts.getLanguage()]["notUnderstood"][0]
            else: # if second failure or more
                sentenceNotUnderstoodAnims = self.aAllSentences[self.tts.getLanguage()]["notUnderstoodAnims"]
                index = random.randint( 0, len( sentenceNotUnderstoodAnims ) - 1 )
                sentence = sentenceNotUnderstoodAnims[index]
                if( self.nFrameNumber != self.aFrameNumbers["notUnderstood"] + 10*index ):
                    self.nFrameNumber = self.aFrameNumbers["notUnderstood"] + 10*index
                    try:
                        self.getTimeline().goTo(self.nFrameNumber)
                    except: # if NAOqi < 1.14
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            self.helpAfterFailure( sentence )

# HELP ------------------------------------------------------------------------------------------------------

    def enumerateChoices(self, bIntroToSay):
        "Enumerate choices (only the first word of each choice is taken into account)."
        sentenceHelpEnumChoices = self.aAllSentences[self.tts.getLanguage()]["helpEnumChoices"]
        sentenceHelpEnumMarks = self.aAllSentences[self.tts.getLanguage()]["enumMarks"]
        enumWords = ""
        maxNbEnumChoices = 3
        indexes = []
        for i in range( min(maxNbEnumChoices, len( self.aChoices ) - len( self.aDefaultChoices )) ):
            if( len( self.aChoices ) - len( self.aDefaultChoices ) <= maxNbEnumChoices ):
                index = len( self.aDefaultChoices ) + i
            else:
                index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
                while( index in indexes ):
                    index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
            indexes.append( index )
            if( len( indexes ) != 1 ): # if it is not the first choice
                if( len( indexes ) != min(maxNbEnumChoices, len( self.aChoices ) - len( self.aDefaultChoices )) ): # if it is not the last choice
                    enumWords += sentenceHelpEnumMarks[0]
                else:
                    enumWords += sentenceHelpEnumMarks[1]
            enumWords += self.aChoices[index][0]
        sentenceTemplate = sentenceHelpEnumChoices[2]
        if( len( self.aChoices ) - len( self.aDefaultChoices ) <= maxNbEnumChoices ): # if there are 3 or less choices
            sentenceTemplate = sentenceHelpEnumChoices[1]
        if( not bIntroToSay ):
            sentenceTemplate = sentenceHelpEnumChoices[3]
        if( len( self.aChoices ) - len( self.aDefaultChoices ) == 0 ): # if there is no choice
            sentence = sentenceHelpEnumChoices[0]
        else:
            sentence = sentenceTemplate % enumWords
        return sentence

    def enumerateDefaultChoices(self, bIntroToSay):
        "Enumerate default choices (only the first word of each choice is taken into account)."
        sentenceHelpEnumChoices = self.aAllSentences[self.tts.getLanguage()]["helpEnumChoices"]
        sentenceHelpEnumDefault = self.aAllSentences[self.tts.getLanguage()]["helpEnumDefault"]
        sentenceHelpEnumMarks = self.aAllSentences[self.tts.getLanguage()]["enumMarks"]
        enumWords = ""
        indexes = []
        for i in range( len( self.aDefaultChoices ) ):
            indexes.append( i )
            if( len( indexes ) != 1 ): # if it is not the first choice
                if( len( indexes ) != len( self.aDefaultChoices ) ): # if it is not the last choice
                    enumWords += sentenceHelpEnumMarks[0]
                else:
                    enumWords += sentenceHelpEnumMarks[1]
            enumWords += self.aDefaultChoices[i][0]
        sentenceTemplate = sentenceHelpEnumDefault[0]
        if( not bIntroToSay ):
            sentenceTemplate = sentenceHelpEnumChoices[3]
        if( len( self.aDefaultChoices ) == 0 ): # if there is no default choice
            sentence = ""
        else:
            sentence = sentenceTemplate % enumWords
        return sentence

    def explanationTactileSensor(self):
        "Explain the possible interaction with the tactile sensor."
        sentenceHelpTactile = self.aAllSentences[self.tts.getLanguage()]["helpTactile"]
        if( self.bInTactileSensorMenu ):
            sentence = sentenceHelpTactile[1]
        else:
            sentence = sentenceHelpTactile[0]
        return sentence

    def helpWhenAsked(self, sentence = ""):
        "Help when the user asked it: enumerate choices, enumerate default choices and explain tactile sensor possible interaction."
        if( not self.bInTactileSensorMenu ):
            # enumeration of choices
            sentence += self.enumerateChoices( True ) # True to ask that the introduction is played
            # enumeration of default choices
            sentence += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
        # explanation about alternative modality (tactil sensor, arm motion)
        sentence += self.explanationTactileSensor()
        # launch TTS
        idTTS = -1
        if( sentence != "" ):
            if( self.bInTactileSensorMenu ):
                idTTS = self.tts.post.say( sentence + "\\Pau=300\\" )
            else:
                idTTS = self.tts.post.say( sentence )
            self.aIdsTTS.append( idTTS )
            self.logger.debug( "Robot says: " + str(sentence) )
            # launch TTS movement animation
            if( self.bInTactileSensorMenu ):
                if( self.nFrameNumber != self.aFrameNumbers["helpTactileSensor"] ):
                    self.nFrameNumber = self.aFrameNumbers["helpTactileSensor"]
                    try:
                        self.getTimeline().goTo(self.nFrameNumber)
                    except: # if NAOqi < 1.14
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            else:
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.getTimeline().goTo(self.nFrameNumber)
                    except: # if NAOqi < 1.14
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
        # wait for the end of the TTS
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )
        # repeat the question

    def helpAfterFailure(self, sentence = ""):
        "Help when the speech recognition failed (nothing understood or incorrect answer understood)."
        if( self.nCountFailure < self.nMaxCountFailure ): # if reasonable number of failures
            if( self.bActivateHelpWhenFailure ):
                if( self.nCountFailure in [1, 2] ): # if first or second failure
                    # enumeration of choices, or default words if there is no choice
                    if( len( self.aChoices ) - len( self.aDefaultChoices ) > 0 ): # if there is at least one choice
                        sentence += self.enumerateChoices( self.nCountFailure == 1 ) # the introduction is played if it is the first failure
                    else:
                        sentence += self.enumerateDefaultChoices( self.nCountFailure == 1 ) # the introduction is played if it is the first failure
                    if( self.nCountFailure == 2 ): # if second failure
                        # explanation about alternative modality (tactil sensor, arm motion)
                        sentence += self.explanationTactileSensor()
                # launch TTS
                idTTS = -1
                if( sentence != "" ):
                    idTTS = self.tts.post.say( sentence )
                    self.aIdsTTS.append( idTTS )
                    self.logger.debug( "Robot says: " + str(sentence) )
                    # launch TTS movement animation
                    listPossibleFrames = range( len( self.aAllSentences[self.tts.getLanguage()]["notUnderstoodAnims"] ) )
                    for i in range(len(listPossibleFrames)):
                        listPossibleFrames[i] = listPossibleFrames[i] * 10 + self.aFrameNumbers["notUnderstood"]
                    if( ( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ) and not ( self.nFrameNumber in listPossibleFrames ) ):
                        try:
                            self.getTimeline().goTo(self.aFrameNumbers["bodyTalk"])
                        except: # if NAOqi < 1.14
                            try:
                                self.gotoAndStop(self.aFrameNumbers["bodyTalk"])
                            except:
                                pass
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                # wait for the end of the TTS
                if( idTTS != -1 ):
                    try:
                        self.tts.wait( idTTS, 0 )
                    except:
                        self.logger.debug( "Warning: Could not wait the TTS." )
            # repeat the question
        else: # if maximum number of failures
            # skip the question
            self.goOut( self.asExitWords[0], "notUnderstood" )

# LEDS ---------------------------------------------------------------------------------------------------

    def setLeds(self, eyesLight, earsLight, brainLight):
        "Set all LEDS (eyes, ears and brain lights)."
        rDuration = 1
        if( self.bActivateEyesLight ):
            # set eyes leds
            self.leds.post.fadeRGB( "FaceLeds", eyesLight, rDuration )
        if( self.bActivateEarsLight ):
            # set ears leds
            self.leds.fadeRGB( "EarLeds", earsLight, rDuration )
        if( self.bActivateBrainLight ):
            # set brain leds light
            self.setLedsBrain( brainLight, 500 )

    def ledsUnderstood(self, bFlashEars, bFlashBrain):
        "Sequence of LEDS for eyes, ears and brain when the robot understood what it heard."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x00FF00, rDuration )
        if( self.bActivateEarsLight ):
            if( bFlashEars ):
                self.leds.fadeRGB( "EarLeds", 0x00FF00, rDuration )
        if( self.bActivateBrainLight ):
            if( bFlashBrain ):
                self.setLedsBrain( 0.5, int(rDuration * 1000) )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            if( self.bInTactileSensorMenu ):
                self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, rDuration )
            else:
                self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            if( bFlashEars ):
                self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        if( self.bActivateBrainLight ):
            if( bFlashBrain ):
                self.setLedsBrain( 0., int(rDuration * 1000) )
        time.sleep( 0.1 )
        if( not self.bInTactileSensorMenu ):
            self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        time.sleep( 0.1 )
        self.bBrainAnimPaused = False

    def ledsNotUnderstood(self):
        "Sequence of LEDS for eyes and ears when the robot did not understand what it heard."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.3 )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        self.bBrainAnimPaused = False

    def ledsNegative(self):
        "Sequence of LEDS for eyes and ears when the robot understood 'no'."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        time.sleep( 0.1 )
        self.bBrainAnimPaused = False

    def loopLedsReco(self):
        "LEDS (eyes and ears) process during the speech recognition."
        self.beginTime = time.time()
        if( self.bInConfirmation ):
            timerReco = self.beginTime + self.nTimeoutRecoConfirmation
        else:
            timerReco = self.beginTime + self.nTimeoutReco
        self.bHasAlreadyHearingEyes = False
        nEarLedsNextIndex = 0
        nEyesLed = -1
        while( self.bRecoIsWaitingForVoice or self.bRecoIsHearingOrAnalysing ):
            if( self.bMustStop ):
                try:
                    self.timeToReply(time.time() - self.beginTime)
                except:
                    pass
                break
            if( self.bRecoIsWaitingForVoice ):
                if( timerReco < time.time() ):
                    try:
                        self.timeToReply(timerReco - self.beginTime)
                    except:
                        pass
                    self.sRecoInterruption = "timeout"
                    break
            nEarLedsNextIndex = self.ledsEarsTurnOneStep( nEarLedsNextIndex )
            nEyesLed += 1
            self.ledsEyesTurnOneStep( 0x0055FF, nEyesLed%8 )
            time.sleep( 0.2 )

    def ledsEarsTurnOneStep(self, nEarLedsNextIndex):
        "One step of ears LEDS sequence (turn) when the robot is in speech recognition."
        if( self.bActivateEarsLight ):
            nNbrLedByEars = 10
            rTime = 0.7
            strTemplate = "Ears/Led/%s/%dDeg/Actuator/Value"
            nAngle = (360/nNbrLedByEars) * nEarLedsNextIndex
            # update index before sending movement in case of a fast/concurrent call of the function
            nEarLedsNextIndex -= 1 # more beautiful to turn in this way
            if( nEarLedsNextIndex < 0 ):
                nEarLedsNextIndex = nNbrLedByEars-1
            self.leds.post.fade( strTemplate % ( "Left", nAngle ), 1.0, rTime )
            self.leds.post.fade( strTemplate % ( "Right", nAngle ), 1.0, rTime )
            self.leds.post.fade( strTemplate % ( "Left", nAngle ), 0.0, rTime*1.2 )
            self.leds.post.fade( strTemplate % ( "Right", nAngle ), 0.0, rTime*1.2 )
        return nEarLedsNextIndex

    def ledsEyesTurnOneStep(self, nColor, nLed):
        "One step of eyes LEDS sequence (turn) when the robot is in speech recognition."
        if( self.bActivateEyesLight ):
            rTime = 0.7
            if( self.bRecoIsHearingOrAnalysing ):
                if( not self.bHasAlreadyHearingEyes ):
                    self.leds.fadeRGB( "FaceLeds", 0xF4FF22, 0.1 )
                    # start headcheck animation
                    if( self.nFrameNumber != self.aFrameNumbers["headCheck"] ):
                        self.nFrameNumber = self.aFrameNumbers["headCheck"]
                        try:
                            self.getTimeline().goTo(self.nFrameNumber)
                        except: # if NAOqi < 1.14
                            try:
                                self.gotoAndStop(self.nFrameNumber)
                            except:
                                pass
                    self.bHasAlreadyHearingEyes = True
            elif( self.bRecoIsWaitingForVoice ):
                self.leds.post.fadeRGB( "FaceLed%d" % (nLed) , nColor, rTime )
                self.leds.post.fadeRGB( "FaceLed%d" % (nLed) , 0x000000, rTime*1.25 )

    def ledsChangeOnTactile(self):
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x0055FF, rDuration )
        self.setLedsBrain( 0.5, int(rDuration * 1000) )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, rDuration )
        self.setLedsBrain( 0., int(rDuration * 1000) )
        time.sleep( 0.2 )
        self.bBrainAnimPaused = False

    def loopLedsBrainTurn(self):
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0. )
        rIntensity = 0.5
        nTime = 50
        bAlreadyPaused = False
        while( self.bInTactileSensorMenu ):
            if( not self.bBrainAnimPaused ):
                if( self.nFront == 1 or self.nMiddle == 1 or self.nRear == 1 ):
                    if( not bAlreadyPaused ):
                        bAlreadyPaused = True
                        self.setLedsBrain( 0., 50 )
                else:
                    bAlreadyPaused = False
                    if( self.bActivateBrainLight ):
                        for i in range( 12 ):
                            if( not self.bBrainAnimPaused and self.dcm != None):
                                riseTime = self.dcm.getTime(nTime)
                                strDeviceName = self.getBrainLedName(i)
                                self.dcm.set( [ strDeviceName, "Merge",  [[ rIntensity, riseTime ]] ] )
                                time.sleep( nTime/1000. )
                                if( not self.bBrainAnimPaused ):
                                    self.dcm.set( [ strDeviceName, "Merge",  [[ 0.0, riseTime + int(nTime)/4 ]] ] )
            time.sleep( nTime/1000. )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )

    def loopLedsBrainTwinkle(self):
        rIntensity = 0.5
        bOnStep = True
        bAlreadyPaused = False
        while( not self.bInTactileSensorMenu and self.bIsRunning ):
            if( not self.bBrainAnimPaused ):
                if( self.nFront == 1 or self.nMiddle == 1 or self.nRear == 1 ):
                    if( not bAlreadyPaused ):
                        bAlreadyPaused = True
                        self.setLedsBrain( 0., 50 )
                else:
                    bAlreadyPaused = False
                    if( bOnStep ):
                        self.setLedsBrain( rIntensity, 700 )
                        bOnStep = False
                    else:
                        self.setLedsBrain( 0.0, 700 )
                        bOnStep = True
            time.sleep( 1 )

    def setLedsBrain(self, rIntensity, rTimeMs):
        "One step of brain LEDS sequence (twinkle) when the robot is in speech recognition."
        if( self.bActivateBrainLight and self.dcm != None):
            riseTime = self.dcm.getTime( rTimeMs )
            for i in range( 12 ):
                strDeviceName = self.getBrainLedName(i)
                self.dcm.set( [ strDeviceName, "Merge",  [[ rIntensity, riseTime ]] ] )

# TACTILE SENSOR MENU -------------------------------------------------------------------------------------

    def onAlternativeModalityAction(self, p):
        "Process actions from alternative modalities (sequence from the tactile sensor, simple click on the torso button...)."
        if( not self.bIsRunning ): # if the box is not running
            return # then go out without doing a thing
        if( not self.bInTactileSensorMenu ): # if we are not in the tactile sensor menu (so if we are in the question-recognition-reaction loop)
            if( p in ["TapFront", "TapMiddle", "TapRear", "LongFront", "LongMiddle", "LongRear"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                if( bTTSRunning ): # if TTS is running
                    # skip the TTS
                    self.skipTTS()
                else: # if TTS was not running (so if in recognition)
                    # prepare to start the tactile sensor menu
                    self.bInTactileSensorMenu = True
                    # and stop the question-recognition-reaction loop
                    self.goOutOfQuestionRecoReaction()
                    self.sRecoInterruption = "onTactileSensor"
                    # start the tactile sensor menu
                    self.sayCurrentChoice()
                    # start counting timeout
                    self.rTimeWhenActionMadeInTactileMenu = time.time()
                    thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )
            elif( p in ["Tap", "CalmDown"] ):
                # skip the TTS
                self.skipTTS()
                # then stop everything and cancel the question
                self.goOut( self.asExitWords[0], "onTactileSensor" )
                self.sRecoInterruption = "onTactileSensor"
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        else: # if we are in the tactile sensor menu
            self.rTimeWhenActionMadeInTactileMenu = -1.
            if( p in ["TapFront"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS ) ):
                        bTTSRunning = True
                if( self.bIsSayingChoice or not bTTSRunning ): # else just skip the TTS (in the sayCurrentChoice function)
                    # change choice
                    self.nIndexChoice += 1
                    if( self.nIndexChoice >= len( self.aChoices ) ):
                        self.nIndexChoice = 0
                # say the choice in the tactile sensor menu
                self.sayCurrentChoice()
                self.timeoutManagingInTactileMenu()
            elif( p in ["TapRear"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                if( self.bIsSayingChoice or not bTTSRunning ): # else just skip the TTS (in the sayCurrentChoice function)
                    # change choice
                    self.nIndexChoice -= 1
                    if( self.nIndexChoice < 0 ):
                        self.nIndexChoice = len( self.aChoices ) - 1
                # say the choice in the tactile sensor menu
                self.sayCurrentChoice()
                self.timeoutManagingInTactileMenu()
            elif( p in ["TapMiddle", "LongMiddle"] ):
                self.rTimeWhenActionMadeInTactileMenu = time.time()
                rTimeForThisAction = self.rTimeWhenActionMadeInTactileMenu
                bWasSayingChoice = self.bIsSayingChoice
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                # skip the TTS if it is running
                self.skipTTS()
                if( bWasSayingChoice or not bTTSRunning ):
                    # validate choice
                    thread.start_new_thread( self.ledsUnderstood, (False, True) )
                    if( self.aChoices[self.nIndexChoice][0] == self.asRepeatWords[0] ):
                        self.repeatWhenNoQuestion()
                        # launch TTS
                        idTTS = -1
                        if( self.sQuestion != ""):
                            idTTS = self.tts.post.say( self.sQuestion + "\\Pau=300\\" )
                            self.aIdsTTS.append( idTTS )
                            self.logger.debug( "Robot says: " + str(self.sQuestion) )
                        # wait for the end of the TTS
                        if( idTTS != -1 ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    else:
                        self.reactionWordUnderstood( [ self.aChoices[self.nIndexChoice][0], 1.0 ] )
                if( self.bIsRunning and rTimeForThisAction == self.rTimeWhenActionMadeInTactileMenu ): #$$$
                    self.rTimeWhenActionMadeInTactileMenu = -1.
                    # say the choice in the tactile sensor menu
                    self.sayCurrentChoice()
                    self.timeoutManagingInTactileMenu()
            elif( p == "LongFront" ):
                if( not self.bPressed ):
                    self.bPressed = True
                    bLastElementSaid = False
                    while( self.bPressed ):
                        if( self.nFront == 0 ):
                            self.bPressed = False
                            break
                        bTTSRunning = False # to know if TTS is running
                        for idTTS in self.aIdsTTS:
                            if( self.tts.isRunning( idTTS )):
                                bTTSRunning = True
                        if( self.bIsSayingChoice or not bTTSRunning ):
                            # change choice
                            self.nIndexChoice += 1
                            if( self.nIndexChoice >= len( self.aChoices ) - 1 ):
                                self.nIndexChoice = len( self.aChoices ) - 1
                                if( not bLastElementSaid ):
                                    bLastElementSaid = True
                                    # say the choice in the tactile sensor menu
                                    thread.start_new_thread( self.sayCurrentChoice, () )
                            else:
                                # say the choice in the tactile sensor menu
                                thread.start_new_thread( self.sayCurrentChoice, () )
                        else:
                            if( self.nIndexChoice == len( self.aChoices ) - 1 ):
                                bLastElementSaid = True
                            # say the choice in the tactile sensor menu
                            thread.start_new_thread( self.sayCurrentChoice, () )
                        for i in range(8):
                            if( self.nFront == 0 ):
                                self.bPressed = False
                                break
                            time.sleep(0.1)
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS ) ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    self.timeoutManagingInTactileMenu()
            elif( p == "LongRear" ):
                if( not self.bPressed ):
                    self.bPressed = True
                    bFirstElementSaid = False
                    while( self.bPressed ):
                        if( self.nRear == 0 ):
                            self.bPressed = False
                            break
                        bTTSRunning = False # to know if TTS is running
                        for idTTS in self.aIdsTTS:
                            if( self.tts.isRunning( idTTS )):
                                bTTSRunning = True
                        if( self.bIsSayingChoice or not bTTSRunning ):
                            # change choice
                            self.nIndexChoice -= 1
                            if( self.nIndexChoice <= 0 ):
                                self.nIndexChoice = 0
                                if( not bFirstElementSaid ):
                                    bFirstElementSaid = True
                                    # say the choice in the tactile sensor menu
                                    thread.start_new_thread( self.sayCurrentChoice, () )
                            else:
                                # say the choice in the tactile sensor menu
                                thread.start_new_thread( self.sayCurrentChoice, () )
                        else:
                            if( self.nIndexChoice == 0 ):
                                bFirstElementSaid = True
                            # say the choice in the tactile sensor menu
                            thread.start_new_thread( self.sayCurrentChoice, () )
                        for i in range(8):
                            if( self.nRear == 0 ):
                                self.bPressed = False
                                break
                            time.sleep(0.1)
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS ) ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    self.timeoutManagingInTactileMenu()
            elif( p in ["Tap", "CalmDown"] ):
                # then stop everything and cancel the question
                self.goOut( self.asExitWords[0], "onTactileSensor" )

    def sayCurrentChoice(self):
        "In the tactile sensor menu, make the robot say the current selected choice"
        self.bIsSayingChoice = True
        rTimeCurrent = time.time()
        self.rTimeLastChoiceSaid = rTimeCurrent
        # stop previous TTS
        self.skipTTS()
        # launch TTS
        idTTS = -1
        if( self.aChoices[ self.nIndexChoice ][0] != "" ):
            if( self.nFrameNumber != self.aFrameNumbers["headDown"] ):
                self.nFrameNumber = self.aFrameNumbers["headDown"]
                try:
                    self.getTimeline().goTo(self.nFrameNumber)
                except: # if NAOqi < 1.14
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            sentence = self.aChoices[ self.nIndexChoice ][0] + "?"
            idTTS = self.tts.post.say( sentence )
            self.aIdsTTS.append( idTTS )
            self.logger.debug( "Robot says: " + str(sentence) )
            # launch flash leds
            thread.start_new_thread( self.ledsChangeOnTactile, () )
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )
        if( self.rTimeLastChoiceSaid == rTimeCurrent ):
            self.rTimeLastChoiceSaid = -1.
            self.bIsSayingChoice = False

    def timeoutManagingInTactileMenu(self):
        # check if there has been an other action with tts made while this one was processed
        bTTSRunning = False # to know if TTS is running
        for idTTS in self.aIdsTTS:
            if( self.tts.isRunning( idTTS )):
                bTTSRunning = True
        if( not bTTSRunning ):
            # start counting timeout
            self.rTimeWhenActionMadeInTactileMenu = time.time()
            thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )

    def loopCheckTimeoutInTactileMenu(self, rTimeForThisAction):
        nTimeout = time.time() + self.nTimeoutTactile
        if( self.rTimeWhenActionMadeInTactileMenu == rTimeForThisAction ):
            while( time.time() < nTimeout and self.rTimeWhenActionMadeInTactileMenu == rTimeForThisAction and self.bIsRunning ):
                time.sleep( 0.1 )
            if( self.rTimeWhenActionMadeInTactileMenu != rTimeForThisAction ):
                self.nCountNoReply = 0
            elif( self.bIsRunning ):
                self.rTimeWhenActionMadeInTactileMenu = -1.
                self.nCountNoReply += 1
                if( self.nCountNoReply >= self.nMaxCountNoReply ):
                    self.goOut( self.asExitWords[0], "timeout" )
                else:
                    bTTSRunning = False # to know if TTS is running
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS )):
                            bTTSRunning = True
                    if( not bTTSRunning ):
                        # say the choice in the tactile sensor menu
                        self.sayCurrentChoice()
                        # start counting timeout
                        self.rTimeWhenActionMadeInTactileMenu = time.time()
                        thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )

# TACTILE SENSOR HANDLER -------------------------------------------------------------------------------

    def initSeqDetected(self):
        "Initialize the sequence handler."
        self.bSeqStarted = False
        self.aDetectedSeqs = []
        self.aDetectedSeqs.extend(self.aSeqs)
        for seq in self.aDetectedSeqs:
            seq["index"] = 0
            seq["previousStepTime"] = 0

    def convertToArrayOfPossibleStates(self, states):
        "Check if the states described in the sequences using a string are in the right syntax, and then convert them to an array of the possible states."
        aStates = []
        aStates3 = [[1, 1, 1]]
        aStates2 = [[0, 1, 1], [1, 0, 1], [1, 1, 0]]
        aStates1 = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
        aStates0 = [[0, 0, 0]]
        try:
            if( int(states) == states ): # if states is an integer
                states = str(states)
        except:
            pass
        if( self.isString(states) ):
            if( not states in ["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"] ):
                raise Exception( "Error in sequences states description syntax: description expected in " + str(["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"]) + " but " + str(p) + " found with this type: " + str(type(p)) )
            if( states in ["*", "0+", "1+", "2+", "3+", "3", "3-", "F+", "M+", "R+"] ):
                aStates.extend(aStates3)
            if( states in ["*", "0+", "1+", "2+", "2", "2-", "3-"] ):
                aStates.extend(aStates2)
            if( states in ["*", "0+", "1+", "1", "1-", "2-", "3-"] ):
                aStates.extend(aStates1)
            if( states in ["*", "0+", "0", "0-", "1-", "2-", "3-", "F-", "M-", "R-"] ):
                aStates.extend(aStates0)
            if( states in ["F", "F+", "F-"] ):
                aStates.append([1, 0, 0])
            if( states in ["M", "M+", "M-"] ):
                aStates.append([0, 1, 0])
            if( states in ["R", "R+", "R-"] ):
                aStates.append([0, 0, 1])
            if( states in ["F+", "M+"] ):
                aStates.append([1, 1, 0])
            if( states in ["R+", "M+"] ):
                aStates.append([0, 1, 1])
            if( states in ["F+", "R+"] ):
                aStates.append([1, 0, 1])
        elif( self.isArray(states) ):
            if( self.isArray(states[0]) ):
                aStates = states
            elif( int(states[0]) == states[0] ):
                aStates = [states]
            else:
                raise Exception( "Error in sequences states description syntax: description expected in " + str(["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"]) + " but " + str(p) + " found with this type: " + str(type(p)) )
        else:
            raise Exception( "Error in sequences states description syntax:\nstring, array or int expected but " + str(type(p)) + " found" )
        return aStates

    def checkIfSeqsCorrespondingLeft(self, param):
        "If the sequence handler is done (there is no sequence detected left or the first in the list corresponds), then reinitialize the sequence handler, and give the corresponding sequence if there is one."
        if( self.aDetectedSeqs == [] ):
            # then no sequence corresponding in the list
            self.initSeqDetected()
        else:
            if( self.aDetectedSeqs[0]["index"] == -1 ): # if first sequence in left ones corresponds
                # then it is this sequence which is played
                thread.start_new_thread( self.onAlternativeModalityAction, (self.aDetectedSeqs[0]["name"],) )
                self.initSeqDetected()
        self.mutexCheckIfSeqsCorrespondingLeft.unlock()

    def loopCheckTimeoutMax(self, nTimeoutMax, seq, currentState, currentTime):
        "When timeout ellapsed, check the sequence status and process it."
        nPreviousIndex = seq["index"]
        time.sleep(nTimeoutMax + 0.1)
        aSeqsTemp = []
        aSeqsTemp.extend( self.aDetectedSeqs )
        currentState = [self.nFront, self.nMiddle, self.nRear]
        currentTime = time.time()
        if( nPreviousIndex == seq["index"] and not self.mutexProcessCurrentState.test() and not (1 in currentState) ): # if no change in the sequence step but timeout ellapsed and sequence handler is not processing (so if there is no action from the user and the sequence is still at the same point)
            if( seq in aSeqsTemp and seq["index"] != -1 ): # but if sequence is still in the possible ones and not completed
                if( currentState in seq["statesAndTimeout"][seq["index"]] ): # last check if the current state corresponds to the next one
                    # then we go to the next step
                    seq["previousStepTime"] = currentTime
                    seq["index"] += 2
                    if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                        seq["index"] = -1 # then the sequence is completed
                    else: # if there is at least one step left
                        nTimeoutMin = 0
                        nTimeoutMax = 5
                        if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                            if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                        thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
                else:
                    # then remove the sequence from the possible ones
                    aSeqsTemp.remove(seq)
                    self.aDetectedSeqs = aSeqsTemp
                self.mutexCheckIfSeqsCorrespondingLeft.lock( self.checkIfSeqsCorrespondingLeft, None )

    def loopCheckTimeoutMin(self, nTimeoutMin, seq):
        "Wait that the minimum timeout ellapse to check if the new tactile sensor state corresponds to the expected one for this sequence."
        if( nTimeoutMin != 0 ):
            nPreviousIndex = seq["index"]
            time.sleep(nTimeoutMin - time.time() + seq["previousStepTime"])
            currentTime = time.time()
            currentState = [self.nFront, self.nMiddle, self.nRear]
            self.mutexProcessCurrentState.lock( self.processCurrentState, [0, currentState, currentTime] )

    def updateDetectedSeqs(self, seq, aSeqsTemp, currentState, currentTime):
        "Update a detected sequence."
        if( seq["index"] > 0 ): # if not the first step
            nTimeoutMin = 0
            nTimeoutMax = 5
            if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                else:
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
            else:
                if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                else:
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
            if( currentTime > nTimeoutMax + seq["previousStepTime"] ): # if timeout of this step ellapsed
                aSeqsTemp.remove(seq) # then it is not this sequence which is played
            elif( not (currentState in seq["statesAndTimeout"][seq["index"]]) ): # if the current state does not correspond to one of the described ones but the timeout of this step did not ellaspe
                # then we check that this state could be an intermediate one
                aIntermediateStates = [[], [], []]
                for i in range( len( currentState ) ):
                    for j in range( len( seq["statesAndTimeout"][seq["index"]] ) ):
                        aIntermediateStates[i].append( seq["statesAndTimeout"][seq["index"]][j][i] )
                    for j in range( len( seq["statesAndTimeout"][seq["index"]-2] ) ):
                        aIntermediateStates[i].append( seq["statesAndTimeout"][seq["index"]-2][j][i] )
                bIsIntermediate = True
                for i in range( len( currentState ) ):
                    bIsIntermediate = bIsIntermediate and ( currentState[i] in aIntermediateStates[i] )
                if( not bIsIntermediate ):
                    aSeqsTemp.remove(seq) # then it is not this sequence which is played
            else: # if the current state correspond to one of the described ones
                if( currentTime > nTimeoutMin + seq["previousStepTime"] ): # if the minimum time to wait the next step is ellapsed
                    # then we go to the next step
                    seq["previousStepTime"] = currentTime
                    seq["index"] += 2
                    if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                        seq["index"] = -1 # then the sequence is completed
                    else: # if there is at least one step left
                        # start clock to timeout
                        nTimeoutMin = 0
                        nTimeoutMax = 5
                        if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                            if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                        thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
                        thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
                else: # if the minimum time to wait the next step is not ellapsed
                    # then we are going to wait until it is to check then
                    thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
        elif( seq["index"] == 0 ): # for the first step
            if( currentState in seq["statesAndTimeout"][seq["index"]] ): # if the current state correspond to one of the described ones
                # then we go to the next step
                seq["previousStepTime"] = currentTime
                seq["index"] += 2
                if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                    seq["index"] = -1 # then the sequence is completed
                else: # if there is at least one step left
                    # start clock to timeout
                    nTimeoutMin = 0
                    nTimeoutMax = 5
                    if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                        if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                    else:
                        if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                        else:
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                    thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
                    thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
            else: # if the current state does not correspond to the first described
                aSeqsTemp.remove(seq) # then it is not this sequence which has just been started

    def updateSeqsHandler(self, currentState, currentTime):
        "Update list of detected sequences."
        aSeqsTemp = []
        aSeqsTemp.extend( self.aDetectedSeqs )
        for seq in self.aDetectedSeqs:
            self.updateDetectedSeqs( seq, aSeqsTemp, currentState, currentTime )
        self.aDetectedSeqs = aSeqsTemp
        self.mutexCheckIfSeqsCorrespondingLeft.lock( self.checkIfSeqsCorrespondingLeft, None )

    def processCurrentState(self, param):
        "Process the current tactile sensor state."
        pValue = param[0]
        currentState = param[1]
        currentTime = param[2]
        if( pValue == 1 and not self.bSeqStarted ):
            self.bSeqStarted = True
            for seq in self.aDetectedSeqs:
                seq["previousStepTime"] = currentTime
        # update sequences handler
        if( self.bSeqStarted ):
            self.updateSeqsHandler(currentState, currentTime)
        self.mutexProcessCurrentState.unlock()

    def onFrontTactilTouched(self, param):
        "Handle an action (touch or release) on the front tactile sensor."
        self.logger.debug( "Change detected on the front tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [pValue, self.nMiddle, self.nRear]
        self.nFront = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onMiddleTactilTouched(self, param):
        "Handle an action (touch or release) on the middle tactile sensor."
        self.logger.debug( "Change detected on the middle tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [self.nFront, pValue, self.nRear]
        self.nMiddle = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onRearTactilTouched(self, param):
        "Handle an action (touch or release) on the rear tactile sensor."
        self.logger.debug( "Change detected on the rear tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [self.nFront, self.nMiddle, pValue]
        self.nRear = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onTactilTouched(self, pDataName, pValue, pMessage):
        "Handle an action (touch or release) on the tactile sensor."
        self.mutexTactilTouched.lock( getattr( self, "on" + pDataName ), [pValue, time.time()] )

# OUTPUTS ACTIVATION --------------------------------------------------------------------------------------

    def goOut(self, outputName, cancelReason = ""):
        "Activate the right output (a choice output or the other output)."
        try:
            self.memory.unsubscribeToEvent( "FrontTactilTouched", self.getName() )
            self.memory.unsubscribeToEvent( "MiddleTactilTouched", self.getName() )
            self.memory.unsubscribeToEvent( "RearTactilTouched", self.getName() )
        except:
            pass

        self.bGoOut = True
        self.bInTactileSensorMenu = False
        if( outputName in self.asExitWords ):
            try:
                self.other( cancelReason )
                self.logger.debug( "Output 'other' stimulated because cancel asked: " + str(cancelReason) + "." )
            except:
                try:
                    self.onStopped( cancelReason )
                    self.logger.debug( "Output 'onStopped' stimulated because cancel asked: " + str(cancelReason) + "." )
                except:
                    try:
                        self.onStopped()
                        self.logger.debug( "Output 'onStopped' stimulated because cancel asked." )
                    except:
                        choregraphe = ALProxy( "ALChoregraphe" )
                        choregraphe.onPythonError( self.getName(), "goOut", "Invalid output: the main output name needs to be 'other', and it needs to be dynamic (because it can be either a string, or an integer)." )
        else:
            nOutput = -1
            for i in range( len (self.aChoices) - len (self.aDefaultChoices) ):
                if( nOutput == -1 ):
                    if( outputName in self.aChoices[i+len( self.aDefaultChoices )] ):
                        nOutput = i
            if( nOutput != -1):
                if( self.bExternChoices ):
                    if( self.bRepeatValidatedChoice ):
                        self.skipTTS()
                        self.tts.say( outputName )
                        self.logger.debug( "Robot says: " + str(outputName) )
                    try:
                        self.other( self.aChoiceIndexes[nOutput] )
                        self.logger.debug( "Output 'other' stimulated with: " + str(self.aChoiceIndexes[nOutput]) + " (corresponding to the choice '" + str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]) + "')." )
                    except:
                        try:
                            self.onStopped( self.aChoiceIndexes[nOutput] )
                            self.logger.debug( "Output 'onStopped' stimulated with: " + str(self.aChoiceIndexes[nOutput]) + " (corresponding to the choice '" + str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]) + "')." )
                        except:
                            choregraphe = ALProxy( "ALChoregraphe" )
                            choregraphe.onPythonError( self.getName(), "goOut", "Invalid type of output: using the input 'choicesList', the main output needs to be dynamic (because it can be either a string, or an integer)." )
                else:
                    if( self.bRepeatValidatedChoice ):
                        self.skipTTS()
                        self.tts.say( outputName )
                        self.logger.debug( "Robot says: " + str(outputName) )
                    try:
                        func = getattr( self, "output_" + str(self.aChoiceIndexes[nOutput]+1) ) #+1 because the first one is output_1 corresponding to the element 0 in the list.
                        func(outputName)
                        self.logger.debug( "Output 'output_" + str(self.aChoiceIndexes[nOutput]+1) + "' stimulated with: " + str(outputName) + "." )
                    except:
                        choregraphe = ALProxy( "ALChoregraphe" )
                        choregraphe.onPythonError( self.getName(), "goOut", "Invalid output: the output 'output_" + str(self.aChoiceIndexes[nOutput]+1) + "' was expected to be stimulated with: " + str(outputName) + " but could not." )
        self.onUnload()
        # come back to an initial position and stop movement animation
        if( self.nFrameNumber != self.aFrameNumbers["end"] ):
            self.nFrameNumber = self.aFrameNumbers["end"]
            try:
                self.getTimeline().goTo(self.nFrameNumber)
            except: # if NAOqi < 1.14
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass

# UNLOAD --------------------------------------------------------------------------------------------------

    def goOutOfQuestionRecoReaction(self):
        "Set some variables to go out of the question-recognition-reaction loop and reinitialize other variables which are going to be used again only on the next start of this box."
        self.bGoOut = True
        self.bMustStop = True
        self.nCountFailure = 0
        self.nCountNoReply = 0
        self.bInConfirmation = False
        self.bVocabularyLoaded = False
        self.skipTTS()
        for idTTS in self.aIdsTTS:
            try:
                self.aIdsTTS.remove( idTTS )
            except:
                self.logger.debug( "Warning: The task ID corresponding to the Text-To-Speech could not have been removed from the ID tasks list." )
        try:
            self.memory.unsubscribeToEvent( "WordRecognized", self.getName() )
            self.bRecoIsWaitingForVoice = False
            self.bRecoIsHearingOrAnalysing = False
            self.logger.debug( "Speech recognition stopped." )
            self.memory.unsubscribeToEvent( "SpeechDetected", self.getName() )
        except:
            pass

    def onUnload(self):
        "Reinitialize variables to default state."
        self.goOutOfQuestionRecoReaction()
        self.bExternChoices = False
        self.bInTactileSensorMenu = False
        try:
            self.memory.unsubscribeToEvent( "FrontTactilTouched", self.getName() )
            self.memory.unsubscribeToEvent( "MiddleTactilTouched", self.getName() )
            self.memory.unsubscribeToEvent( "RearTactilTouched", self.getName() )
        except:
            pass
        self.bIsRunning = False]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <arabic>
                                                        <keyword>نعم</keyword>
                                                        <keyword>لا</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </arabic>
                                                    <brazilian>
                                                        <keyword>sim</keyword>
                                                        <keyword>não</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </brazilian>
                                                    <chinese>
                                                        <keyword>是</keyword>
                                                        <keyword>不是</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </chinese>
                                                    <czech>
                                                        <keyword>ano</keyword>
                                                        <keyword>ne</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </czech>
                                                    <danish>
                                                        <keyword>ja</keyword>
                                                        <keyword>nej</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </danish>
                                                    <dutch>
                                                        <keyword>ja</keyword>
                                                        <keyword>nee</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </dutch>
                                                    <english>
                                                        <keyword>greet people</keyword>
                                                        <keyword>tai chi</keyword>
                                                        <keyword>macarena</keyword>
                                                        <keyword></keyword>
                                                    </english>
                                                    <finnish>
                                                        <keyword>kyllä</keyword>
                                                        <keyword>ei</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </finnish>
                                                    <french>
                                                        <keyword>oui</keyword>
                                                        <keyword>non</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </french>
                                                    <german>
                                                        <keyword>ja</keyword>
                                                        <keyword>nein</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </german>
                                                    <italian>
                                                        <keyword>sì</keyword>
                                                        <keyword>no</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </italian>
                                                    <japanese>
                                                        <keyword>はい</keyword>
                                                        <keyword>いいえ</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </japanese>
                                                    <korean>
                                                        <keyword>예</keyword>
                                                        <keyword>아니</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </korean>
                                                    <polish>
                                                        <keyword>tak</keyword>
                                                        <keyword>nie</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </polish>
                                                    <portuguese>
                                                        <keyword>sim</keyword>
                                                        <keyword>não</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </portuguese>
                                                    <russian>
                                                        <keyword>да</keyword>
                                                        <keyword>нет</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </russian>
                                                    <spanish>
                                                        <keyword>si</keyword>
                                                        <keyword>no</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </spanish>
                                                    <swedish>
                                                        <keyword>ja</keyword>
                                                        <keyword>ingen</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </swedish>
                                                    <turkish>
                                                        <keyword>evet</keyword>
                                                        <keyword>hayır</keyword>
                                                        <keyword></keyword>
                                                        <keyword></keyword>
                                                    </turkish>
                                                    <language>english</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is&#x0A;received on this input. The signal can be&#x0A;either a string so that the robot asks a&#x0A;question before the recognition of a&#x0A;choice, or a bang so that the speech&#x0A;recognition starts immediately without any&#x0A;question." id="2" />
                                                <Input name="choicesList" type="0" type_size="1" nature="1" inner="0" tooltip="To have extern choices list (for example,&#x0A;depending on extern variables).&#x0A;!! Warning !! : Must be set before each&#x0A;time the box is started (with onStart&#x0A;input). Otherwise, the choices displayed&#x0A;on the box will be selected." id="3" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip='Box behavior stops when a signal is&#x0A;received on this input, the &apos;other&apos; output is&#x0A;stimulated by &quot;onStop&quot;.' id="4" />
                                                <Output name="other" type="0" type_size="1" nature="1" inner="0" tooltip='When the user skipped the question, this output gives how it has been&#x0A;skipped. Gives also the number of the choice chosen in case of external&#x0A;choices.&#x0A;This output can be:&#x0A;- &quot;timeout&quot; if the user has not replied.&#x0A;- &quot;notUnderstood&quot; if the interaction with the speech recognition failed.&#x0A;- &quot;onStop&quot; if the onStop input has been activated.&#x0A;- &quot;wordRecognised&quot; if the exit command has been understood.&#x0A;- &quot;onTactileSensor&quot; if the user has tapped the tactile sensor of the robot.&#x0A;- an integer being the number of the external choice in the input list.' id="5" />
                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                <Parameter name="Minimum threshold to understand" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.2" min="0" max="1" tooltip="Minimum threshold to get in order to be understood by the robot." id="9" />
                                                <Parameter name="Minimum threshold to be sure" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0" max="1" tooltip="Minimum threshold to get so that the robot would be sure about the user&apos;s&#x0A;answer. Below this threshold, the robot asks a confirmation about what has been&#x0A;understood." id="10" />
                                                <Parameter name="Speech recognition timeout when confirmation" inherits_from_parent="0" content_type="1" value="6" default_value="6" min="1" max="20" tooltip="When the robot asks if what he understood is correct, after this time, if there has been&#x0A;nothing heard, the speech recognition is stopped and the answer understood is&#x0A;considered as correct." id="11" />
                                                <Parameter name="Speech recognition timeout" inherits_from_parent="0" content_type="1" value="6" default_value="6" min="1" max="20" tooltip="After this time, if there has been nothing heard, the speech recognition is stopped&#x0A;and the question is repeated or is skipped." id="12" />
                                                <Parameter name="Maximum number of repetition when no reply" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="20" tooltip='After this number of times when the user did not reply, the question is skipped, and&#x0A;the output other is stimulated with &quot;timeout&quot;.' id="13" />
                                                <Parameter name="Repeat validated choice" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If this option is activated, the robot repeats the validated choice when it exits the box." id="14" />
                                                <Parameter name="Activate ears light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate ears light animation (turn, flash, etc...)." id="15" />
                                                <Parameter name="Activate eyes light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate eyes light animation (turn, flash, etc...)." id="16" />
                                                <Parameter name="Activate brain light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate brain light animation (turn, flash, etc...)." id="17" />
                                                <Parameter name="Tactile sensor menu timeout" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="1" max="20" tooltip="After this time, if there has been no action made on the tactile sensor or the torso&#x0A;button, the choice currently selected is repeated or the question is skipped." id="18" />
                                                <Parameter name="Maximum number of repetition when failure" inherits_from_parent="0" content_type="1" value="5" default_value="5" min="1" max="20" tooltip='After this number of times when the robot did not understand the user, the question&#x0A;is skipped, and the output other is stimulated with &quot;notUnderstood&quot;.' id="19" />
                                                <Parameter name="Activate help when failure" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="When this parameter is activated, when the robot did not understand the user, he&#x0A;says some help enumerating available choices and attracting attention on the&#x0A;other available modalities (head tactile sensor)." id="20" />
                                                <Parameter name="Activate help command" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip='Enable the help command. So you can say &quot;help&quot; during the speech recognition&#x0A;and the robot will tell you more information.&#x0A;You will still be able to ask help by clicking the torso button.' id="21" />
                                                <Parameter name="Activate repeat command" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip='Activate the repeat command. So you can say &quot;repeat&quot; during the speech&#x0A;recognition and the robot will repeat the question.' id="22" />
                                                <Parameter name="Activate exit command" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip='Enable the exit command. So you can say &quot;exit&quot; during the speech recognition&#x0A;and the box will be stopped and the &apos;other&apos; output will be stimulated with&#x0A;&quot;wordRecognised&quot;.&#x0A;You will still be able to exit the box with&#x0A;the tactile sensor.' id="23" />
                                                <Parameter name="Sentences file" inherits_from_parent="0" content_type="4" value="/Aldebaran/choice_sentences_light.xml" default_value="/Aldebaran/choice_sentences_light.xml" tooltip="File containing all necessary sentences in each supported language." id="24" />
                                            </Box>
                                            <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="59" y="54">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你喜欢吃巧克力吗？ ",
			"English" : " What do you want me to do? ",
			"French" : " Aimes-tu le chocolat ? ",
			"German" : " Mögen Sie Schokolade? ",
			"Italian" : " Ti piace il cioccolato? ",
			"Japanese" : " チョコレートが好きですか ",
			"Korean" : " 당신은 초콜렛을 좋아합니까? ",
			"Portuguese" : " Gostas de chocolate? ",
			"Brazilian" : " Você gosta de chocolate? ",
			"Spanish" : " ¿Te gusta el chocolate? ",
			"Arabic" : " هل تحب الشوكولاته؟ ",
			"Polish" : " Lubisz czekoladę? ",
			"Czech" : " Máš rád čokoládu? ",
			"Dutch" : " Hou je van chocolade? ",
			"Danish" : " Kan du lide chokolade? ",
			"Finnish" : " Pidätkö suklaasta? ",
			"Swedish" : " Gillar du choklad? ",
			"Russian" : " Вы любите шоколад? ",
			"Turkish" : " Çikolata sever misin? "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <chinese>
                                                        <![CDATA[你喜欢吃巧克力吗？]]>
</chinese>
                                                    <english>
                                                        <![CDATA[What do you want me to do?]]>
</english>
                                                    <french>
                                                        <![CDATA[Aimes-tu le chocolat ?]]>
</french>
                                                    <german>
                                                        <![CDATA[Mögen Sie Schokolade?]]>
</german>
                                                    <italian>
                                                        <![CDATA[Ti piace il cioccolato?]]>
</italian>
                                                    <japanese>
                                                        <![CDATA[チョコレートが好きですか]]>
</japanese>
                                                    <korean>
                                                        <![CDATA[당신은 초콜렛을 좋아합니까?]]>
</korean>
                                                    <portuguese>
                                                        <![CDATA[Gostas de chocolate?]]>
</portuguese>
                                                    <brazilian>
                                                        <![CDATA[Você gosta de chocolate?]]>
</brazilian>
                                                    <spanish>
                                                        <![CDATA[¿Te gusta el chocolate?]]>
</spanish>
                                                    <arabic>
                                                        <![CDATA[هل تحب الشوكولاته؟]]>
</arabic>
                                                    <polish>
                                                        <![CDATA[Lubisz czekoladę?]]>
</polish>
                                                    <czech>
                                                        <![CDATA[Máš rád čokoládu?]]>
</czech>
                                                    <dutch>
                                                        <![CDATA[Hou je van chocolade?]]>
</dutch>
                                                    <danish>
                                                        <![CDATA[Kan du lide chokolade?]]>
</danish>
                                                    <finnish>
                                                        <![CDATA[Pidätkö suklaasta?]]>
</finnish>
                                                    <swedish>
                                                        <![CDATA[Gillar du choklad?]]>
</swedish>
                                                    <russian>
                                                        <![CDATA[Вы любите шоколад?]]>
</russian>
                                                    <turkish>
                                                        <![CDATA[Çikolata sever misin?]]>
</turkish>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="3" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="6" />
                                            <Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="7" />
                                            <Link inputowner="0" indexofinput="7" outputowner="1" indexofoutput="8" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Speech" type="Lock" timeout="0" />
                            <Resource name="Speech recognition" type="Lock" timeout="0" />
                        </Box>
                        <Box name="HumanGreeter" id="5" localization="8" tooltip="" x="604" y="132">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Output name="output" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="HumanGreeter2" id="1" localization="8" tooltip="" x="401" y="264">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# -*- encoding: UTF-8 -*-
""" Say 'hello, you' each time a human face is detected.
If no face is detected sound tracking is activated.
If a face is detected face tracking is activated.
If a face is recognized Nao sais hello and waves its hand.
"""

import sys
import time
import re
import subprocess
import json
import httplib, urllib, base64

from naoqi import ALProxy
from naoqi import ALBroker
from naoqi import ALModule


# Global variables. Module names must be global otherwise the callback functions will report for example:
# 'python object not found FaceDetector'.
SpeechRecognizer = None
FaceDetector = None
ReactToTouch = None


# runShellCommandWait(cmd) will block until 'cmd' is finished.
# This because the communicate() method is used to communicate to interact with the process through the redirected pipes.
def runShellCommandWait(cmd):
    return subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True).communicate()[0]


def testConnected():
    try :
        stri = "http://www.google.com"
        data = urllib.urlopen(stri)
        return True
    except Exception, e:
        return False


# The below class is an alternative to the Nao speech recognition.
# The Nao speech recognition only works with predefined words while with the Google Speech to Text
# all speech can be recognized. The below class is not a module in the NAOqi sense because we do not
# register it with ALModule.__init__(). This is not needed as we do not use subscribeToEvent().
# Instead we just wait for Google to respond.
class speechRecognitionGoogleModule():
    def __init__(self):
        try:
            self.recorder = ALProxy("ALAudioRecorder")
            self.player = ALProxy('ALAudioPlayer')
            self.leds = ALProxy("ALLeds")
        except Exception, e:
            print "speechRecognitionGoogleModule exception: " + str(e)
    def speechToText(self):
        text = ""
        try:
            # Stop recording if recorder is still recording, added for robustness.
            try:
                self.recorder.stopMicrophonesRecording()
            except Exception, e:
                pass
            self.player.playFile("/usr/share/naoqi/wav/begin_reco.wav")
            # Start recording 16000 Hz, ogg format, front microphone.
            self.recorder.startMicrophonesRecording("/home/nao/reneb/speech.ogg", "ogg", 16000, (0,0,1,0))
            for _ in range(8):
            # Twinkle eye leds to indicate Nao is listening.
                self.leds.fadeRGB("FaceLeds", 255*256*0 + 256*0 + 0, 0.2)
                self.leds.fadeRGB("FaceLeds", 255*256*0 + 256*0 + 255, 0.2)
            self.recorder.stopMicrophonesRecording()
            self.player.playFile("/usr/share/naoqi/wav/end_reco.wav")
            runShellCommandWait('ffmpeg -y -i /home/nao/reneb/speech.ogg /home/nao/reneb/speech.flac')
            stdOutAndErr = runShellCommandWait('curl -s -X POST --header "content-type: audio/x-flac; rate=16000;" --data-binary @"/home/nao/reneb/speech.flac" "http://www.google.com/speech-api/v2/recognize?client=chromium&lang=en_US&key=AIzaSyC3qc74SxJI7fIv747QPlSQPS0rl4AnSAM"')
        except Exception, e:
            print "speechToText exception: " + str(e)
            return text
        # Google always replies with an empty JSON response '{"result":[]}' on the first line.
        # If there is speech, The second line contains the actual JSON result.
        # If there is no speech, there is no second line so we have to check this.
        if len(stdOutAndErr.splitlines()) != 2:
            # Return empty text to indicate the speech is invalid.
            return text
        stdOutAndErr = stdOutAndErr.splitlines()[1]
        # Now stdOutAndErr contains the JSON response from the STT engine.
        decoded = json.loads(stdOutAndErr)
        try:
            confidence = decoded["result"][0]["alternative"][0]["confidence"]  # not a string but a float
        except Exception, e:
            print "speechToText exception: " + str(e)
            pass
        try:
            # Use encode() to convert the Unicode strings contained in JSON to ASCII.
            text = decoded["result"][0]["alternative"][0]["transcript"].encode('ascii', 'ignore')
        except Exception, e:
            print "speechToText exception: " + str(e)
            pass

        return text


# Class to react on touch.
class ReactToTouchModule(ALModule):
    """ A simple module able to react to sensor events.
    Leave this doc string else this module will not be bound!

    """
    def __init__(self, name):
        ALModule.__init__(self, name)
        # No need for IP and port here because
        # we have our Python broker connected to NAOqi broker
        self.memory = ALProxy("ALMemory")
        # Unsubscribe to event if still subscribed.
        try:
            self.memory.unsubscribeToEvent("TouchChanged", "ReactToTouch")
        except Exception, e:
            pass
        self.memory.subscribeToEvent("TouchChanged", "ReactToTouch", "onTouched")
        self.touched = ""

    def onTouched(self, strVarName, value):
        self.touched = str(value)

    def getTouch(self):
        if self.touched != "":
            tmpTouched = self.touched
            self.touched = ""
            return tmpTouched
        else:
            return ""


# Class for native Nao speech recognition. This recognition must be fed with predefined keywords.
class speechRecognitionNaoModule(ALModule):
    """ A simple module able to react to speech events.
    Leave this doc string else this module will not be bound!

    """
    def __init__(self, name):
        ALModule.__init__(self, name)
        # No need for IP and port here because
        # we have our Python broker connected to NAOqi broker
        self.memory = ALProxy("ALMemory")
        # Unsubscribe to event if still subscribed to stop ASR engine.
        try:
            self.memory.unsubscribeToEvent("WordRecognized", "SpeechRecognizer")
        except Exception, e:
            pass
        self.asr = ALProxy("ALSpeechRecognition")
        vocabulary = ["rene", "james"]
        self.asr.setVocabulary(vocabulary, False )
        self.asr.setVisualExpression(True)
        self.word = ""

    def startListening(self):
        # Subscribe to the WordRecognized event:
        try:
            self.memory.subscribeToEvent("WordRecognized", "SpeechRecognizer", "onWordRecognized")
        except Exception, e:
            pass

    def stopListening(self):
        # Unsubscribe to the WordRecognized event:
        try:
            self.memory.unsubscribeToEvent("WordRecognized", "SpeechRecognizer")
        except Exception, e:
            pass

    def speechToText(self):
        self.startListening()
        startTime = int(time.time())
        wordRecognized = ""
        while True:
            if int(time.time()) - startTime > 5:
                # Timeout.
                self.stopListening()
                break
            if self.word != "":
                wordRecognized = self.word
                self.word = ""
                break
            time.sleep(0.5)
        return wordRecognized

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= 0.3):
            # Stop speech recognition.
            self.stopListening()
            self.word = value[0]

# Face detection class to detect faces.
# This class also contains face tracking and sound tracking functionality.
class FaceDetectionModule(ALModule):
    """ A simple module able to react to facedetection events.
    Leave this doc string else this module will not be bound!

    """
    def __init__(self, name):
        ALModule.__init__(self, name)
        # No need for IP and port here because
        # we have our Python broker connected to NAOqi broker
        self.memory = ALProxy("ALMemory")
        # Unsubscribe to event if still subscribed.
        try:
            self.memory.unsubscribeToEvent("FaceDetected", "FaceDetector")
        except Exception, e:
            pass
        self.tracking = ALProxy("ALTracker")
        self.timeFaceDetectionStartedInSeconds = 0
        self.timeFirstRecognitionInSeconds = 0
        self.previousTimeInSeconds = 0
        self.timeInSeconds = 0
        self.face = ""
        self.tracker = ALProxy("ALTracker")
        self.motion = ALProxy("ALMotion")
        self.leds = ALProxy("ALLeds")

    def learnFace(self, face):
        # Create a proxy to ALFaceDetection
        try:
            faceProxy = ALProxy("ALFaceDetection")
            # First forget face to be enable learning it again.
            faceProxy.forgetPerson(face)
            faceProxy.learnFace(face)
        except Exception, e:
            print "learnFace exception: " + str(e)


    def unlearnAllFaces(self):
        # Create a proxy to ALFaceDetection
        try:
            faceProxy = ALProxy("ALFaceDetection")
            faceProxy.clearDatabase()
        except Exception, e:
            print "unlearnAllFaces exception: " + str(e)

    def lookForward(self):
        self.tracker.lookAt([1.0, 0.0, 0.0], 0, 0.20, False)

    def startFaceDetection(self):
        # Subscribe to the FaceDetected event:
        try:
            self.timeFaceDetectionStartedInSeconds = int(time.time())
            self.memory.subscribeToEvent("FaceDetected", "FaceDetector", "onFaceDetected")
            # Set eye leds.
            self.leds.fadeRGB("FaceLeds", 255*256*0 + 256*0 + 255, 0.2)
        except Exception, e:
            print "startFaceDetection exception: " + str(e)

    def stopFaceDetection(self):
        # Unsubscribe to the FaceDetected event:
        try:
            self.memory.unsubscribeToEvent("FaceDetected", "FaceDetector")
            self.leds.fadeRGB("FaceLeds", 255*256*100 + 256*100 + 100, 0.2)
        except Exception, e:
            print "stopFaceDetection exception: " + str(e)

    def startFaceTracking(self):
        try:
            # Start face tracking.
            self.tracker.registerTarget("Face", 0.2)
            self.tracker.setMode("Head")  # Only move head.
            self.tracker.track("Face")
            # Set stiffness of head to 1.0 as this is required for face tracking.
            self.motion.setStiffnesses("Head", 1.0)
        except Exception, e:
            print "startFaceTracking exception: " + str(e)
            pass

    def stopFaceTracking(self):
        try:
            # Stop face tracking.
            self.tracker.stopTracker()
            self.tracker.unregisterTarget("Face")
        except Exception, e:
            print "stopFaceTracking exception: " + str(e)
            pass

    def startSoundTracking(self):
        try:
            # Start face tracking.
            self.soundLocation = ALProxy("ALSoundLocalization")
            self.soundLocation.setParameter("Sensitivity", 0.7)
            self.tracker.setEffector("None")
            self.tracker.registerTarget("Sound", [0.5, 0.1])
            self.tracker.setRelativePosition([-0.3, 0.0, 0.0, 0.1, 0.1, 0.3])
            self.tracker.setMode("Head")  # Only move head.
            self.tracker.track("Sound")
            # Set stiffness of head to 1.0 as this is required for face tracking.
            self.motion.setStiffnesses("Head", 1.0)
        except Exception, e:
            print "startSoundTracking exception: " + str(e)
            pass

    def stopSoundTracking(self):
        try:
            # Stop face tracking.
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget("Sound")
        except Exception, e:
            print "stopSoundTracking exception: " + str(e)
            pass

    def getFace(self):
        if self.face != "":
            tmpFace = self.face
            self.face = ""
            return tmpFace
        else:
            return ""

    def onFaceDetected(self, *_args):
        """ This will be called each time a face is
        detected.
        Leave this doc string else this method will not be bound!
        """
        val = self.memory.getData("FaceDetected")
        if(val and isinstance(val, list) and len(val) >= 2):
            # Stop face detection.
            self.stopFaceDetection()
            # indicata a face is detected.
            self.face = "detected"


# The below class is an alternative to the Nao face recognition, which is quite limited.
# This class makes use of cloud services to recognize faces.
class FaceRecognition():
    def __init__(self):
        self.key = '43acf60f71204ca78c4c09a1cb2c6916'

    def getFaceIdFromNewFace(self, pic):
        headers = {
            # Request headers
            'Content-Type': 'application/octet-stream',
            'Ocp-Apim-Subscription-Key': self.key,
        }

        params = urllib.urlencode({
            'returnFaceLandmarks': 'true',
            'returnFaceAttributes': 'age',
        })

        faceId = None
        try:
            conn = httplib.HTTPSConnection('api.projectoxford.ai')
            conn.request("POST", "/face/v1.0/detect?%s" % params, open(pic,"rb").read(), headers)
            response = conn.getresponse()
            data = response.read()
            conn.close()
            decoded = json.loads(data)
            # Use encode() to convert the Unicode strings contained in JSON to ASCII.
            try:
                faceId = decoded[0]["faceId"].encode('ascii', 'ignore')
            except:
                pass
            return faceId
        except Exception,e:
            print "getFaceIdFromNewFace exception: " + str(e)
            return faceId

    def createFaceList(self, faceListId, facelistName):
        headers = {
            # Request headers
            'Content-Type': 'application/json',
            'Ocp-Apim-Subscription-Key': self.key,
        }

        params = urllib.urlencode({
        })

        body = '{\
            "name":"' + facelistName + '",\
            "userData":"User-provided data attached to the face list"\
        }'

        try:
            conn = httplib.HTTPSConnection('api.projectoxford.ai')
            conn.request("PUT", "/face/v1.0/facelists/" + faceListId + "?%s" % params, body, headers)
            response = conn.getresponse()
            data = response.read()
            conn.close()
            return True
        except Exception,e:
            print "createFaceList exception: " + str(e)
            return False

    def deleteFaceList(self, faceListId):
        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': self.key,
        }

        params = urllib.urlencode({
        })

        try:
            conn = httplib.HTTPSConnection('api.projectoxford.ai')
            conn.request("DELETE", "/face/v1.0/facelists/" + faceListId + "?%s" % params, "{body}", headers)
            response = conn.getresponse()
            data = response.read()
            conn.close()
            return True
        except Exception,e:
            print "deleteFaceList exception: " + str(e)
            return False

    def addFaceToList(self, faceListId, pic, userData):
        headers = {
            # Request headers
            'Content-Type': 'application/octet-stream',
            'Ocp-Apim-Subscription-Key': self.key,
        }

        params = urllib.urlencode({
            # Request parameters
            'userData': userData,
        })

        try:
            conn = httplib.HTTPSConnection('api.projectoxford.ai')
            conn.request("POST", "/face/v1.0/facelists/" + faceListId + "/persistedFaces?%s" % params, open(pic,"rb").read(), headers)
            response = conn.getresponse()
            data = response.read()
            print "added face: " + data
            conn.close()
            return True
        except Exception,e:
            print "addFaceToList exception: " + str(e)
            return False

    def deleteFaceFromList(self, faceListId, name):
        faceId = self.nameToFaceId(faceListId, name)
        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': self.key,
        }

        params = urllib.urlencode({
        })

        try:
            conn = httplib.HTTPSConnection('api.projectoxford.ai')
            conn.request("DELETE", "/face/v1.0/facelists/" + faceListId + "/persistedFaces/" + faceId + "?%s" % params, "", headers)
            response = conn.getresponse()
            data = response.read()
            conn.close()
            return True
        except Exception,e:
            print "deleteFaceFromList exception: " + str(e)
            return False

    def getRecognizedFaceId(self, faceListId, newFaceId):
        headers = {
            # Request headers
            'Content-Type': 'application/json',
            'Ocp-Apim-Subscription-Key': self.key,
        }

        params = urllib.urlencode({
        })

        body = '{"faceId":"' + newFaceId + '",\
            "faceListId":"' + faceListId + '",\
            "maxNumOfCandidatesReturned":1\
        }'

        faceId = ""
        confidence = 0
        try:
            conn = httplib.HTTPSConnection('api.projectoxford.ai')
            conn.request("POST", "/face/v1.0/findsimilars?%s" % params, body, headers)
            response = conn.getresponse()
            data = response.read()
            conn.close()
            decoded = json.loads(data)
            try:
                # Use encode() to convert the Unicode strings contained in JSON to ASCII.
                faceId = decoded[0]["persistedFaceId"].encode('ascii', 'ignore')
                confidence = decoded[0]["confidence"]
            except:
                pass
            return faceId, confidence
        except Exception,e:
            print "getRecognizedFaceId exception: " + str(e)
            return faceId, confidence

    def getFaceList(self, faceListId):
        headers = {
            # Request headers
            'Ocp-Apim-Subscription-Key': self.key,
        }

        params = urllib.urlencode({
        })

        decoded = None
        try:
            userData = ""
            conn = httplib.HTTPSConnection('api.projectoxford.ai')
            conn.request("GET", "/face/v1.0/facelists/" + faceListId + "?%s" % params, "", headers)
            response = conn.getresponse()
            data = response.read()
            conn.close()
            decoded = json.loads(data)
            return decoded
        except Exception,e:
            print "getFaceList exception: " + str(e)
            return decoded

    def getFaceNames(self, faceListId):
        faceNames = []
        decoded = self.getFaceList(faceListId)
        if decoded:
            try:
                for face in decoded["persistedFaces"]:
                    # Use encode() to convert the Unicode strings contained in JSON to ASCII.
                    faceNames.append(face["userData"].encode('ascii', 'ignore'))
            except Exception,e:
                pass
        return faceNames

    def faceIdToName(self, faceListId, faceId):
        name = ""
        decoded = self.getFaceList(faceListId)
        if decoded:
            try:
                for face in decoded["persistedFaces"]:
                    if face["persistedFaceId"] == faceId:
                        # Use encode() to convert the Unicode strings contained in JSON to ASCII.
                        name = face["userData"].encode('ascii', 'ignore')
                        break
            except Exception,e:
                pass
        return name

    def nameToFaceId(self, faceListId, name):
        faceId = ""
        decoded = self.getFaceList(faceListId)
        if decoded:
            try:
                for face in decoded["persistedFaces"]:
                    if face["userData"] == name:
                        # Use encode() to convert the Unicode strings contained in JSON to ASCII.
                        faceId = face["persistedFaceId"].encode('ascii', 'ignore')
                        break
            except Exception,e:
                pass
        return faceId


# Main Class containing the standard block methods. When used in Choregraphe this class is initiated automatically by NAOqi.
class MyClass(GeneratedClass):
    def __init__(self):
        global SpeechRecognizer, FaceDetector, ReactToTouch
        GeneratedClass.__init__(self)
        # Warning: module names must be global variables.
        # The name given to the constructor must be the name of the variable.

        # Enable one of the two next lines for Nao speech recognition or Google speech recognition
        #SpeechRecognizer = speechRecognitionNaoModule("SpeechRecognizer")
        SpeechRecognizer = speechRecognitionGoogleModule()

        FaceDetector = FaceDetectionModule("FaceDetector")
        ReactToTouch = ReactToTouchModule("ReactToTouch")
        self.faceRecognition = FaceRecognition()
        self.faceListId = "42"
        self.tts = ALProxy("ALTextToSpeech")
        self.doContinue = False

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        # Put clean-up code here.
        # This method is called when the onInput_onStart() thread ends which will activate the onStopped output
        # AND this onStopped output is connected to the onStopped output of the Choregraphe bounding box.
        # This method is also called when the behavior is stopped in Choregraphe.
        # The behavior can be stopped in Choregraphe using the red 'Stop' button, or by using the 'Run Behavior'
        # box and activating the 'onStop' input. In Python this means the ALBehaviorManager method stopBehavior() is called.
        # First set self.doContinue to False otherwise the onInput_onStart() thread will continue if it is still running.
        self.doContinue = False
        # Important to call exit on the modules created, otherwise the next time ALModule.__init__(self, name)
        # will fail because the modules are already registered!
        # Use try...except here in case the (one of the) modules have already exitted.
        try:
            FaceDetector.stopFaceDetection()
        except Exception, e:
            pass
        try:
            FaceDetector.stopFaceTracking()
        except Exception, e:
            pass
        try:
            FaceDetector.stopSoundTracking()
        except Exception, e:
            pass
        try:
            FaceDetector.exit()
        except Exception, e:
            pass

        # For Google speech recognition instead of Nao speech recognition disable the next try...except block.
#        try:
#            SpeechRecognizer.stopListening()
#            SpeechRecognizer.exit()
#        except Exception, e:
#            pass

        try:
            ReactToTouch.exit()
        except Exception, e:
            pass

    def onInput_onStart(self):
        global SpeechRecognizer, FaceDetector, ReactToTouch

        self.audiodevice = ALProxy("ALAudioDevice")
        self.audiodevice.setOutputVolume(50)

        while testConnected() == False:
            self.tts.say("not connected to the internet")
            if re.search('.*bumper.*true.*', ReactToTouch.getTouch(), re.IGNORECASE):
                self.finish()
                return
            time.sleep(5)

        self.doContinue = True
        self.tts.say("let's greet some people")
        while self.doContinue:
            FaceDetector.startFaceDetection()
            FaceDetector.startSoundTracking()
            face = ""
            count = 0
            while self.doContinue:
                if count == 10:
                    FaceDetector.lookForward()
                    count = 0
                count = count + 1
                # Possibility to interrupt by touch.
                if re.search('.*bumper.*true.*', ReactToTouch.getTouch(), re.IGNORECASE):
                    self.finish()
                    return
                face = FaceDetector.getFace();
                if face != "":
                    break
                time.sleep(0.5)
            # When the behaviour was stopped in Choregraphe by using the red 'Stop' button, onUnload() will be
            # called which will set self.doContinue to False. If this is the case, this thread must also be stopped.
            if self.doContinue == False:
                return
            print "face detected, going to take a picture"
            self.tts.say("let me check on you")
            FaceDetector.startFaceTracking()
            try:
                photoCapture = ALProxy("ALPhotoCapture")
                photoCapture.setResolution(3) # 1280x960 resolution
                photoCapture.setCameraID(0) # Top camera
                photoCapture.setPictureFormat("jpg")
                photoCapture.takePicture("/home/nao/reneb", "snapshot.jpg")
            except Exception, e:
                print "photoCapture exeption: " + str(e)
            newFaceId = self.faceRecognition.getFaceIdFromNewFace("/home/nao/reneb/snapshot.jpg")
            if newFaceId is not None:
                print "new face ID: " + newFaceId
                persistedFaceId, confidence = self.faceRecognition.getRecognizedFaceId(self.faceListId, newFaceId)
                print "recognized face ID: " + persistedFaceId + ", confidence: " + str(confidence)
                name = self.faceRecognition.faceIdToName(self.faceListId, persistedFaceId)
                print "\n***** recognized face name: " + name + ", confidence: " + str(confidence) + " *****\n"
                if self.doContinue and name == "":
                    self.tts.say("what is your name?")
                    name = SpeechRecognizer.speechToText()
                    # Possibility to interrupt by touch.
                    if re.search('.*bumper.*true.*', ReactToTouch.getTouch(), re.IGNORECASE):
                        self.finish()
                        return

                    if self.doContinue and name != "":
                        self.tts.say("nice to meet you, " + name + ", please keep still for a moment")
                        if self.faceRecognition.addFaceToList(self.faceListId, "/home/nao/reneb/snapshot.jpg", name) == True:
                            self.tts.say("thank you, I will remember you!")
                        else:
                            self.tts.say("could not add face to facelist")
                elif self.doContinue:
                    # ********** UNCOMMENT THE LINE BELOW WHEN RUNNING IN CHOREGRAPHE **********
                    self.onRecognized()
                    self.tts.say("hi again," + name)
            else:
                self.tts.say("sorry, could not take a good picture")
            time.sleep(5.0)

    def finish(self):
        try:
            FaceDetector.stopFaceDetection()
        except Exception, e:
            pass
        try:
            FaceDetector.stopFaceTracking()
        except Exception, e:
            pass
        try:
            FaceDetector.stopSoundTracking()
        except Exception, e:
            pass
        self.doContinue = False
        # ********** UNCOMMENT THE LINE BELOW WHEN RUNNING IN CHOREGRAPHE **********
        self.onStopped() #activate the output of the box

    def onInput_onStop(self):
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="onRecognized" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="Hello" id="2" localization="8" tooltip="Simple hello animation.&#x0A;&#x0A;!!Warning!! There is no speech in this box. It is a just an animation box with some&#x0A;leds animation." x="757" y="279">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="115">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="FaceLeds" index="1">
                                                            <Diagram>
                                                                <Box name="Light_AskForAttentionEyes" id="1" localization="8" tooltip="Set an animated gaze which calls for attention (purple eyes).&#x0A;&#x0A;Note: It is a never ending box. You must call onStop to stop it.&#x0A;&#x0A;*** state: 5a_release ***&#x0A;*** ref box in: 5a_release\Leds\Light_AskForAttentionEyes\Light_AskForAttentionEyes.xar ***&#x0A;*** last modification date(svn): Version it! ***" x="281" y="144">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self, False)

  def onLoad(self):
    self.bIsRunning = False;
    self.leds = ALProxy("ALLeds")

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.logger.info( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.2;
    self.leds.post.fadeRGB( "FaceLedsTop", 0xff00ff, rDuration );
    self.leds.post.fadeRGB( "FaceLedsInternal", 0xff00ff, rDuration );
    self.leds.post.fadeRGB( "FaceLedsBottom", 0xff00ff, rDuration );
    self.leds.fadeRGB( "FaceLedsExternal", 0xff00ff, rDuration );

    while( not self.bMustStop ):
      rTime = 0.1;
      self.leds.post.fadeRGB( "FaceLedsTop", 0xffffff, rTime );
      self.leds.fadeRGB( "FaceLedsBottom", 0xffffff, rTime );
      if( self.bMustStop ):
        break;
      rTime = 0.3
      self.leds.post.fadeRGB( "FaceLedsTop", 0xff00ff, rTime );
      self.leds.fadeRGB( "FaceLedsBottom", 0xff00ff, rTime );


    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="Nao">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="20" value="-7.73688" />
                                                            <Key frame="39" value="-20.1296" />
                                                            <Key frame="56" value="-23.8211" />
                                                            <Key frame="70" value="-23.9968" />
                                                            <Key frame="87" value="-29.7977" />
                                                            <Key frame="115" value="-21.5359" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="20" value="16.9607" />
                                                            <Key frame="39" value="-9.75839" />
                                                            <Key frame="56" value="-19.5144" />
                                                            <Key frame="70" value="-3.43018" />
                                                            <Key frame="87" value="-11.0768" />
                                                            <Key frame="115" value="-0.617646" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="64.0707" />
                                                            <Key frame="37" value="53.1721" />
                                                            <Key frame="54" value="53.8752" />
                                                            <Key frame="68" value="49.3927" />
                                                            <Key frame="85" value="51.4143" />
                                                            <Key frame="113" value="48.2502" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="20.8279" />
                                                            <Key frame="37" value="13.0056" />
                                                            <Key frame="54" value="11.6872" />
                                                            <Key frame="68" value="12.4782" />
                                                            <Key frame="85" value="14.2361" />
                                                            <Key frame="113" value="13.0056" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="-46.0577" />
                                                            <Key frame="37" value="-39.6416" />
                                                            <Key frame="54" value="-38.9384" />
                                                            <Key frame="68" value="-34.9833" />
                                                            <Key frame="85" value="-43.1572" />
                                                            <Key frame="113" value="-38.4111" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="18" value="-79.0123" />
                                                            <Key frame="37" value="-73.9145" />
                                                            <Key frame="54" value="-67.7621" />
                                                            <Key frame="68" value="-71.5415" />
                                                            <Key frame="85" value="-75.5845" />
                                                            <Key frame="113" value="-67.85" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="37" value="8.4352" />
                                                            <Key frame="113" value="6.85315" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="37" value="0.238207" />
                                                            <Key frame="113" value="0.240025" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="14.153" />
                                                            <Key frame="35" value="-67.1469" />
                                                            <Key frame="52" value="-62.4007" />
                                                            <Key frame="66" value="-72.2446" />
                                                            <Key frame="83" value="-65.8285" />
                                                            <Key frame="111" value="58.4504" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="-13.8893" />
                                                            <Key frame="35" value="-54.6711" />
                                                            <Key frame="52" value="-26.3699" />
                                                            <Key frame="66" value="-55.0226" />
                                                            <Key frame="83" value="-18.8112" />
                                                            <Key frame="111" value="-14.3288" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="-17.9323" />
                                                            <Key frame="35" value="32.3418" />
                                                            <Key frame="52" value="22.41" />
                                                            <Key frame="66" value="19.949" />
                                                            <Key frame="83" value="21.8826" />
                                                            <Key frame="93" value="56" />
                                                            <Key frame="111" value="47.3712" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="16" value="79.3686" />
                                                            <Key frame="35" value="13.8893" />
                                                            <Key frame="42" value="20" />
                                                            <Key frame="52" value="53.5285" />
                                                            <Key frame="60" value="39" />
                                                            <Key frame="66" value="11" />
                                                            <Key frame="76" value="15" />
                                                            <Key frame="83" value="40.5205" />
                                                            <Key frame="93" value="58.4" />
                                                            <Key frame="111" value="72.5131" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-17.9323" />
                                                            <Key frame="83" value="-17.405" />
                                                            <Key frame="111" value="10.4567" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="0.853478" />
                                                            <Key frame="83" value="0.854933" />
                                                            <Key frame="111" value="0.425116" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                                <Resource name="Head" type="Lock" timeout="0" />
                                                <Resource name="Arms" type="Lock" timeout="0" />
                                                <Resource name="Left eye leds" type="Lock" timeout="0" />
                                                <Resource name="Right eye leds" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Set Stiffness" id="7" localization="8" tooltip="Stiffen the motors selected in parameters." x="376" y="53">
                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            self.motion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            self.motion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            self.motion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            self.motion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            self.motion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                <Parameter name="Head" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                            </Box>
                                            <Box name="Sit Down" id="3" localization="8" tooltip="the robot tries to sit down from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="78" y="41">
                                                <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in sitting down." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to sit down after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="SitDownBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="7" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="371" y="101">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Sit" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Rest" id="4" localization="0" tooltip="Call a Rest process.&#x0A;Apply crouch posture if the robot is Stand then unStiff all joints" x="229" y="40">
                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.motion.rest()
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                                <Resource name="Stiffness" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="3" />
                                            <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Tai Chi Chuan" id="1" localization="8" tooltip="Tai Chi Chuan dance." x="512" y="335">
                            <bitmap>media/images/box/movement/dance.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Tai Chi Chuan" id="1" localization="8" tooltip="Tai Chi Chuan dance." x="304" y="110">
                                                <bitmap>media/images/box/movement/dance.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="5" start_frame="1" end_frame="-1" size="250">
                                                    <BehaviorLayer name="LED">
                                                        <BehaviorKeyframe name="keyframe15" index="15">
                                                            <Diagram>
                                                                <Box name="Light_ConcentratedEyes" id="1" localization="8" tooltip="Set an animated gaze which expresses concentration." x="231" y="105">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self, False)

  def onLoad(self):
    self.bIsRunning = False;
    self.leds = ALProxy("ALLeds")

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 1.0;
    self.leds.post.fadeRGB( "FaceLedsTop", 0x0000ff, rDuration );
    self.leds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    self.leds.post.fadeRGB( "FaceLedsBottom", 0x0000ff, rDuration );
    self.leds.fadeRGB( "FaceLedsExternal", 0x0000ff, rDuration );

    while( not self.bMustStop ):
      rTime=1.0
      self.leds.fadeRGB( "FaceLedsInternal", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      self.leds.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );


    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="music">
                                                        <BehaviorKeyframe name="keyframe12" index="12">
                                                            <Diagram>
                                                                <Box name="Play Sound" id="2" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg.&#x0A;&#x0A;Note: There can be some delay to play mp3 files. We advise you to use wav if&#x0A;you want a fast play of the file." x="115" y="51">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/swiftswords_ext.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                                    <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                                    <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                                                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                                        <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                                        <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                                        <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                                    </Box>
                                                                                    <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                                        <bitmap>media/images/box/folder.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                                        <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="0" />
                                                            <Key frame="25" value="4.82967e-06" />
                                                            <Key frame="35" value="4.82968e-06" />
                                                            <Key frame="45" value="4.82968e-06" />
                                                            <Key frame="55" value="-2.73208e-05" />
                                                            <Key frame="65" value="18" />
                                                            <Key frame="75" value="-17" />
                                                            <Key frame="85" value="-68" />
                                                            <Key frame="95" value="-16" />
                                                            <Key frame="105" value="12" />
                                                            <Key frame="118" value="90" />
                                                            <Key frame="131" value="12" />
                                                            <Key frame="142" value="8" />
                                                            <Key frame="152" value="0" />
                                                            <Key frame="162" value="-8" />
                                                            <Key frame="172" value="16" />
                                                            <Key frame="185" value="-12" />
                                                            <Key frame="198" value="-90" />
                                                            <Key frame="211" value="-12" />
                                                            <Key frame="222" value="-8" />
                                                            <Key frame="231" value="0" />
                                                            <Key frame="250" value="-0.178186" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="0" />
                                                            <Key frame="25" value="5.12931e-06" />
                                                            <Key frame="35" value="-2.73208e-05" />
                                                            <Key frame="45" value="5.0962e-06" />
                                                            <Key frame="55" value="6.01466e-06" />
                                                            <Key frame="65" value="19" />
                                                            <Key frame="75" value="18" />
                                                            <Key frame="85" value="5.26559e-06" />
                                                            <Key frame="95" value="-19" />
                                                            <Key frame="105" value="8" />
                                                            <Key frame="118" value="-5" />
                                                            <Key frame="131" value="8" />
                                                            <Key frame="142" value="22" />
                                                            <Key frame="152" value="32" />
                                                            <Key frame="162" value="22" />
                                                            <Key frame="172" value="-19" />
                                                            <Key frame="185" value="8" />
                                                            <Key frame="198" value="-5" />
                                                            <Key frame="211" value="8" />
                                                            <Key frame="222" value="22" />
                                                            <Key frame="231" value="0" />
                                                            <Key frame="250" value="-10.901" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="90" />
                                                            <Key frame="25" value="110" />
                                                            <Key frame="35" value="120" />
                                                            <Key frame="45" value="90" />
                                                            <Key frame="55" value="0" />
                                                            <Key frame="65" value="21" />
                                                            <Key frame="75" value="20" />
                                                            <Key frame="85" value="11" />
                                                            <Key frame="95" value="-46" />
                                                            <Key frame="105" value="-10" />
                                                            <Key frame="118" value="-17" />
                                                            <Key frame="131" value="-10" />
                                                            <Key frame="142" value="30" />
                                                            <Key frame="152" value="27" />
                                                            <Key frame="162" value="19" />
                                                            <Key frame="172" value="-27" />
                                                            <Key frame="185" value="4" />
                                                            <Key frame="198" value="-4" />
                                                            <Key frame="211" value="4" />
                                                            <Key frame="222" value="19" />
                                                            <Key frame="231" value="97" />
                                                            <Key frame="250" value="87.6256" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="10" />
                                                            <Key frame="25" value="20" />
                                                            <Key frame="35" value="10" />
                                                            <Key frame="45" value="10" />
                                                            <Key frame="55" value="10" />
                                                            <Key frame="65" value="40" />
                                                            <Key frame="75" value="0" />
                                                            <Key frame="85" value="5" />
                                                            <Key frame="95" value="10" />
                                                            <Key frame="105" value="23" />
                                                            <Key frame="118" value="66" />
                                                            <Key frame="131" value="23" />
                                                            <Key frame="142" value="23" />
                                                            <Key frame="152" value="10" />
                                                            <Key frame="162" value="0" />
                                                            <Key frame="172" value="23" />
                                                            <Key frame="185" value="0" />
                                                            <Key frame="198" value="0" />
                                                            <Key frame="211" value="0" />
                                                            <Key frame="222" value="12" />
                                                            <Key frame="231" value="54" />
                                                            <Key frame="250" value="6.15001" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="-90" />
                                                            <Key frame="25" value="-90" />
                                                            <Key frame="35" value="-90" />
                                                            <Key frame="45" value="-90" />
                                                            <Key frame="55" value="-90" />
                                                            <Key frame="65" value="-22" />
                                                            <Key frame="75" value="0" />
                                                            <Key frame="85" value="0" />
                                                            <Key frame="95" value="0" />
                                                            <Key frame="105" value="0" />
                                                            <Key frame="118" value="0" />
                                                            <Key frame="131" value="0" />
                                                            <Key frame="142" value="0" />
                                                            <Key frame="152" value="12" />
                                                            <Key frame="162" value="11" />
                                                            <Key frame="172" value="-24" />
                                                            <Key frame="185" value="-24" />
                                                            <Key frame="198" value="-5" />
                                                            <Key frame="211" value="-24" />
                                                            <Key frame="222" value="11" />
                                                            <Key frame="227" value="-21.7" />
                                                            <Key frame="231" value="-14" />
                                                            <Key frame="250" value="-67.7669" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="0" />
                                                            <Key frame="25" value="-40" />
                                                            <Key frame="35" value="-60" />
                                                            <Key frame="45" value="0" />
                                                            <Key frame="55" value="0" />
                                                            <Key frame="65" value="-95" />
                                                            <Key frame="75" value="-55" />
                                                            <Key frame="85" value="-85" />
                                                            <Key frame="95" value="-58" />
                                                            <Key frame="105" value="-58" />
                                                            <Key frame="118" value="0" />
                                                            <Key frame="131" value="-58" />
                                                            <Key frame="142" value="-58" />
                                                            <Key frame="152" value="-51" />
                                                            <Key frame="162" value="-49" />
                                                            <Key frame="172" value="-64" />
                                                            <Key frame="185" value="-49" />
                                                            <Key frame="198" value="-72" />
                                                            <Key frame="211" value="-49" />
                                                            <Key frame="222" value="-49" />
                                                            <Key frame="227" value="-57" />
                                                            <Key frame="231" value="-81.4" />
                                                            <Key frame="250" value="-22.2342" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="-88" />
                                                            <Key frame="250" value="7.99575" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="1">
                                                            <Key frame="15" value="0" />
                                                            <Key frame="250" value="0.2984" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="90" />
                                                            <Key frame="25" value="110" />
                                                            <Key frame="35" value="120" />
                                                            <Key frame="45" value="90" />
                                                            <Key frame="55" value="0" />
                                                            <Key frame="65" value="10" />
                                                            <Key frame="75" value="35" />
                                                            <Key frame="85" value="60" />
                                                            <Key frame="95" value="-27" />
                                                            <Key frame="105" value="4" />
                                                            <Key frame="118" value="-4" />
                                                            <Key frame="131" value="4" />
                                                            <Key frame="142" value="19" />
                                                            <Key frame="152" value="27" />
                                                            <Key frame="162" value="30" />
                                                            <Key frame="172" value="-46" />
                                                            <Key frame="185" value="-10" />
                                                            <Key frame="198" value="-17" />
                                                            <Key frame="211" value="-10" />
                                                            <Key frame="222" value="30" />
                                                            <Key frame="231" value="97" />
                                                            <Key frame="250" value="86.8394" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="-10" />
                                                            <Key frame="25" value="-10" />
                                                            <Key frame="35" value="-20" />
                                                            <Key frame="45" value="-10" />
                                                            <Key frame="55" value="-9.99896" />
                                                            <Key frame="65" value="-4" />
                                                            <Key frame="75" value="-48" />
                                                            <Key frame="85" value="-87" />
                                                            <Key frame="95" value="-23" />
                                                            <Key frame="105" value="0" />
                                                            <Key frame="118" value="0" />
                                                            <Key frame="131" value="0" />
                                                            <Key frame="142" value="0" />
                                                            <Key frame="152" value="-10" />
                                                            <Key frame="162" value="-23" />
                                                            <Key frame="172" value="-10" />
                                                            <Key frame="185" value="-23" />
                                                            <Key frame="198" value="-66" />
                                                            <Key frame="211" value="-23" />
                                                            <Key frame="222" value="-32" />
                                                            <Key frame="231" value="-54" />
                                                            <Key frame="250" value="-5.71537" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="90" />
                                                            <Key frame="25" value="90" />
                                                            <Key frame="35" value="90" />
                                                            <Key frame="45" value="90" />
                                                            <Key frame="55" value="90" />
                                                            <Key frame="65" value="11" />
                                                            <Key frame="75" value="20" />
                                                            <Key frame="85" value="90" />
                                                            <Key frame="95" value="24" />
                                                            <Key frame="105" value="24" />
                                                            <Key frame="118" value="5" />
                                                            <Key frame="131" value="24" />
                                                            <Key frame="142" value="-11" />
                                                            <Key frame="152" value="-12" />
                                                            <Key frame="162" value="0" />
                                                            <Key frame="172" value="0" />
                                                            <Key frame="185" value="0" />
                                                            <Key frame="198" value="0" />
                                                            <Key frame="211" value="0" />
                                                            <Key frame="222" value="0" />
                                                            <Key frame="227" value="19.6" />
                                                            <Key frame="231" value="14" />
                                                            <Key frame="250" value="66.4437" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="0" />
                                                            <Key frame="25" value="40" />
                                                            <Key frame="35" value="60" />
                                                            <Key frame="45" value="1.47493e-05" />
                                                            <Key frame="55" value="0" />
                                                            <Key frame="65" value="71" />
                                                            <Key frame="75" value="94" />
                                                            <Key frame="85" value="4" />
                                                            <Key frame="95" value="64" />
                                                            <Key frame="105" value="49" />
                                                            <Key frame="118" value="72" />
                                                            <Key frame="131" value="49" />
                                                            <Key frame="142" value="49" />
                                                            <Key frame="152" value="51" />
                                                            <Key frame="162" value="58" />
                                                            <Key frame="172" value="58" />
                                                            <Key frame="185" value="58" />
                                                            <Key frame="198" value="2" />
                                                            <Key frame="211" value="58" />
                                                            <Key frame="222" value="58" />
                                                            <Key frame="227" value="64.9" />
                                                            <Key frame="231" value="78.3" />
                                                            <Key frame="250" value="22.6785" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="88" />
                                                            <Key frame="250" value="9.40201" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                                                            <Key frame="15" value="0" />
                                                            <Key frame="250" value="0.302" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="5.75265e-06" />
                                                            <Key frame="25" value="0" />
                                                            <Key frame="35" value="-17.4" />
                                                            <Key frame="45" value="0" />
                                                            <Key frame="55" value="0" />
                                                            <Key frame="65" value="-37.1" />
                                                            <Key frame="75" value="-35" />
                                                            <Key frame="85" value="-60" />
                                                            <Key frame="95" value="-60" />
                                                            <Key frame="105" value="-60" />
                                                            <Key frame="118" value="-60" />
                                                            <Key frame="131" value="-60" />
                                                            <Key frame="142" value="-60" />
                                                            <Key frame="152" value="-50" />
                                                            <Key frame="162" value="-42.5" />
                                                            <Key frame="172" value="0" />
                                                            <Key frame="185" value="5.75265e-06" />
                                                            <Key frame="198" value="30" />
                                                            <Key frame="211" value="5.75265e-06" />
                                                            <Key frame="217" value="-31.8" />
                                                            <Key frame="222" value="-37.5" />
                                                            <Key frame="231" value="-60" />
                                                            <Key frame="250" value="1.93121" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="3" />
                                                            <Key frame="25" value="7" />
                                                            <Key frame="35" value="10" />
                                                            <Key frame="45" value="-6" />
                                                            <Key frame="55" value="-6" />
                                                            <Key frame="65" value="10" />
                                                            <Key frame="75" value="-15" />
                                                            <Key frame="85" value="3.6" />
                                                            <Key frame="95" value="7.5" />
                                                            <Key frame="105" value="0" />
                                                            <Key frame="118" value="0" />
                                                            <Key frame="131" value="0" />
                                                            <Key frame="142" value="5" />
                                                            <Key frame="152" value="0" />
                                                            <Key frame="162" value="-13.8" />
                                                            <Key frame="167" value="-31.9" />
                                                            <Key frame="172" value="-24.3" />
                                                            <Key frame="185" value="-20" />
                                                            <Key frame="198" value="0" />
                                                            <Key frame="211" value="-20" />
                                                            <Key frame="222" value="-17.9" />
                                                            <Key frame="231" value="0" />
                                                            <Key frame="250" value="-2.89802" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="0" />
                                                            <Key frame="25" value="0" />
                                                            <Key frame="35" value="-20" />
                                                            <Key frame="45" value="0" />
                                                            <Key frame="55" value="0" />
                                                            <Key frame="65" value="-40" />
                                                            <Key frame="75" value="-35" />
                                                            <Key frame="85" value="-60" />
                                                            <Key frame="95" value="-60" />
                                                            <Key frame="105" value="-60" />
                                                            <Key frame="118" value="-60" />
                                                            <Key frame="131" value="-60" />
                                                            <Key frame="142" value="-60" />
                                                            <Key frame="152" value="-50" />
                                                            <Key frame="162" value="-42.5" />
                                                            <Key frame="172" value="-7" />
                                                            <Key frame="185" value="-50" />
                                                            <Key frame="198" value="0" />
                                                            <Key frame="211" value="-50" />
                                                            <Key frame="222" value="-37.5" />
                                                            <Key frame="231" value="-60" />
                                                            <Key frame="250" value="12.3951" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="-3" />
                                                            <Key frame="25" value="-7" />
                                                            <Key frame="35" value="-10" />
                                                            <Key frame="45" value="6" />
                                                            <Key frame="55" value="6" />
                                                            <Key frame="65" value="-10" />
                                                            <Key frame="75" value="10" />
                                                            <Key frame="85" value="24.1" />
                                                            <Key frame="95" value="30.3" />
                                                            <Key frame="105" value="35" />
                                                            <Key frame="118" value="35" />
                                                            <Key frame="131" value="35" />
                                                            <Key frame="142" value="20" />
                                                            <Key frame="152" value="0" />
                                                            <Key frame="162" value="-15" />
                                                            <Key frame="167" value="14.4" />
                                                            <Key frame="172" value="15" />
                                                            <Key frame="185" value="8" />
                                                            <Key frame="198" value="40" />
                                                            <Key frame="211" value="8" />
                                                            <Key frame="222" value="-15" />
                                                            <Key frame="231" value="0" />
                                                            <Key frame="250" value="2.37549" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="-6.2" />
                                                            <Key frame="25" value="-6.9" />
                                                            <Key frame="35" value="-7.5" />
                                                            <Key frame="45" value="-6.9" />
                                                            <Key frame="55" value="-8.2" />
                                                            <Key frame="65" value="-9.6" />
                                                            <Key frame="75" value="-5.7" />
                                                            <Key frame="85" value="0" />
                                                            <Key frame="95" value="0" />
                                                            <Key frame="105" value="0" />
                                                            <Key frame="118" value="0" />
                                                            <Key frame="131" value="0" />
                                                            <Key frame="142" value="0" />
                                                            <Key frame="152" value="0" />
                                                            <Key frame="162" value="0" />
                                                            <Key frame="172" value="0" />
                                                            <Key frame="185" value="0" />
                                                            <Key frame="198" value="0" />
                                                            <Key frame="211" value="0" />
                                                            <Key frame="222" value="-3.9" />
                                                            <Key frame="231" value="0" />
                                                            <Key frame="250" value="-11.1598" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="0" />
                                                            <Key frame="25" value="0" />
                                                            <Key frame="35" value="40" />
                                                            <Key frame="45" value="-5.69182e-06" />
                                                            <Key frame="55" value="-5.69182e-06" />
                                                            <Key frame="65" value="80" />
                                                            <Key frame="75" value="70" />
                                                            <Key frame="85" value="120" />
                                                            <Key frame="95" value="120" />
                                                            <Key frame="105" value="120" />
                                                            <Key frame="118" value="120" />
                                                            <Key frame="131" value="120" />
                                                            <Key frame="142" value="120.9" />
                                                            <Key frame="152" value="100" />
                                                            <Key frame="162" value="85" />
                                                            <Key frame="172" value="7" />
                                                            <Key frame="185" value="100" />
                                                            <Key frame="198" value="0" />
                                                            <Key frame="211" value="100" />
                                                            <Key frame="222" value="75" />
                                                            <Key frame="231" value="120" />
                                                            <Key frame="250" value="-5.10013" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="5.75266e-06" />
                                                            <Key frame="25" value="0" />
                                                            <Key frame="35" value="0" />
                                                            <Key frame="45" value="0" />
                                                            <Key frame="55" value="0" />
                                                            <Key frame="65" value="-40" />
                                                            <Key frame="75" value="-10" />
                                                            <Key frame="85" value="0" />
                                                            <Key frame="95" value="0" />
                                                            <Key frame="105" value="5.75266e-06" />
                                                            <Key frame="118" value="30" />
                                                            <Key frame="131" value="5.75266e-06" />
                                                            <Key frame="142" value="-42.5" />
                                                            <Key frame="152" value="-50" />
                                                            <Key frame="162" value="-60" />
                                                            <Key frame="172" value="-60" />
                                                            <Key frame="185" value="-60" />
                                                            <Key frame="198" value="-60" />
                                                            <Key frame="211" value="-60" />
                                                            <Key frame="222" value="-60" />
                                                            <Key frame="231" value="-60" />
                                                            <Key frame="250" value="2.11181" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="-3" />
                                                            <Key frame="25" value="7.5" />
                                                            <Key frame="35" value="25.1" />
                                                            <Key frame="45" value="6" />
                                                            <Key frame="55" value="6" />
                                                            <Key frame="65" value="16.9" />
                                                            <Key frame="75" value="35.6" />
                                                            <Key frame="85" value="45" />
                                                            <Key frame="95" value="42.6" />
                                                            <Key frame="105" value="25" />
                                                            <Key frame="118" value="0" />
                                                            <Key frame="131" value="20" />
                                                            <Key frame="142" value="15" />
                                                            <Key frame="152" value="0" />
                                                            <Key frame="162" value="-10" />
                                                            <Key frame="172" value="-10" />
                                                            <Key frame="185" value="-2.43316" />
                                                            <Key frame="198" value="-1.29234" />
                                                            <Key frame="211" value="-0.747952" />
                                                            <Key frame="222" value="-0.118362" />
                                                            <Key frame="231" value="0" />
                                                            <Key frame="250" value="1.67234" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="0" />
                                                            <Key frame="25" value="0" />
                                                            <Key frame="35" value="0" />
                                                            <Key frame="45" value="0" />
                                                            <Key frame="55" value="0" />
                                                            <Key frame="65" value="-40" />
                                                            <Key frame="75" value="-10" />
                                                            <Key frame="85" value="-6" />
                                                            <Key frame="95" value="-7" />
                                                            <Key frame="105" value="-50" />
                                                            <Key frame="118" value="0" />
                                                            <Key frame="131" value="-50" />
                                                            <Key frame="142" value="-42.5" />
                                                            <Key frame="152" value="-50" />
                                                            <Key frame="162" value="-60" />
                                                            <Key frame="172" value="-60" />
                                                            <Key frame="185" value="-60" />
                                                            <Key frame="198" value="-60" />
                                                            <Key frame="211" value="-60" />
                                                            <Key frame="222" value="-60" />
                                                            <Key frame="231" value="-60" />
                                                            <Key frame="250" value="12.3024" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="3" />
                                                            <Key frame="25" value="-7" />
                                                            <Key frame="35" value="-25.1" />
                                                            <Key frame="45" value="-6" />
                                                            <Key frame="55" value="-6" />
                                                            <Key frame="65" value="-20" />
                                                            <Key frame="75" value="-45" />
                                                            <Key frame="85" value="-31" />
                                                            <Key frame="95" value="-8" />
                                                            <Key frame="105" value="-8" />
                                                            <Key frame="118" value="-40" />
                                                            <Key frame="131" value="-8" />
                                                            <Key frame="142" value="15" />
                                                            <Key frame="152" value="0" />
                                                            <Key frame="162" value="-20" />
                                                            <Key frame="172" value="-30.9" />
                                                            <Key frame="185" value="-35" />
                                                            <Key frame="198" value="-35" />
                                                            <Key frame="211" value="-35" />
                                                            <Key frame="222" value="-30.5" />
                                                            <Key frame="231" value="0" />
                                                            <Key frame="250" value="-1.22808" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="-6.2" />
                                                            <Key frame="25" value="-6.9" />
                                                            <Key frame="35" value="-7.5" />
                                                            <Key frame="45" value="-6.9" />
                                                            <Key frame="55" value="-8.2" />
                                                            <Key frame="65" value="-9.6" />
                                                            <Key frame="250" value="-11.1598" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="0">
                                                            <Key frame="15" value="0" />
                                                            <Key frame="25" value="0" />
                                                            <Key frame="35" value="0" />
                                                            <Key frame="45" value="0" />
                                                            <Key frame="55" value="0" />
                                                            <Key frame="65" value="80" />
                                                            <Key frame="75" value="20" />
                                                            <Key frame="85" value="7" />
                                                            <Key frame="95" value="7" />
                                                            <Key frame="105" value="100" />
                                                            <Key frame="118" value="0" />
                                                            <Key frame="131" value="100" />
                                                            <Key frame="142" value="85" />
                                                            <Key frame="152" value="100" />
                                                            <Key frame="162" value="120" />
                                                            <Key frame="172" value="120" />
                                                            <Key frame="185" value="120" />
                                                            <Key frame="198" value="120" />
                                                            <Key frame="211" value="120" />
                                                            <Key frame="222" value="120" />
                                                            <Key frame="231" value="120" />
                                                            <Key frame="250" value="-5.2711" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Stand Up" id="2" localization="8" tooltip="The robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="136" y="61">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="All motors" type="Lock" timeout="0" />
                            <Resource name="Left eye leds" type="Lock" timeout="0" />
                            <Resource name="Right eye leds" type="Lock" timeout="0" />
                            <Resource name="Audio player" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Macarena" id="2" localization="8" tooltip="" x="523" y="462">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="BlinkWink" id="1" localization="8" tooltip="Eyes keep blinking until box is stopped." x="283" y="262">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bIsRunning = False
        self.bMustStop = False

    def onLoad(self):
        pass

    def onUnload(self):
        self.onInput_onStop()

    def blink(self):
        on = 0xffffff
        off = 0x222222
        rDuration = self.getParameter("speed")
        ALLeds.post.fadeRGB( "FaceLed0", off, rDuration )
        ALLeds.post.fadeRGB( "FaceLed1", off, rDuration )
        ALLeds.post.fadeRGB( "FaceLed2", on, rDuration )
        ALLeds.post.fadeRGB( "FaceLed3", off, rDuration )
        ALLeds.post.fadeRGB( "FaceLed4", off, rDuration )
        ALLeds.post.fadeRGB( "FaceLed5", off, rDuration )
        ALLeds.post.fadeRGB( "FaceLed6", on, rDuration )
        ALLeds.fadeRGB( "FaceLed7", off, rDuration )
        time.sleep( 0.1 )
        ALLeds.fadeRGB( "FaceLeds", on, rDuration )

    def onInput_onStart(self):
        if self.bIsRunning:
            return

        self.bIsRunning = True
        self.bMustStop = False

        threshold = self.getParameter("threshold")

        while not self.bMustStop:
            n = random.uniform(0.0, 100.0)
            if n>threshold:
                self.blink()
            time.sleep(0.1)

        self.bIsRunning = False
        self.bMustStop = False
        self.onStopped()

    def onInput_onStop(self):
        self.bMustStop = True]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="speed" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="1" tooltip="" id="5" />
                                                <Parameter name="threshold" inherits_from_parent="0" content_type="2" value="90" default_value="70" min="0" max="100" tooltip="" id="6" />
                                            </Box>
                                            <Box name="Play Sound" id="4" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="537" y="829">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/Macarena - Various Artists.mp3" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="82" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                    <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                </Box>
                                                                <Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                    <bitmap>media/images/box/folder.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("File path"))]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                    <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="pre-dance" id="8" localization="8" tooltip="sdf" x="532" y="378">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="5" start_frame="1" end_frame="-1" size="45">
                                                    <ActuatorList model="Nao">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="3.24959" />
                                                            <Key frame="10" value="14.8513" />
                                                            <Key frame="15" value="-33.577" />
                                                            <Key frame="20" value="-7.64898" />
                                                            <Key frame="25" value="-8.79158" />
                                                            <Key frame="30" value="-9.14314" />
                                                            <Key frame="35" value="2.98591" />
                                                            <Key frame="40" value="5.71056" />
                                                            <Key frame="45" value="5.71056" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-1.145" />
                                                            <Key frame="10" value="-1.23289" />
                                                            <Key frame="15" value="-1.32078" />
                                                            <Key frame="20" value="19.158" />
                                                            <Key frame="25" value="-12.0436" />
                                                            <Key frame="30" value="11.2477" />
                                                            <Key frame="35" value="8.78677" />
                                                            <Key frame="40" value="5.53477" />
                                                            <Key frame="45" value="5.53477" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="90.614" />
                                                            <Key frame="10" value="92.3718" />
                                                            <Key frame="15" value="92.5476" />
                                                            <Key frame="20" value="92.5476" />
                                                            <Key frame="25" value="95.0086" />
                                                            <Key frame="30" value="95.1843" />
                                                            <Key frame="35" value="96.7664" />
                                                            <Key frame="40" value="96.8543" />
                                                            <Key frame="45" value="96.8543" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="13.0056" />
                                                            <Key frame="10" value="13.6208" />
                                                            <Key frame="15" value="13.6208" />
                                                            <Key frame="20" value="13.6208" />
                                                            <Key frame="25" value="13.6208" />
                                                            <Key frame="30" value="13.6208" />
                                                            <Key frame="35" value="13.7966" />
                                                            <Key frame="40" value="13.7966" />
                                                            <Key frame="45" value="13.7966" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-58.0988" />
                                                            <Key frame="10" value="-58.0988" />
                                                            <Key frame="15" value="-58.0988" />
                                                            <Key frame="20" value="-58.1867" />
                                                            <Key frame="25" value="-58.802" />
                                                            <Key frame="30" value="-58.5383" />
                                                            <Key frame="35" value="-59.2414" />
                                                            <Key frame="40" value="-59.1535" />
                                                            <Key frame="45" value="-59.1535" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-38.1426" />
                                                            <Key frame="10" value="-37.791" />
                                                            <Key frame="15" value="-37.791" />
                                                            <Key frame="20" value="-37.8789" />
                                                            <Key frame="25" value="-37.791" />
                                                            <Key frame="30" value="-37.791" />
                                                            <Key frame="35" value="-37.791" />
                                                            <Key frame="40" value="-37.791" />
                                                            <Key frame="45" value="-37.791" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-44.0362" />
                                                            <Key frame="10" value="-44.0362" />
                                                            <Key frame="15" value="-44.0362" />
                                                            <Key frame="20" value="-44.0362" />
                                                            <Key frame="25" value="-44.0362" />
                                                            <Key frame="30" value="-44.0362" />
                                                            <Key frame="35" value="-44.0362" />
                                                            <Key frame="40" value="-44.0362" />
                                                            <Key frame="45" value="-44.0362" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="14.8969" />
                                                            <Key frame="10" value="14.8969" />
                                                            <Key frame="15" value="14.8969" />
                                                            <Key frame="20" value="14.8969" />
                                                            <Key frame="25" value="14.8969" />
                                                            <Key frame="30" value="14.8969" />
                                                            <Key frame="35" value="14.8969" />
                                                            <Key frame="40" value="14.8969" />
                                                            <Key frame="45" value="14.8969" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="83.4995" />
                                                            <Key frame="10" value="83.4995" />
                                                            <Key frame="15" value="83.4995" />
                                                            <Key frame="20" value="81.7417" />
                                                            <Key frame="25" value="87.8941" />
                                                            <Key frame="30" value="87.8062" />
                                                            <Key frame="35" value="87.8062" />
                                                            <Key frame="40" value="87.8062" />
                                                            <Key frame="45" value="87.8062" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-8.61579" />
                                                            <Key frame="10" value="-8.70368" />
                                                            <Key frame="15" value="-8.61579" />
                                                            <Key frame="20" value="-8.61579" />
                                                            <Key frame="25" value="-8.61579" />
                                                            <Key frame="30" value="-8.61579" />
                                                            <Key frame="35" value="-8.61579" />
                                                            <Key frame="40" value="-8.61579" />
                                                            <Key frame="45" value="-8.61579" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="52.3811" />
                                                            <Key frame="10" value="52.1174" />
                                                            <Key frame="15" value="51.7658" />
                                                            <Key frame="20" value="52.3811" />
                                                            <Key frame="25" value="52.1174" />
                                                            <Key frame="30" value="52.1174" />
                                                            <Key frame="35" value="52.2932" />
                                                            <Key frame="40" value="52.2932" />
                                                            <Key frame="45" value="52.2932" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="21.0964" />
                                                            <Key frame="10" value="21.1843" />
                                                            <Key frame="15" value="21.0964" />
                                                            <Key frame="20" value="21.1843" />
                                                            <Key frame="25" value="21.0964" />
                                                            <Key frame="30" value="21.0964" />
                                                            <Key frame="35" value="21.0964" />
                                                            <Key frame="40" value="21.0964" />
                                                            <Key frame="45" value="21.1843" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="61.2581" />
                                                            <Key frame="10" value="61.0823" />
                                                            <Key frame="15" value="61.0823" />
                                                            <Key frame="20" value="60.6429" />
                                                            <Key frame="25" value="60.7308" />
                                                            <Key frame="30" value="60.7308" />
                                                            <Key frame="35" value="60.7308" />
                                                            <Key frame="40" value="60.7308" />
                                                            <Key frame="45" value="60.7308" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="12.4217" />
                                                            <Key frame="10" value="12.4217" />
                                                            <Key frame="15" value="12.4217" />
                                                            <Key frame="20" value="12.4217" />
                                                            <Key frame="25" value="12.4217" />
                                                            <Key frame="30" value="12.4217" />
                                                            <Key frame="35" value="12.4217" />
                                                            <Key frame="40" value="12.4217" />
                                                            <Key frame="45" value="12.4217" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-13.8845" />
                                                            <Key frame="10" value="-14.0603" />
                                                            <Key frame="15" value="-13.445" />
                                                            <Key frame="20" value="-19.5096" />
                                                            <Key frame="25" value="-11.2477" />
                                                            <Key frame="30" value="-20.8279" />
                                                            <Key frame="35" value="-20.8279" />
                                                            <Key frame="40" value="-20.9158" />
                                                            <Key frame="45" value="-21.0037" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="8.17633" />
                                                            <Key frame="10" value="-11.7751" />
                                                            <Key frame="15" value="18.0202" />
                                                            <Key frame="20" value="-6.58948" />
                                                            <Key frame="25" value="-2.63435" />
                                                            <Key frame="30" value="16.8776" />
                                                            <Key frame="35" value="-2.54646" />
                                                            <Key frame="40" value="-2.54646" />
                                                            <Key frame="45" value="7.38531" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="11.9557" />
                                                            <Key frame="10" value="15.6471" />
                                                            <Key frame="15" value="9.05525" />
                                                            <Key frame="20" value="0.353971" />
                                                            <Key frame="25" value="27.73" />
                                                            <Key frame="30" value="26.8973" />
                                                            <Key frame="35" value="27.73" />
                                                            <Key frame="40" value="27.73" />
                                                            <Key frame="45" value="27.73" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-5.29" />
                                                            <Key frame="10" value="-5.29" />
                                                            <Key frame="15" value="-5.29" />
                                                            <Key frame="20" value="-5.29" />
                                                            <Key frame="25" value="-5.29" />
                                                            <Key frame="30" value="-5.29" />
                                                            <Key frame="35" value="-5.29" />
                                                            <Key frame="40" value="-5.29" />
                                                            <Key frame="45" value="-5.29" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="5.18321" />
                                                            <Key frame="10" value="1.22808" />
                                                            <Key frame="15" value="7.99574" />
                                                            <Key frame="20" value="11.6872" />
                                                            <Key frame="25" value="-1.49656" />
                                                            <Key frame="30" value="2.81013" />
                                                            <Key frame="35" value="0.349163" />
                                                            <Key frame="40" value="-0.266079" />
                                                            <Key frame="45" value="2.107" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-7.11683" />
                                                            <Key frame="10" value="6.94585" />
                                                            <Key frame="15" value="-13.445" />
                                                            <Key frame="20" value="3.16651" />
                                                            <Key frame="25" value="2.37548" />
                                                            <Key frame="30" value="-10.5446" />
                                                            <Key frame="35" value="3.2544" />
                                                            <Key frame="40" value="3.2544" />
                                                            <Key frame="45" value="-4.04062" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-2.72224" />
                                                            <Key frame="10" value="-22.4979" />
                                                            <Key frame="15" value="7.4732" />
                                                            <Key frame="20" value="-6.67737" />
                                                            <Key frame="25" value="-20.0369" />
                                                            <Key frame="30" value="1.32078" />
                                                            <Key frame="35" value="-16.2576" />
                                                            <Key frame="40" value="-16.2576" />
                                                            <Key frame="45" value="-6.3258" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="12.3903" />
                                                            <Key frame="10" value="11.5993" />
                                                            <Key frame="15" value="13.0935" />
                                                            <Key frame="20" value="-5.01223" />
                                                            <Key frame="25" value="27.73" />
                                                            <Key frame="30" value="24.0799" />
                                                            <Key frame="35" value="21.7069" />
                                                            <Key frame="40" value="21.4432" />
                                                            <Key frame="45" value="22.1463" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-5.00742" />
                                                            <Key frame="10" value="-5.09532" />
                                                            <Key frame="15" value="-5.09532" />
                                                            <Key frame="20" value="-5.09532" />
                                                            <Key frame="25" value="-5.09532" />
                                                            <Key frame="30" value="-5.09532" />
                                                            <Key frame="35" value="-5.09532" />
                                                            <Key frame="40" value="-5.09532" />
                                                            <Key frame="45" value="-5.09532" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="3.86964" />
                                                            <Key frame="10" value="3.78175" />
                                                            <Key frame="15" value="3.86964" />
                                                            <Key frame="20" value="14.944" />
                                                            <Key frame="25" value="-0.173379" />
                                                            <Key frame="30" value="2.37548" />
                                                            <Key frame="35" value="5.45169" />
                                                            <Key frame="40" value="5.10012" />
                                                            <Key frame="45" value="4.57277" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="3.16651" />
                                                            <Key frame="10" value="17.4929" />
                                                            <Key frame="15" value="-3.95272" />
                                                            <Key frame="20" value="6.59428" />
                                                            <Key frame="25" value="12.6588" />
                                                            <Key frame="30" value="-0.876513" />
                                                            <Key frame="35" value="10.9889" />
                                                            <Key frame="40" value="10.9889" />
                                                            <Key frame="45" value="3.95753" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="hand clapping" id="9" localization="8" tooltip="" x="727" y="382">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="8" start_frame="1" end_frame="-1" size="60">
                                                    <ActuatorList model="Nao">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="5.2711" />
                                                            <Key frame="10" value="5.35899" />
                                                            <Key frame="15" value="6.06212" />
                                                            <Key frame="20" value="4.65586" />
                                                            <Key frame="25" value="31.0234" />
                                                            <Key frame="30" value="-10.7252" />
                                                            <Key frame="35" value="-42.2783" />
                                                            <Key frame="40" value="-3.95753" />
                                                            <Key frame="45" value="-4.57277" />
                                                            <Key frame="50" value="-4.3091" />
                                                            <Key frame="55" value="-4.3091" />
                                                            <Key frame="60" value="3.60116" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="6.94104" />
                                                            <Key frame="10" value="6.94104" />
                                                            <Key frame="15" value="-13.1862" />
                                                            <Key frame="20" value="5.71056" />
                                                            <Key frame="25" value="-4.92434" />
                                                            <Key frame="30" value="7.99574" />
                                                            <Key frame="35" value="7.90785" />
                                                            <Key frame="40" value="7.81996" />
                                                            <Key frame="45" value="-10.6373" />
                                                            <Key frame="50" value="6.76526" />
                                                            <Key frame="55" value="6.76526" />
                                                            <Key frame="60" value="1.93121" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="96.5027" />
                                                            <Key frame="10" value="26.6288" />
                                                            <Key frame="15" value="26.8046" />
                                                            <Key frame="20" value="29.6171" />
                                                            <Key frame="25" value="23.992" />
                                                            <Key frame="30" value="22.5858" />
                                                            <Key frame="35" value="21.2674" />
                                                            <Key frame="40" value="27.0682" />
                                                            <Key frame="45" value="25.5741" />
                                                            <Key frame="50" value="24.871" />
                                                            <Key frame="55" value="43.9435" />
                                                            <Key frame="60" value="84.11" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="12.3903" />
                                                            <Key frame="10" value="54.1389" />
                                                            <Key frame="15" value="53.6994" />
                                                            <Key frame="20" value="3.33748" />
                                                            <Key frame="25" value="53.3479" />
                                                            <Key frame="30" value="-7.12163" />
                                                            <Key frame="35" value="53.0842" />
                                                            <Key frame="40" value="-7.73688" />
                                                            <Key frame="45" value="52.5569" />
                                                            <Key frame="50" value="-8.5279" />
                                                            <Key frame="55" value="36.209" />
                                                            <Key frame="60" value="15.5544" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-58.7141" />
                                                            <Key frame="10" value="-34.7196" />
                                                            <Key frame="15" value="-34.8075" />
                                                            <Key frame="20" value="-24.7879" />
                                                            <Key frame="25" value="-26.9852" />
                                                            <Key frame="30" value="-27.0731" />
                                                            <Key frame="35" value="-29.0067" />
                                                            <Key frame="40" value="-27.5125" />
                                                            <Key frame="45" value="-28.4793" />
                                                            <Key frame="50" value="-25.8426" />
                                                            <Key frame="55" value="-24.7" />
                                                            <Key frame="60" value="-11.9557" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-37.791" />
                                                            <Key frame="10" value="-41.1309" />
                                                            <Key frame="15" value="-41.4825" />
                                                            <Key frame="20" value="-57.5667" />
                                                            <Key frame="25" value="-25.1346" />
                                                            <Key frame="30" value="-48.338" />
                                                            <Key frame="35" value="-24.1678" />
                                                            <Key frame="40" value="-49.3049" />
                                                            <Key frame="45" value="-28.4745" />
                                                            <Key frame="50" value="-44.1192" />
                                                            <Key frame="55" value="-32.0781" />
                                                            <Key frame="60" value="-18.8943" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-44.0362" />
                                                            <Key frame="10" value="-44.0362" />
                                                            <Key frame="15" value="-44.0362" />
                                                            <Key frame="20" value="-44.1241" />
                                                            <Key frame="25" value="-44.0362" />
                                                            <Key frame="30" value="-44.0362" />
                                                            <Key frame="35" value="-44.0362" />
                                                            <Key frame="40" value="-44.1241" />
                                                            <Key frame="45" value="-44.0362" />
                                                            <Key frame="50" value="-44.1241" />
                                                            <Key frame="55" value="-43.7725" />
                                                            <Key frame="60" value="-43.7725" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="57.2958" />
                                                            <Key frame="10" value="57.2958" />
                                                            <Key frame="15" value="57.2958" />
                                                            <Key frame="20" value="57.2958" />
                                                            <Key frame="25" value="57.2958" />
                                                            <Key frame="30" value="57.2958" />
                                                            <Key frame="35" value="57.2958" />
                                                            <Key frame="40" value="57.2958" />
                                                            <Key frame="45" value="57.2958" />
                                                            <Key frame="50" value="57.2958" />
                                                            <Key frame="55" value="57.2958" />
                                                            <Key frame="60" value="57.2958" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="87.8062" />
                                                            <Key frame="10" value="24.9637" />
                                                            <Key frame="15" value="24.9637" />
                                                            <Key frame="20" value="28.1278" />
                                                            <Key frame="25" value="24.4363" />
                                                            <Key frame="30" value="23.2058" />
                                                            <Key frame="35" value="23.03" />
                                                            <Key frame="40" value="29.8856" />
                                                            <Key frame="45" value="29.2703" />
                                                            <Key frame="50" value="30.6766" />
                                                            <Key frame="55" value="51.8585" />
                                                            <Key frame="60" value="84.5542" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-8.5279" />
                                                            <Key frame="10" value="-55.8137" />
                                                            <Key frame="15" value="-54.1437" />
                                                            <Key frame="20" value="-14.3288" />
                                                            <Key frame="25" value="-60.8235" />
                                                            <Key frame="30" value="-14.7682" />
                                                            <Key frame="35" value="-62.4934" />
                                                            <Key frame="40" value="-19.2507" />
                                                            <Key frame="45" value="-65.3938" />
                                                            <Key frame="50" value="-22.3269" />
                                                            <Key frame="55" value="-48.0792" />
                                                            <Key frame="60" value="-12.8346" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="52.3811" />
                                                            <Key frame="10" value="37.6153" />
                                                            <Key frame="15" value="37.6153" />
                                                            <Key frame="20" value="30.7597" />
                                                            <Key frame="25" value="34.539" />
                                                            <Key frame="30" value="34.1875" />
                                                            <Key frame="35" value="36.5606" />
                                                            <Key frame="40" value="30.8476" />
                                                            <Key frame="45" value="38.1426" />
                                                            <Key frame="50" value="26.8925" />
                                                            <Key frame="55" value="26.3651" />
                                                            <Key frame="60" value="13.9724" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="21.0964" />
                                                            <Key frame="10" value="45.5303" />
                                                            <Key frame="15" value="47.7276" />
                                                            <Key frame="20" value="66.7122" />
                                                            <Key frame="25" value="45.794" />
                                                            <Key frame="30" value="63.7239" />
                                                            <Key frame="35" value="50.9796" />
                                                            <Key frame="40" value="73.0404" />
                                                            <Key frame="45" value="70.3158" />
                                                            <Key frame="50" value="72.5131" />
                                                            <Key frame="55" value="66.9759" />
                                                            <Key frame="60" value="8.35212" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="60.8187" />
                                                            <Key frame="10" value="52.7326" />
                                                            <Key frame="15" value="52.8205" />
                                                            <Key frame="20" value="53.6115" />
                                                            <Key frame="25" value="53.6994" />
                                                            <Key frame="30" value="58.7972" />
                                                            <Key frame="35" value="59.0608" />
                                                            <Key frame="40" value="63.4554" />
                                                            <Key frame="45" value="62.7523" />
                                                            <Key frame="50" value="66.8832" />
                                                            <Key frame="55" value="66.7953" />
                                                            <Key frame="60" value="62.6644" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="57.2958" />
                                                            <Key frame="10" value="57.2958" />
                                                            <Key frame="15" value="57.2958" />
                                                            <Key frame="20" value="57.2958" />
                                                            <Key frame="25" value="57.2958" />
                                                            <Key frame="30" value="57.2958" />
                                                            <Key frame="35" value="57.2958" />
                                                            <Key frame="40" value="57.2958" />
                                                            <Key frame="45" value="57.2958" />
                                                            <Key frame="50" value="57.2958" />
                                                            <Key frame="55" value="57.2958" />
                                                            <Key frame="60" value="57.2958" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-21.2674" />
                                                            <Key frame="10" value="-19.6853" />
                                                            <Key frame="15" value="-19.7732" />
                                                            <Key frame="20" value="-19.949" />
                                                            <Key frame="25" value="-19.949" />
                                                            <Key frame="30" value="-20.0369" />
                                                            <Key frame="35" value="-19.4217" />
                                                            <Key frame="40" value="-19.2459" />
                                                            <Key frame="45" value="-18.4549" />
                                                            <Key frame="50" value="-18.1912" />
                                                            <Key frame="55" value="-18.8064" />
                                                            <Key frame="60" value="-19.0701" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="6.85796" />
                                                            <Key frame="10" value="6.94585" />
                                                            <Key frame="15" value="6.85796" />
                                                            <Key frame="20" value="6.85796" />
                                                            <Key frame="25" value="6.94585" />
                                                            <Key frame="30" value="6.85796" />
                                                            <Key frame="35" value="6.94585" />
                                                            <Key frame="40" value="6.94585" />
                                                            <Key frame="45" value="6.94585" />
                                                            <Key frame="50" value="6.85796" />
                                                            <Key frame="55" value="6.94585" />
                                                            <Key frame="60" value="6.85796" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="25.9305" />
                                                            <Key frame="10" value="26.3699" />
                                                            <Key frame="15" value="26.3699" />
                                                            <Key frame="20" value="26.282" />
                                                            <Key frame="25" value="26.3699" />
                                                            <Key frame="30" value="26.1062" />
                                                            <Key frame="35" value="26.6336" />
                                                            <Key frame="40" value="26.5457" />
                                                            <Key frame="45" value="27.3367" />
                                                            <Key frame="50" value="26.8094" />
                                                            <Key frame="55" value="26.5457" />
                                                            <Key frame="60" value="26.5457" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-5.29" />
                                                            <Key frame="10" value="-5.29" />
                                                            <Key frame="15" value="-5.29" />
                                                            <Key frame="20" value="-5.29" />
                                                            <Key frame="25" value="-5.29" />
                                                            <Key frame="30" value="-5.29" />
                                                            <Key frame="35" value="-5.29" />
                                                            <Key frame="40" value="-5.29" />
                                                            <Key frame="45" value="-5.29" />
                                                            <Key frame="50" value="-5.29" />
                                                            <Key frame="55" value="-5.29" />
                                                            <Key frame="60" value="-5.29" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="1.66754" />
                                                            <Key frame="10" value="0.612838" />
                                                            <Key frame="15" value="-0.00240423" />
                                                            <Key frame="20" value="-0.353971" />
                                                            <Key frame="25" value="-1.23289" />
                                                            <Key frame="30" value="-1.40867" />
                                                            <Key frame="35" value="-1.84813" />
                                                            <Key frame="40" value="-0.441863" />
                                                            <Key frame="45" value="-0.529755" />
                                                            <Key frame="50" value="-0.353971" />
                                                            <Key frame="55" value="-0.705538" />
                                                            <Key frame="60" value="-2.02391" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-3.86483" />
                                                            <Key frame="10" value="-4.2164" />
                                                            <Key frame="15" value="-4.30429" />
                                                            <Key frame="20" value="-4.2164" />
                                                            <Key frame="25" value="-4.30429" />
                                                            <Key frame="30" value="-4.30429" />
                                                            <Key frame="35" value="-4.48007" />
                                                            <Key frame="40" value="-4.30429" />
                                                            <Key frame="45" value="-4.2164" />
                                                            <Key frame="50" value="-4.2164" />
                                                            <Key frame="55" value="-4.30429" />
                                                            <Key frame="60" value="-4.30429" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-7.02893" />
                                                            <Key frame="10" value="-7.11683" />
                                                            <Key frame="15" value="-7.11683" />
                                                            <Key frame="20" value="-7.11683" />
                                                            <Key frame="25" value="-7.11683" />
                                                            <Key frame="30" value="-7.11683" />
                                                            <Key frame="35" value="-7.11683" />
                                                            <Key frame="40" value="-7.11683" />
                                                            <Key frame="45" value="-7.20472" />
                                                            <Key frame="50" value="-7.20472" />
                                                            <Key frame="55" value="-7.20472" />
                                                            <Key frame="60" value="-7.11683" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="21.619" />
                                                            <Key frame="10" value="21.5311" />
                                                            <Key frame="15" value="21.5311" />
                                                            <Key frame="20" value="21.3553" />
                                                            <Key frame="25" value="21.4432" />
                                                            <Key frame="30" value="21.3553" />
                                                            <Key frame="35" value="21.7069" />
                                                            <Key frame="40" value="21.619" />
                                                            <Key frame="45" value="21.7069" />
                                                            <Key frame="50" value="21.7069" />
                                                            <Key frame="55" value="21.4432" />
                                                            <Key frame="60" value="21.5311" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-4.65586" />
                                                            <Key frame="10" value="-4.65586" />
                                                            <Key frame="15" value="-4.65586" />
                                                            <Key frame="20" value="-4.65586" />
                                                            <Key frame="25" value="-4.65586" />
                                                            <Key frame="30" value="-4.65586" />
                                                            <Key frame="35" value="-4.65586" />
                                                            <Key frame="40" value="-4.56797" />
                                                            <Key frame="45" value="-4.65586" />
                                                            <Key frame="50" value="-4.65586" />
                                                            <Key frame="55" value="-4.65586" />
                                                            <Key frame="60" value="-4.65586" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="4.48488" />
                                                            <Key frame="10" value="3.95753" />
                                                            <Key frame="15" value="3.34229" />
                                                            <Key frame="20" value="3.07861" />
                                                            <Key frame="25" value="2.37548" />
                                                            <Key frame="30" value="2.1997" />
                                                            <Key frame="35" value="1.76024" />
                                                            <Key frame="40" value="3.07861" />
                                                            <Key frame="45" value="3.43018" />
                                                            <Key frame="50" value="3.07861" />
                                                            <Key frame="55" value="2.72705" />
                                                            <Key frame="60" value="1.67235" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="4.39699" />
                                                            <Key frame="10" value="4.83645" />
                                                            <Key frame="15" value="4.83645" />
                                                            <Key frame="20" value="4.83645" />
                                                            <Key frame="25" value="4.92434" />
                                                            <Key frame="30" value="5.10012" />
                                                            <Key frame="35" value="5.3638" />
                                                            <Key frame="40" value="5.10012" />
                                                            <Key frame="45" value="5.18802" />
                                                            <Key frame="50" value="5.18802" />
                                                            <Key frame="55" value="5.27591" />
                                                            <Key frame="60" value="5.27591" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="hand clapping (1)" id="10" localization="8" tooltip="" x="915" y="382">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="8" start_frame="1" end_frame="-1" size="60">
                                                    <ActuatorList model="Nao">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="5.2711" />
                                                            <Key frame="10" value="5.35899" />
                                                            <Key frame="15" value="6.06212" />
                                                            <Key frame="20" value="4.65586" />
                                                            <Key frame="25" value="31.0234" />
                                                            <Key frame="30" value="-10.7252" />
                                                            <Key frame="35" value="-42.2783" />
                                                            <Key frame="40" value="-3.95753" />
                                                            <Key frame="45" value="-4.57277" />
                                                            <Key frame="50" value="-4.3091" />
                                                            <Key frame="55" value="-4.3091" />
                                                            <Key frame="60" value="3.60116" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="6.94104" />
                                                            <Key frame="10" value="6.94104" />
                                                            <Key frame="15" value="-13.1862" />
                                                            <Key frame="20" value="5.71056" />
                                                            <Key frame="25" value="-4.92434" />
                                                            <Key frame="30" value="7.99574" />
                                                            <Key frame="35" value="7.90785" />
                                                            <Key frame="40" value="7.81996" />
                                                            <Key frame="45" value="-10.6373" />
                                                            <Key frame="50" value="6.76526" />
                                                            <Key frame="55" value="6.76526" />
                                                            <Key frame="60" value="1.93121" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="96.5027" />
                                                            <Key frame="10" value="26.6288" />
                                                            <Key frame="15" value="26.8046" />
                                                            <Key frame="20" value="29.6171" />
                                                            <Key frame="25" value="23.992" />
                                                            <Key frame="30" value="22.5858" />
                                                            <Key frame="35" value="21.2674" />
                                                            <Key frame="40" value="27.0682" />
                                                            <Key frame="45" value="25.5741" />
                                                            <Key frame="50" value="24.871" />
                                                            <Key frame="55" value="43.9435" />
                                                            <Key frame="60" value="84.11" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="12.3903" />
                                                            <Key frame="10" value="54.1389" />
                                                            <Key frame="15" value="53.6994" />
                                                            <Key frame="20" value="3.33748" />
                                                            <Key frame="25" value="53.3479" />
                                                            <Key frame="30" value="-7.12163" />
                                                            <Key frame="35" value="53.0842" />
                                                            <Key frame="40" value="-7.73688" />
                                                            <Key frame="45" value="52.5569" />
                                                            <Key frame="50" value="-8.5279" />
                                                            <Key frame="55" value="36.209" />
                                                            <Key frame="60" value="15.5544" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-58.7141" />
                                                            <Key frame="10" value="-34.7196" />
                                                            <Key frame="15" value="-34.8075" />
                                                            <Key frame="20" value="-24.7879" />
                                                            <Key frame="25" value="-26.9852" />
                                                            <Key frame="30" value="-27.0731" />
                                                            <Key frame="35" value="-29.0067" />
                                                            <Key frame="40" value="-27.5125" />
                                                            <Key frame="45" value="-28.4793" />
                                                            <Key frame="50" value="-25.8426" />
                                                            <Key frame="55" value="-24.7" />
                                                            <Key frame="60" value="-11.9557" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-37.791" />
                                                            <Key frame="10" value="-41.1309" />
                                                            <Key frame="15" value="-41.4825" />
                                                            <Key frame="20" value="-57.5667" />
                                                            <Key frame="25" value="-25.1346" />
                                                            <Key frame="30" value="-48.338" />
                                                            <Key frame="35" value="-24.1678" />
                                                            <Key frame="40" value="-49.3049" />
                                                            <Key frame="45" value="-28.4745" />
                                                            <Key frame="50" value="-44.1192" />
                                                            <Key frame="55" value="-32.0781" />
                                                            <Key frame="60" value="-18.8943" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-44.0362" />
                                                            <Key frame="10" value="-44.0362" />
                                                            <Key frame="15" value="-44.0362" />
                                                            <Key frame="20" value="-44.1241" />
                                                            <Key frame="25" value="-44.0362" />
                                                            <Key frame="30" value="-44.0362" />
                                                            <Key frame="35" value="-44.0362" />
                                                            <Key frame="40" value="-44.1241" />
                                                            <Key frame="45" value="-44.0362" />
                                                            <Key frame="50" value="-44.1241" />
                                                            <Key frame="55" value="-43.7725" />
                                                            <Key frame="60" value="-43.7725" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="57.2958" />
                                                            <Key frame="10" value="57.2958" />
                                                            <Key frame="15" value="57.2958" />
                                                            <Key frame="20" value="57.2958" />
                                                            <Key frame="25" value="57.2958" />
                                                            <Key frame="30" value="57.2958" />
                                                            <Key frame="35" value="57.2958" />
                                                            <Key frame="40" value="57.2958" />
                                                            <Key frame="45" value="57.2958" />
                                                            <Key frame="50" value="57.2958" />
                                                            <Key frame="55" value="57.2958" />
                                                            <Key frame="60" value="57.2958" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="87.8062" />
                                                            <Key frame="10" value="24.9637" />
                                                            <Key frame="15" value="24.9637" />
                                                            <Key frame="20" value="28.1278" />
                                                            <Key frame="25" value="24.4363" />
                                                            <Key frame="30" value="23.2058" />
                                                            <Key frame="35" value="23.03" />
                                                            <Key frame="40" value="29.8856" />
                                                            <Key frame="45" value="29.2703" />
                                                            <Key frame="50" value="30.6766" />
                                                            <Key frame="55" value="51.8585" />
                                                            <Key frame="60" value="84.5542" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-8.5279" />
                                                            <Key frame="10" value="-55.8137" />
                                                            <Key frame="15" value="-54.1437" />
                                                            <Key frame="20" value="-14.3288" />
                                                            <Key frame="25" value="-60.8235" />
                                                            <Key frame="30" value="-14.7682" />
                                                            <Key frame="35" value="-62.4934" />
                                                            <Key frame="40" value="-19.2507" />
                                                            <Key frame="45" value="-65.3938" />
                                                            <Key frame="50" value="-22.3269" />
                                                            <Key frame="55" value="-48.0792" />
                                                            <Key frame="60" value="-12.8346" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="52.3811" />
                                                            <Key frame="10" value="37.6153" />
                                                            <Key frame="15" value="37.6153" />
                                                            <Key frame="20" value="30.7597" />
                                                            <Key frame="25" value="34.539" />
                                                            <Key frame="30" value="34.1875" />
                                                            <Key frame="35" value="36.5606" />
                                                            <Key frame="40" value="30.8476" />
                                                            <Key frame="45" value="38.1426" />
                                                            <Key frame="50" value="26.8925" />
                                                            <Key frame="55" value="26.3651" />
                                                            <Key frame="60" value="13.9724" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="21.0964" />
                                                            <Key frame="10" value="45.5303" />
                                                            <Key frame="15" value="47.7276" />
                                                            <Key frame="20" value="66.7122" />
                                                            <Key frame="25" value="45.794" />
                                                            <Key frame="30" value="63.7239" />
                                                            <Key frame="35" value="50.9796" />
                                                            <Key frame="40" value="73.0404" />
                                                            <Key frame="45" value="70.3158" />
                                                            <Key frame="50" value="72.5131" />
                                                            <Key frame="55" value="66.9759" />
                                                            <Key frame="60" value="8.35212" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="60.8187" />
                                                            <Key frame="10" value="52.7326" />
                                                            <Key frame="15" value="52.8205" />
                                                            <Key frame="20" value="53.6115" />
                                                            <Key frame="25" value="53.6994" />
                                                            <Key frame="30" value="58.7972" />
                                                            <Key frame="35" value="59.0608" />
                                                            <Key frame="40" value="63.4554" />
                                                            <Key frame="45" value="62.7523" />
                                                            <Key frame="50" value="66.8832" />
                                                            <Key frame="55" value="66.7953" />
                                                            <Key frame="60" value="62.6644" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="57.2958" />
                                                            <Key frame="10" value="57.2958" />
                                                            <Key frame="15" value="57.2958" />
                                                            <Key frame="20" value="57.2958" />
                                                            <Key frame="25" value="57.2958" />
                                                            <Key frame="30" value="57.2958" />
                                                            <Key frame="35" value="57.2958" />
                                                            <Key frame="40" value="57.2958" />
                                                            <Key frame="45" value="57.2958" />
                                                            <Key frame="50" value="57.2958" />
                                                            <Key frame="55" value="57.2958" />
                                                            <Key frame="60" value="57.2958" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-21.2674" />
                                                            <Key frame="10" value="-19.6853" />
                                                            <Key frame="15" value="-19.7732" />
                                                            <Key frame="20" value="-19.949" />
                                                            <Key frame="25" value="-19.949" />
                                                            <Key frame="30" value="-20.0369" />
                                                            <Key frame="35" value="-19.4217" />
                                                            <Key frame="40" value="-19.2459" />
                                                            <Key frame="45" value="-18.4549" />
                                                            <Key frame="50" value="-18.1912" />
                                                            <Key frame="55" value="-18.8064" />
                                                            <Key frame="60" value="-19.0701" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="6.85796" />
                                                            <Key frame="10" value="6.94585" />
                                                            <Key frame="15" value="6.85796" />
                                                            <Key frame="20" value="6.85796" />
                                                            <Key frame="25" value="6.94585" />
                                                            <Key frame="30" value="6.85796" />
                                                            <Key frame="35" value="6.94585" />
                                                            <Key frame="40" value="6.94585" />
                                                            <Key frame="45" value="6.94585" />
                                                            <Key frame="50" value="6.85796" />
                                                            <Key frame="55" value="6.94585" />
                                                            <Key frame="60" value="6.85796" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="25.9305" />
                                                            <Key frame="10" value="26.3699" />
                                                            <Key frame="15" value="26.3699" />
                                                            <Key frame="20" value="26.282" />
                                                            <Key frame="25" value="26.3699" />
                                                            <Key frame="30" value="26.1062" />
                                                            <Key frame="35" value="26.6336" />
                                                            <Key frame="40" value="26.5457" />
                                                            <Key frame="45" value="27.3367" />
                                                            <Key frame="50" value="26.8094" />
                                                            <Key frame="55" value="26.5457" />
                                                            <Key frame="60" value="26.5457" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-5.29" />
                                                            <Key frame="10" value="-5.29" />
                                                            <Key frame="15" value="-5.29" />
                                                            <Key frame="20" value="-5.29" />
                                                            <Key frame="25" value="-5.29" />
                                                            <Key frame="30" value="-5.29" />
                                                            <Key frame="35" value="-5.29" />
                                                            <Key frame="40" value="-5.29" />
                                                            <Key frame="45" value="-5.29" />
                                                            <Key frame="50" value="-5.29" />
                                                            <Key frame="55" value="-5.29" />
                                                            <Key frame="60" value="-5.29" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="1.66754" />
                                                            <Key frame="10" value="0.612838" />
                                                            <Key frame="15" value="-0.00240423" />
                                                            <Key frame="20" value="-0.353971" />
                                                            <Key frame="25" value="-1.23289" />
                                                            <Key frame="30" value="-1.40867" />
                                                            <Key frame="35" value="-1.84813" />
                                                            <Key frame="40" value="-0.441863" />
                                                            <Key frame="45" value="-0.529755" />
                                                            <Key frame="50" value="-0.353971" />
                                                            <Key frame="55" value="-0.705538" />
                                                            <Key frame="60" value="-2.02391" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-3.86483" />
                                                            <Key frame="10" value="-4.2164" />
                                                            <Key frame="15" value="-4.30429" />
                                                            <Key frame="20" value="-4.2164" />
                                                            <Key frame="25" value="-4.30429" />
                                                            <Key frame="30" value="-4.30429" />
                                                            <Key frame="35" value="-4.48007" />
                                                            <Key frame="40" value="-4.30429" />
                                                            <Key frame="45" value="-4.2164" />
                                                            <Key frame="50" value="-4.2164" />
                                                            <Key frame="55" value="-4.30429" />
                                                            <Key frame="60" value="-4.30429" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-7.02893" />
                                                            <Key frame="10" value="-7.11683" />
                                                            <Key frame="15" value="-7.11683" />
                                                            <Key frame="20" value="-7.11683" />
                                                            <Key frame="25" value="-7.11683" />
                                                            <Key frame="30" value="-7.11683" />
                                                            <Key frame="35" value="-7.11683" />
                                                            <Key frame="40" value="-7.11683" />
                                                            <Key frame="45" value="-7.20472" />
                                                            <Key frame="50" value="-7.20472" />
                                                            <Key frame="55" value="-7.20472" />
                                                            <Key frame="60" value="-7.11683" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="21.619" />
                                                            <Key frame="10" value="21.5311" />
                                                            <Key frame="15" value="21.5311" />
                                                            <Key frame="20" value="21.3553" />
                                                            <Key frame="25" value="21.4432" />
                                                            <Key frame="30" value="21.3553" />
                                                            <Key frame="35" value="21.7069" />
                                                            <Key frame="40" value="21.619" />
                                                            <Key frame="45" value="21.7069" />
                                                            <Key frame="50" value="21.7069" />
                                                            <Key frame="55" value="21.4432" />
                                                            <Key frame="60" value="21.5311" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="-4.65586" />
                                                            <Key frame="10" value="-4.65586" />
                                                            <Key frame="15" value="-4.65586" />
                                                            <Key frame="20" value="-4.65586" />
                                                            <Key frame="25" value="-4.65586" />
                                                            <Key frame="30" value="-4.65586" />
                                                            <Key frame="35" value="-4.65586" />
                                                            <Key frame="40" value="-4.56797" />
                                                            <Key frame="45" value="-4.65586" />
                                                            <Key frame="50" value="-4.65586" />
                                                            <Key frame="55" value="-4.65586" />
                                                            <Key frame="60" value="-4.65586" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="4.48488" />
                                                            <Key frame="10" value="3.95753" />
                                                            <Key frame="15" value="3.34229" />
                                                            <Key frame="20" value="3.07861" />
                                                            <Key frame="25" value="2.37548" />
                                                            <Key frame="30" value="2.1997" />
                                                            <Key frame="35" value="1.76024" />
                                                            <Key frame="40" value="3.07861" />
                                                            <Key frame="45" value="3.43018" />
                                                            <Key frame="50" value="3.07861" />
                                                            <Key frame="55" value="2.72705" />
                                                            <Key frame="60" value="1.67235" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="5" value="4.39699" />
                                                            <Key frame="10" value="4.83645" />
                                                            <Key frame="15" value="4.83645" />
                                                            <Key frame="20" value="4.83645" />
                                                            <Key frame="25" value="4.92434" />
                                                            <Key frame="30" value="5.10012" />
                                                            <Key frame="35" value="5.3638" />
                                                            <Key frame="40" value="5.10012" />
                                                            <Key frame="45" value="5.18802" />
                                                            <Key frame="50" value="5.18802" />
                                                            <Key frame="55" value="5.27591" />
                                                            <Key frame="60" value="5.27591" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Set Stiffness" id="6" localization="8" tooltip="Set motors stiffness." x="1384" y="293">
                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                            </Box>
                                            <Box name="macarena" id="3" localization="8" tooltip="" x="1010" y="578">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="22" start_frame="1" end_frame="-1" size="188">
                                                    <ActuatorList model="Nao">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-31.9071" />
                                                            <Key frame="25" value="19.158" />
                                                            <Key frame="37" value="-3.95753" />
                                                            <Key frame="50" value="-3.95753" />
                                                            <Key frame="62" value="-1.84813" />
                                                            <Key frame="75" value="-3.95753" />
                                                            <Key frame="87" value="-4.04542" />
                                                            <Key frame="100" value="-2.81494" />
                                                            <Key frame="112" value="16.7849" />
                                                            <Key frame="125" value="-14.5924" />
                                                            <Key frame="137" value="8.61098" />
                                                            <Key frame="150" value="-24.7" />
                                                            <Key frame="162" value="-6.06693" />
                                                            <Key frame="175" value="-6.06693" />
                                                            <Key frame="187" value="-6.06693" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="3.60116" />
                                                            <Key frame="25" value="3.51326" />
                                                            <Key frame="37" value="2.89802" />
                                                            <Key frame="50" value="2.89802" />
                                                            <Key frame="62" value="20.0369" />
                                                            <Key frame="75" value="-4.04542" />
                                                            <Key frame="87" value="13.6208" />
                                                            <Key frame="100" value="0.173379" />
                                                            <Key frame="112" value="17.2244" />
                                                            <Key frame="125" value="5.18321" />
                                                            <Key frame="137" value="5.2711" />
                                                            <Key frame="150" value="5.2711" />
                                                            <Key frame="162" value="5.97423" />
                                                            <Key frame="175" value="5.97423" />
                                                            <Key frame="187" value="5.97423" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="83.4947" />
                                                            <Key frame="25" value="-1.23289" />
                                                            <Key frame="37" value="-1.67235" />
                                                            <Key frame="50" value="2.19489" />
                                                            <Key frame="62" value="4.48007" />
                                                            <Key frame="75" value="25.2225" />
                                                            <Key frame="87" value="-41.3115" />
                                                            <Key frame="100" value="-33.3134" />
                                                            <Key frame="112" value="60.2034" />
                                                            <Key frame="125" value="60.2034" />
                                                            <Key frame="137" value="87.2741" />
                                                            <Key frame="150" value="87.0983" />
                                                            <Key frame="162" value="87.362" />
                                                            <Key frame="175" value="91.405" />
                                                            <Key frame="187" value="96.1511" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="16.1697" />
                                                            <Key frame="25" value="-2.02391" />
                                                            <Key frame="37" value="-2.02391" />
                                                            <Key frame="50" value="-1.67235" />
                                                            <Key frame="62" value="-1.67235" />
                                                            <Key frame="75" value="-18" />
                                                            <Key frame="87" value="1.31597" />
                                                            <Key frame="100" value="1.31597" />
                                                            <Key frame="112" value="7.64418" />
                                                            <Key frame="125" value="7.55628" />
                                                            <Key frame="137" value="50.8869" />
                                                            <Key frame="150" value="43.504" />
                                                            <Key frame="162" value="17.1365" />
                                                            <Key frame="175" value="17.3123" />
                                                            <Key frame="187" value="17.2244" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-12.2194" />
                                                            <Key frame="25" value="44.0313" />
                                                            <Key frame="37" value="43.9435" />
                                                            <Key frame="50" value="-101.078" />
                                                            <Key frame="62" value="-96.947" />
                                                            <Key frame="75" value="-22.1511" />
                                                            <Key frame="87" value="-85.3453" />
                                                            <Key frame="100" value="-79.7202" />
                                                            <Key frame="112" value="3.86483" />
                                                            <Key frame="125" value="4.30429" />
                                                            <Key frame="137" value="7.81996" />
                                                            <Key frame="150" value="5.97423" />
                                                            <Key frame="162" value="5.62267" />
                                                            <Key frame="175" value="5.71056" />
                                                            <Key frame="187" value="5.62267" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-18.9822" />
                                                            <Key frame="25" value="-2" />
                                                            <Key frame="37" value="-2" />
                                                            <Key frame="50" value="-2" />
                                                            <Key frame="62" value="-2" />
                                                            <Key frame="75" value="-83.4947" />
                                                            <Key frame="87" value="-88.5" />
                                                            <Key frame="100" value="-88.5" />
                                                            <Key frame="112" value="-60.3792" />
                                                            <Key frame="125" value="-59.3245" />
                                                            <Key frame="137" value="-72.5083" />
                                                            <Key frame="150" value="-58.8851" />
                                                            <Key frame="162" value="-11.4235" />
                                                            <Key frame="175" value="-11.4235" />
                                                            <Key frame="187" value="-11.4235" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-44.0362" />
                                                            <Key frame="25" value="-43.8604" />
                                                            <Key frame="37" value="-43.7725" />
                                                            <Key frame="50" value="-77.6108" />
                                                            <Key frame="62" value="-71.6342" />
                                                            <Key frame="75" value="-43.333" />
                                                            <Key frame="87" value="-40.4326" />
                                                            <Key frame="100" value="-40.5205" />
                                                            <Key frame="112" value="-11.7799" />
                                                            <Key frame="125" value="-8.79158" />
                                                            <Key frame="137" value="-7.73688" />
                                                            <Key frame="150" value="-7.73688" />
                                                            <Key frame="162" value="-44.7817" />
                                                            <Key frame="175" value="-65.581" />
                                                            <Key frame="185" value="-70.7746" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="57.2958" />
                                                            <Key frame="25" value="57.2958" />
                                                            <Key frame="37" value="57.2958" />
                                                            <Key frame="50" value="57.2958" />
                                                            <Key frame="62" value="57.2958" />
                                                            <Key frame="75" value="57.2958" />
                                                            <Key frame="87" value="57.2958" />
                                                            <Key frame="100" value="57.2958" />
                                                            <Key frame="112" value="57.2958" />
                                                            <Key frame="125" value="57.2958" />
                                                            <Key frame="137" value="57.2958" />
                                                            <Key frame="150" value="57.2958" />
                                                            <Key frame="162" value="57.2958" />
                                                            <Key frame="175" value="57.2958" />
                                                            <Key frame="187" value="57.2958" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-6.3258" />
                                                            <Key frame="25" value="-5.09532" />
                                                            <Key frame="37" value="0.617646" />
                                                            <Key frame="50" value="0.00240423" />
                                                            <Key frame="62" value="18.6355" />
                                                            <Key frame="75" value="23.909" />
                                                            <Key frame="87" value="22.239" />
                                                            <Key frame="100" value="-68.0258" />
                                                            <Key frame="112" value="-68.2016" />
                                                            <Key frame="125" value="50.1007" />
                                                            <Key frame="137" value="60.7356" />
                                                            <Key frame="150" value="57.3957" />
                                                            <Key frame="162" value="77.8745" />
                                                            <Key frame="175" value="77.8745" />
                                                            <Key frame="187" value="77.8745" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="2.37067" />
                                                            <Key frame="25" value="2.63435" />
                                                            <Key frame="37" value="0.173379" />
                                                            <Key frame="50" value="0.964405" />
                                                            <Key frame="62" value="11.072" />
                                                            <Key frame="75" value="10.5446" />
                                                            <Key frame="87" value="10.0173" />
                                                            <Key frame="100" value="-41.8389" />
                                                            <Key frame="112" value="-42.7178" />
                                                            <Key frame="125" value="6.41369" />
                                                            <Key frame="137" value="3.86483" />
                                                            <Key frame="150" value="-31.2919" />
                                                            <Key frame="162" value="-16.1745" />
                                                            <Key frame="175" value="-16.0866" />
                                                            <Key frame="187" value="-16.0866" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-63.7239" />
                                                            <Key frame="25" value="-63.8118" />
                                                            <Key frame="37" value="69.4321" />
                                                            <Key frame="50" value="69.8715" />
                                                            <Key frame="62" value="-11.2525" />
                                                            <Key frame="75" value="-13.2741" />
                                                            <Key frame="87" value="1.75543" />
                                                            <Key frame="100" value="29.4413" />
                                                            <Key frame="112" value="28.914" />
                                                            <Key frame="125" value="-42.4541" />
                                                            <Key frame="137" value="-42.1904" />
                                                            <Key frame="150" value="-45.9698" />
                                                            <Key frame="162" value="-46.4092" />
                                                            <Key frame="175" value="-46.4092" />
                                                            <Key frame="187" value="-46.4092" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="12.2194" />
                                                            <Key frame="25" value="11.8678" />
                                                            <Key frame="37" value="2" />
                                                            <Key frame="50" value="2" />
                                                            <Key frame="62" value="68.9974" />
                                                            <Key frame="75" value="65.0423" />
                                                            <Key frame="87" value="56.1652" />
                                                            <Key frame="100" value="83.4117" />
                                                            <Key frame="112" value="84.5542" />
                                                            <Key frame="125" value="30.5008" />
                                                            <Key frame="137" value="28.0399" />
                                                            <Key frame="150" value="59.3293" />
                                                            <Key frame="162" value="17.4929" />
                                                            <Key frame="175" value="17.5807" />
                                                            <Key frame="187" value="17.5807" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="58.9729" />
                                                            <Key frame="25" value="58.9729" />
                                                            <Key frame="37" value="104.5" />
                                                            <Key frame="50" value="104.5" />
                                                            <Key frame="62" value="99.8426" />
                                                            <Key frame="75" value="100.018" />
                                                            <Key frame="87" value="100.194" />
                                                            <Key frame="100" value="91.4929" />
                                                            <Key frame="112" value="91.5808" />
                                                            <Key frame="125" value="71.0561" />
                                                            <Key frame="140" value="99.4577" />
                                                            <Key frame="150" value="101.827" />
                                                            <Key frame="163" value="104.5" />
                                                            <Key frame="176" value="104.323" />
                                                            <Key frame="188" value="104.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="57.2958" />
                                                            <Key frame="25" value="57.2958" />
                                                            <Key frame="37" value="57.2958" />
                                                            <Key frame="50" value="57.2958" />
                                                            <Key frame="62" value="57.2958" />
                                                            <Key frame="75" value="57.2958" />
                                                            <Key frame="87" value="57.2958" />
                                                            <Key frame="100" value="57.2958" />
                                                            <Key frame="112" value="57.2958" />
                                                            <Key frame="125" value="57.2958" />
                                                            <Key frame="137" value="57.2958" />
                                                            <Key frame="150" value="57.2958" />
                                                            <Key frame="162" value="57.2958" />
                                                            <Key frame="175" value="57.2958" />
                                                            <Key frame="187" value="57.2958" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-18.2791" />
                                                            <Key frame="25" value="-17.9275" />
                                                            <Key frame="37" value="-17.5759" />
                                                            <Key frame="50" value="-18.2791" />
                                                            <Key frame="62" value="-19.2459" />
                                                            <Key frame="75" value="-17.4881" />
                                                            <Key frame="87" value="-17.5759" />
                                                            <Key frame="100" value="-14.3239" />
                                                            <Key frame="112" value="-13.5329" />
                                                            <Key frame="125" value="-11.5114" />
                                                            <Key frame="137" value="-10.1051" />
                                                            <Key frame="150" value="-12.5661" />
                                                            <Key frame="162" value="-13.6208" />
                                                            <Key frame="175" value="-13.0056" />
                                                            <Key frame="187" value="-12.0388" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="6.94585" />
                                                            <Key frame="25" value="6.94585" />
                                                            <Key frame="37" value="6.94585" />
                                                            <Key frame="50" value="6.94585" />
                                                            <Key frame="62" value="6.94585" />
                                                            <Key frame="75" value="7.03374" />
                                                            <Key frame="87" value="7.03374" />
                                                            <Key frame="100" value="7.03374" />
                                                            <Key frame="112" value="7.03374" />
                                                            <Key frame="125" value="7.03374" />
                                                            <Key frame="137" value="6.85796" />
                                                            <Key frame="150" value="6.4185" />
                                                            <Key frame="162" value="-9.4899" />
                                                            <Key frame="175" value="20.1296" />
                                                            <Key frame="187" value="2.99072" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="26.6336" />
                                                            <Key frame="25" value="26.8973" />
                                                            <Key frame="37" value="26.9852" />
                                                            <Key frame="50" value="27.1609" />
                                                            <Key frame="62" value="27.0731" />
                                                            <Key frame="75" value="27.73" />
                                                            <Key frame="87" value="27.73" />
                                                            <Key frame="100" value="27.73" />
                                                            <Key frame="112" value="27.73" />
                                                            <Key frame="125" value="27.73" />
                                                            <Key frame="137" value="27.73" />
                                                            <Key frame="150" value="27.73" />
                                                            <Key frame="162" value="27.73" />
                                                            <Key frame="175" value="22.239" />
                                                            <Key frame="187" value="24.0847" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-5.27591" />
                                                            <Key frame="25" value="-5.27591" />
                                                            <Key frame="37" value="-5.27591" />
                                                            <Key frame="50" value="-5.18802" />
                                                            <Key frame="62" value="-5.27591" />
                                                            <Key frame="75" value="-5.18802" />
                                                            <Key frame="87" value="-5.27591" />
                                                            <Key frame="100" value="-5.18802" />
                                                            <Key frame="112" value="-5.27591" />
                                                            <Key frame="125" value="-5.18802" />
                                                            <Key frame="137" value="-5.18802" />
                                                            <Key frame="150" value="-5.29" />
                                                            <Key frame="162" value="-5.29" />
                                                            <Key frame="175" value="-5.29" />
                                                            <Key frame="187" value="-5.29" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="0.173379" />
                                                            <Key frame="25" value="-0.353971" />
                                                            <Key frame="37" value="-0.00240423" />
                                                            <Key frame="50" value="-0.617646" />
                                                            <Key frame="62" value="-0.881321" />
                                                            <Key frame="75" value="-1.93602" />
                                                            <Key frame="87" value="-2.63916" />
                                                            <Key frame="100" value="-2.90283" />
                                                            <Key frame="112" value="-1.76312" />
                                                            <Key frame="125" value="-2.25198" />
                                                            <Key frame="137" value="-1.41155" />
                                                            <Key frame="150" value="0.261271" />
                                                            <Key frame="162" value="-0.125906" />
                                                            <Key frame="176" value="-0.361999" />
                                                            <Key frame="188" value="0.489337" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-4.39218" />
                                                            <Key frame="25" value="-4.39218" />
                                                            <Key frame="37" value="-4.39218" />
                                                            <Key frame="50" value="-4.39218" />
                                                            <Key frame="62" value="-4.39218" />
                                                            <Key frame="75" value="-4.39218" />
                                                            <Key frame="87" value="-4.39218" />
                                                            <Key frame="100" value="-4.39218" />
                                                            <Key frame="112" value="-4.48007" />
                                                            <Key frame="125" value="-4.48007" />
                                                            <Key frame="137" value="-4.48007" />
                                                            <Key frame="150" value="-4.56797" />
                                                            <Key frame="162" value="-4.74601" />
                                                            <Key frame="176" value="-3.82408" />
                                                            <Key frame="188" value="-4.69147" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-7.20472" />
                                                            <Key frame="25" value="-7.20472" />
                                                            <Key frame="37" value="-7.29261" />
                                                            <Key frame="50" value="-7.20472" />
                                                            <Key frame="62" value="-7.20472" />
                                                            <Key frame="75" value="-7.29261" />
                                                            <Key frame="87" value="-7.29261" />
                                                            <Key frame="100" value="-7.29261" />
                                                            <Key frame="112" value="-7.29261" />
                                                            <Key frame="125" value="-7.29261" />
                                                            <Key frame="137" value="-7.3805" />
                                                            <Key frame="150" value="-7.3805" />
                                                            <Key frame="162" value="-23.0252" />
                                                            <Key frame="175" value="7.12163" />
                                                            <Key frame="187" value="-10.4567" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="21.8826" />
                                                            <Key frame="25" value="21.8826" />
                                                            <Key frame="37" value="22.0584" />
                                                            <Key frame="50" value="21.8826" />
                                                            <Key frame="62" value="21.619" />
                                                            <Key frame="75" value="21.9705" />
                                                            <Key frame="87" value="21.8826" />
                                                            <Key frame="100" value="22.41" />
                                                            <Key frame="112" value="22.3221" />
                                                            <Key frame="125" value="22.4979" />
                                                            <Key frame="137" value="22.4979" />
                                                            <Key frame="150" value="22.3221" />
                                                            <Key frame="162" value="19.7732" />
                                                            <Key frame="175" value="19.5975" />
                                                            <Key frame="187" value="19.4217" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-4.39218" />
                                                            <Key frame="25" value="-4.39218" />
                                                            <Key frame="37" value="-4.39218" />
                                                            <Key frame="50" value="-4.39218" />
                                                            <Key frame="62" value="-4.39218" />
                                                            <Key frame="75" value="-4.39218" />
                                                            <Key frame="87" value="-4.39218" />
                                                            <Key frame="100" value="-4.39218" />
                                                            <Key frame="112" value="-4.39218" />
                                                            <Key frame="125" value="-4.39218" />
                                                            <Key frame="137" value="-4.39218" />
                                                            <Key frame="150" value="-5.29" />
                                                            <Key frame="162" value="-5.29" />
                                                            <Key frame="175" value="-5.29" />
                                                            <Key frame="187" value="-5.29" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="3.43018" />
                                                            <Key frame="25" value="3.34229" />
                                                            <Key frame="37" value="3.51807" />
                                                            <Key frame="50" value="3.43018" />
                                                            <Key frame="62" value="3.51807" />
                                                            <Key frame="75" value="3.43018" />
                                                            <Key frame="87" value="2.99072" />
                                                            <Key frame="100" value="2.63916" />
                                                            <Key frame="112" value="1.23289" />
                                                            <Key frame="125" value="1.58446" />
                                                            <Key frame="137" value="1.23289" />
                                                            <Key frame="150" value="5.62747" />
                                                            <Key frame="162" value="3.17227" />
                                                            <Key frame="176" value="1.63962" />
                                                            <Key frame="187" value="1.26335" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="5.18802" />
                                                            <Key frame="25" value="5.18802" />
                                                            <Key frame="37" value="5.18802" />
                                                            <Key frame="50" value="5.18802" />
                                                            <Key frame="62" value="5.18802" />
                                                            <Key frame="75" value="5.27591" />
                                                            <Key frame="87" value="5.27591" />
                                                            <Key frame="100" value="5.27591" />
                                                            <Key frame="112" value="6.15482" />
                                                            <Key frame="125" value="6.15482" />
                                                            <Key frame="137" value="6.4185" />
                                                            <Key frame="150" value="5.97904" />
                                                            <Key frame="162" value="6.916" />
                                                            <Key frame="176" value="7.78854" />
                                                            <Key frame="187" value="7.56109" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="macarena (1)" id="13" localization="8" tooltip="" x="1270" y="607">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="22" start_frame="1" end_frame="-1" size="188">
                                                    <ActuatorList model="Nao">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-31.9071" />
                                                            <Key frame="25" value="19.158" />
                                                            <Key frame="37" value="-3.95753" />
                                                            <Key frame="50" value="-3.95753" />
                                                            <Key frame="62" value="-1.84813" />
                                                            <Key frame="75" value="-3.95753" />
                                                            <Key frame="87" value="-4.04542" />
                                                            <Key frame="100" value="-2.81494" />
                                                            <Key frame="112" value="16.7849" />
                                                            <Key frame="125" value="-14.5924" />
                                                            <Key frame="137" value="8.61098" />
                                                            <Key frame="150" value="-24.7" />
                                                            <Key frame="162" value="-6.06693" />
                                                            <Key frame="175" value="-6.06693" />
                                                            <Key frame="187" value="-6.06693" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="3.60116" />
                                                            <Key frame="25" value="3.51326" />
                                                            <Key frame="37" value="2.89802" />
                                                            <Key frame="50" value="2.89802" />
                                                            <Key frame="62" value="20.0369" />
                                                            <Key frame="75" value="-4.04542" />
                                                            <Key frame="87" value="13.6208" />
                                                            <Key frame="100" value="0.173379" />
                                                            <Key frame="112" value="17.2244" />
                                                            <Key frame="125" value="5.18321" />
                                                            <Key frame="137" value="5.2711" />
                                                            <Key frame="150" value="5.2711" />
                                                            <Key frame="162" value="5.97423" />
                                                            <Key frame="175" value="5.97423" />
                                                            <Key frame="187" value="5.97423" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="83.4947" />
                                                            <Key frame="25" value="-1.23289" />
                                                            <Key frame="37" value="-1.67235" />
                                                            <Key frame="50" value="2.19489" />
                                                            <Key frame="62" value="4.48007" />
                                                            <Key frame="75" value="25.2225" />
                                                            <Key frame="87" value="-41.3115" />
                                                            <Key frame="100" value="-33.3134" />
                                                            <Key frame="112" value="60.2034" />
                                                            <Key frame="125" value="60.2034" />
                                                            <Key frame="137" value="87.2741" />
                                                            <Key frame="150" value="87.0983" />
                                                            <Key frame="162" value="87.362" />
                                                            <Key frame="175" value="91.405" />
                                                            <Key frame="187" value="96.1511" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="16.1697" />
                                                            <Key frame="25" value="-2.02391" />
                                                            <Key frame="37" value="-2.02391" />
                                                            <Key frame="50" value="-1.67235" />
                                                            <Key frame="62" value="-1.67235" />
                                                            <Key frame="75" value="-18" />
                                                            <Key frame="87" value="1.31597" />
                                                            <Key frame="100" value="1.31597" />
                                                            <Key frame="112" value="7.64418" />
                                                            <Key frame="125" value="7.55628" />
                                                            <Key frame="137" value="50.8869" />
                                                            <Key frame="150" value="43.504" />
                                                            <Key frame="162" value="17.1365" />
                                                            <Key frame="175" value="17.3123" />
                                                            <Key frame="187" value="17.2244" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-12.2194" />
                                                            <Key frame="25" value="44.0313" />
                                                            <Key frame="37" value="43.9435" />
                                                            <Key frame="50" value="-101.078" />
                                                            <Key frame="62" value="-96.947" />
                                                            <Key frame="75" value="-22.1511" />
                                                            <Key frame="87" value="-85.3453" />
                                                            <Key frame="100" value="-79.7202" />
                                                            <Key frame="112" value="3.86483" />
                                                            <Key frame="125" value="4.30429" />
                                                            <Key frame="137" value="7.81996" />
                                                            <Key frame="150" value="5.97423" />
                                                            <Key frame="162" value="5.62267" />
                                                            <Key frame="175" value="5.71056" />
                                                            <Key frame="187" value="5.62267" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-18.9822" />
                                                            <Key frame="25" value="-2" />
                                                            <Key frame="37" value="-2" />
                                                            <Key frame="50" value="-2" />
                                                            <Key frame="62" value="-2" />
                                                            <Key frame="75" value="-83.4947" />
                                                            <Key frame="87" value="-88.5" />
                                                            <Key frame="100" value="-88.5" />
                                                            <Key frame="112" value="-60.3792" />
                                                            <Key frame="125" value="-59.3245" />
                                                            <Key frame="137" value="-72.5083" />
                                                            <Key frame="150" value="-58.8851" />
                                                            <Key frame="162" value="-11.4235" />
                                                            <Key frame="175" value="-11.4235" />
                                                            <Key frame="187" value="-11.4235" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-44.0362" />
                                                            <Key frame="25" value="-43.8604" />
                                                            <Key frame="37" value="-43.7725" />
                                                            <Key frame="50" value="-77.6108" />
                                                            <Key frame="62" value="-71.6342" />
                                                            <Key frame="75" value="-43.333" />
                                                            <Key frame="87" value="-40.4326" />
                                                            <Key frame="100" value="-40.5205" />
                                                            <Key frame="112" value="-11.7799" />
                                                            <Key frame="125" value="-8.79158" />
                                                            <Key frame="137" value="-7.73688" />
                                                            <Key frame="150" value="-7.73688" />
                                                            <Key frame="162" value="-44.7817" />
                                                            <Key frame="175" value="-65.581" />
                                                            <Key frame="185" value="-70.7746" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="57.2958" />
                                                            <Key frame="25" value="57.2958" />
                                                            <Key frame="37" value="57.2958" />
                                                            <Key frame="50" value="57.2958" />
                                                            <Key frame="62" value="57.2958" />
                                                            <Key frame="75" value="57.2958" />
                                                            <Key frame="87" value="57.2958" />
                                                            <Key frame="100" value="57.2958" />
                                                            <Key frame="112" value="57.2958" />
                                                            <Key frame="125" value="57.2958" />
                                                            <Key frame="137" value="57.2958" />
                                                            <Key frame="150" value="57.2958" />
                                                            <Key frame="162" value="57.2958" />
                                                            <Key frame="175" value="57.2958" />
                                                            <Key frame="187" value="57.2958" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-6.3258" />
                                                            <Key frame="25" value="-5.09532" />
                                                            <Key frame="37" value="0.617646" />
                                                            <Key frame="50" value="0.00240423" />
                                                            <Key frame="62" value="18.6355" />
                                                            <Key frame="75" value="23.909" />
                                                            <Key frame="87" value="22.239" />
                                                            <Key frame="100" value="-68.0258" />
                                                            <Key frame="112" value="-68.2016" />
                                                            <Key frame="125" value="50.1007" />
                                                            <Key frame="137" value="60.7356" />
                                                            <Key frame="150" value="57.3957" />
                                                            <Key frame="162" value="77.8745" />
                                                            <Key frame="175" value="77.8745" />
                                                            <Key frame="187" value="77.8745" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="2.37067" />
                                                            <Key frame="25" value="2.63435" />
                                                            <Key frame="37" value="0.173379" />
                                                            <Key frame="50" value="0.964405" />
                                                            <Key frame="62" value="11.072" />
                                                            <Key frame="75" value="10.5446" />
                                                            <Key frame="87" value="10.0173" />
                                                            <Key frame="100" value="-41.8389" />
                                                            <Key frame="112" value="-42.7178" />
                                                            <Key frame="125" value="6.41369" />
                                                            <Key frame="137" value="3.86483" />
                                                            <Key frame="150" value="-31.2919" />
                                                            <Key frame="162" value="-16.1745" />
                                                            <Key frame="175" value="-16.0866" />
                                                            <Key frame="187" value="-16.0866" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-63.7239" />
                                                            <Key frame="25" value="-63.8118" />
                                                            <Key frame="37" value="69.4321" />
                                                            <Key frame="50" value="69.8715" />
                                                            <Key frame="62" value="-11.2525" />
                                                            <Key frame="75" value="-13.2741" />
                                                            <Key frame="87" value="1.75543" />
                                                            <Key frame="100" value="29.4413" />
                                                            <Key frame="112" value="28.914" />
                                                            <Key frame="125" value="-42.4541" />
                                                            <Key frame="137" value="-42.1904" />
                                                            <Key frame="150" value="-45.9698" />
                                                            <Key frame="162" value="-46.4092" />
                                                            <Key frame="175" value="-46.4092" />
                                                            <Key frame="187" value="-46.4092" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="12.2194" />
                                                            <Key frame="25" value="11.8678" />
                                                            <Key frame="37" value="2" />
                                                            <Key frame="50" value="2" />
                                                            <Key frame="62" value="68.9974" />
                                                            <Key frame="75" value="65.0423" />
                                                            <Key frame="87" value="56.1652" />
                                                            <Key frame="100" value="83.4117" />
                                                            <Key frame="112" value="84.5542" />
                                                            <Key frame="125" value="30.5008" />
                                                            <Key frame="137" value="28.0399" />
                                                            <Key frame="150" value="59.3293" />
                                                            <Key frame="162" value="17.4929" />
                                                            <Key frame="175" value="17.5807" />
                                                            <Key frame="187" value="17.5807" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="58.9729" />
                                                            <Key frame="25" value="58.9729" />
                                                            <Key frame="37" value="104.5" />
                                                            <Key frame="50" value="104.5" />
                                                            <Key frame="62" value="99.8426" />
                                                            <Key frame="75" value="100.018" />
                                                            <Key frame="87" value="100.194" />
                                                            <Key frame="100" value="91.4929" />
                                                            <Key frame="112" value="91.5808" />
                                                            <Key frame="125" value="71.0561" />
                                                            <Key frame="140" value="99.4577" />
                                                            <Key frame="150" value="101.827" />
                                                            <Key frame="163" value="104.5" />
                                                            <Key frame="176" value="104.323" />
                                                            <Key frame="188" value="104.5" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="57.2958" />
                                                            <Key frame="25" value="57.2958" />
                                                            <Key frame="37" value="57.2958" />
                                                            <Key frame="50" value="57.2958" />
                                                            <Key frame="62" value="57.2958" />
                                                            <Key frame="75" value="57.2958" />
                                                            <Key frame="87" value="57.2958" />
                                                            <Key frame="100" value="57.2958" />
                                                            <Key frame="112" value="57.2958" />
                                                            <Key frame="125" value="57.2958" />
                                                            <Key frame="137" value="57.2958" />
                                                            <Key frame="150" value="57.2958" />
                                                            <Key frame="162" value="57.2958" />
                                                            <Key frame="175" value="57.2958" />
                                                            <Key frame="187" value="57.2958" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-18.2791" />
                                                            <Key frame="25" value="-17.9275" />
                                                            <Key frame="37" value="-17.5759" />
                                                            <Key frame="50" value="-18.2791" />
                                                            <Key frame="62" value="-19.2459" />
                                                            <Key frame="75" value="-17.4881" />
                                                            <Key frame="87" value="-17.5759" />
                                                            <Key frame="100" value="-14.3239" />
                                                            <Key frame="112" value="-13.5329" />
                                                            <Key frame="125" value="-11.5114" />
                                                            <Key frame="137" value="-10.1051" />
                                                            <Key frame="150" value="-12.5661" />
                                                            <Key frame="162" value="-13.6208" />
                                                            <Key frame="175" value="-13.0056" />
                                                            <Key frame="187" value="-12.0388" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="6.94585" />
                                                            <Key frame="25" value="6.94585" />
                                                            <Key frame="37" value="6.94585" />
                                                            <Key frame="50" value="6.94585" />
                                                            <Key frame="62" value="6.94585" />
                                                            <Key frame="75" value="7.03374" />
                                                            <Key frame="87" value="7.03374" />
                                                            <Key frame="100" value="7.03374" />
                                                            <Key frame="112" value="7.03374" />
                                                            <Key frame="125" value="7.03374" />
                                                            <Key frame="137" value="6.85796" />
                                                            <Key frame="150" value="6.4185" />
                                                            <Key frame="162" value="-9.4899" />
                                                            <Key frame="175" value="20.1296" />
                                                            <Key frame="187" value="2.99072" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="26.6336" />
                                                            <Key frame="25" value="26.8973" />
                                                            <Key frame="37" value="26.9852" />
                                                            <Key frame="50" value="27.1609" />
                                                            <Key frame="62" value="27.0731" />
                                                            <Key frame="75" value="27.73" />
                                                            <Key frame="87" value="27.73" />
                                                            <Key frame="100" value="27.73" />
                                                            <Key frame="112" value="27.73" />
                                                            <Key frame="125" value="27.73" />
                                                            <Key frame="137" value="27.73" />
                                                            <Key frame="150" value="27.73" />
                                                            <Key frame="162" value="27.73" />
                                                            <Key frame="175" value="22.239" />
                                                            <Key frame="187" value="24.0847" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-5.27591" />
                                                            <Key frame="25" value="-5.27591" />
                                                            <Key frame="37" value="-5.27591" />
                                                            <Key frame="50" value="-5.18802" />
                                                            <Key frame="62" value="-5.27591" />
                                                            <Key frame="75" value="-5.18802" />
                                                            <Key frame="87" value="-5.27591" />
                                                            <Key frame="100" value="-5.18802" />
                                                            <Key frame="112" value="-5.27591" />
                                                            <Key frame="125" value="-5.18802" />
                                                            <Key frame="137" value="-5.18802" />
                                                            <Key frame="150" value="-5.29" />
                                                            <Key frame="162" value="-5.29" />
                                                            <Key frame="175" value="-5.29" />
                                                            <Key frame="187" value="-5.29" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="0.173379" />
                                                            <Key frame="25" value="-0.353971" />
                                                            <Key frame="37" value="-0.00240423" />
                                                            <Key frame="50" value="-0.617646" />
                                                            <Key frame="62" value="-0.881321" />
                                                            <Key frame="75" value="-1.93602" />
                                                            <Key frame="87" value="-2.63916" />
                                                            <Key frame="100" value="-2.90283" />
                                                            <Key frame="112" value="-1.76312" />
                                                            <Key frame="125" value="-2.25198" />
                                                            <Key frame="137" value="-1.41155" />
                                                            <Key frame="150" value="0.261271" />
                                                            <Key frame="162" value="-0.125906" />
                                                            <Key frame="176" value="-0.361999" />
                                                            <Key frame="188" value="0.489337" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-4.39218" />
                                                            <Key frame="25" value="-4.39218" />
                                                            <Key frame="37" value="-4.39218" />
                                                            <Key frame="50" value="-4.39218" />
                                                            <Key frame="62" value="-4.39218" />
                                                            <Key frame="75" value="-4.39218" />
                                                            <Key frame="87" value="-4.39218" />
                                                            <Key frame="100" value="-4.39218" />
                                                            <Key frame="112" value="-4.48007" />
                                                            <Key frame="125" value="-4.48007" />
                                                            <Key frame="137" value="-4.48007" />
                                                            <Key frame="150" value="-4.56797" />
                                                            <Key frame="162" value="-4.74601" />
                                                            <Key frame="176" value="-3.82408" />
                                                            <Key frame="188" value="-4.69147" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-7.20472" />
                                                            <Key frame="25" value="-7.20472" />
                                                            <Key frame="37" value="-7.29261" />
                                                            <Key frame="50" value="-7.20472" />
                                                            <Key frame="62" value="-7.20472" />
                                                            <Key frame="75" value="-7.29261" />
                                                            <Key frame="87" value="-7.29261" />
                                                            <Key frame="100" value="-7.29261" />
                                                            <Key frame="112" value="-7.29261" />
                                                            <Key frame="125" value="-7.29261" />
                                                            <Key frame="137" value="-7.3805" />
                                                            <Key frame="150" value="-7.3805" />
                                                            <Key frame="162" value="-23.0252" />
                                                            <Key frame="175" value="7.12163" />
                                                            <Key frame="187" value="-10.4567" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="21.8826" />
                                                            <Key frame="25" value="21.8826" />
                                                            <Key frame="37" value="22.0584" />
                                                            <Key frame="50" value="21.8826" />
                                                            <Key frame="62" value="21.619" />
                                                            <Key frame="75" value="21.9705" />
                                                            <Key frame="87" value="21.8826" />
                                                            <Key frame="100" value="22.41" />
                                                            <Key frame="112" value="22.3221" />
                                                            <Key frame="125" value="22.4979" />
                                                            <Key frame="137" value="22.4979" />
                                                            <Key frame="150" value="22.3221" />
                                                            <Key frame="162" value="19.7732" />
                                                            <Key frame="175" value="19.5975" />
                                                            <Key frame="187" value="19.4217" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="-4.39218" />
                                                            <Key frame="25" value="-4.39218" />
                                                            <Key frame="37" value="-4.39218" />
                                                            <Key frame="50" value="-4.39218" />
                                                            <Key frame="62" value="-4.39218" />
                                                            <Key frame="75" value="-4.39218" />
                                                            <Key frame="87" value="-4.39218" />
                                                            <Key frame="100" value="-4.39218" />
                                                            <Key frame="112" value="-4.39218" />
                                                            <Key frame="125" value="-4.39218" />
                                                            <Key frame="137" value="-4.39218" />
                                                            <Key frame="150" value="-5.29" />
                                                            <Key frame="162" value="-5.29" />
                                                            <Key frame="175" value="-5.29" />
                                                            <Key frame="187" value="-5.29" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="3.43018" />
                                                            <Key frame="25" value="3.34229" />
                                                            <Key frame="37" value="3.51807" />
                                                            <Key frame="50" value="3.43018" />
                                                            <Key frame="62" value="3.51807" />
                                                            <Key frame="75" value="3.43018" />
                                                            <Key frame="87" value="2.99072" />
                                                            <Key frame="100" value="2.63916" />
                                                            <Key frame="112" value="1.23289" />
                                                            <Key frame="125" value="1.58446" />
                                                            <Key frame="137" value="1.23289" />
                                                            <Key frame="150" value="5.62747" />
                                                            <Key frame="162" value="3.17227" />
                                                            <Key frame="176" value="1.63962" />
                                                            <Key frame="187" value="1.26335" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="12" value="5.18802" />
                                                            <Key frame="25" value="5.18802" />
                                                            <Key frame="37" value="5.18802" />
                                                            <Key frame="50" value="5.18802" />
                                                            <Key frame="62" value="5.18802" />
                                                            <Key frame="75" value="5.27591" />
                                                            <Key frame="87" value="5.27591" />
                                                            <Key frame="100" value="5.27591" />
                                                            <Key frame="112" value="6.15482" />
                                                            <Key frame="125" value="6.15482" />
                                                            <Key frame="137" value="6.4185" />
                                                            <Key frame="150" value="5.97904" />
                                                            <Key frame="162" value="6.916" />
                                                            <Key frame="176" value="7.78854" />
                                                            <Key frame="187" value="7.56109" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Stand Up" id="7" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="270" y="421">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Sit Down" id="11" localization="8" tooltip="the robot tries to sit down from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="1237" y="382">
                                                <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in sitting down." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to sit down after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="SitDownBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="7" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="371" y="101">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Sit" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="4" />
                                            <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="10" indexofoutput="4" />
                                            <Link inputowner="13" indexofinput="2" outputowner="3" indexofoutput="4" />
                                            <Link inputowner="4" indexofinput="3" outputowner="13" indexofoutput="4" />
                                            <Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="4" />
                                            <Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="4" />
                                            <Link inputowner="11" indexofinput="2" outputowner="13" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="11" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="6" />
                        <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="4" />
                        <Link inputowner="6" indexofinput="2" outputowner="6" indexofoutput="4" />
                        <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="5" />
                        <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="5" />
                        <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="7" />
                        <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
